bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;  [CE]  cannot  find  symbol  typesToSkip  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	141	None	replace
2	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  registry);  [CE]  cannot  find  symbol  registry  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  registry);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  registry);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  registry	102	None	replace
3	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	102	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	83	None	replace
5	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	83	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType());  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.contains(typeSystem));  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.contains(typeSystem));  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.invalidatingTypes.contains(typeSystem));  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	83	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(this.invalidatingTypes!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.invalidatingTypes!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.invalidatingTypes!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	83	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  ||  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  ||  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  ||  typeSystem.isUnknownType());	  Preconditions.checkState(typeSystem!=    null    &&    typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null  &&  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null  &&  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null  &&  typeSystem.isUnknownType());	  Preconditions.checkState(typeSystem!=    null    &&    typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());	  Preconditions.checkState(typeSystem!=    null    &&    typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isNativeType());  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isNativeType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isNativeType());	  Preconditions.checkState(typeSystem!=    null    &&    typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);  [CE]  cannot  find  symbol  preconditions  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  preconditions	80	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	80	None	replace
15	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    typesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	replace
16	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    typesToErrorFor);    }    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	31	None	replace
17	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;  [CE]  cannot  find  symbol  typesToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	119	None	replace
18	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  typeSystem,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  typeSystem,  propertiesToErrorFor);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	181	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  typeSystem);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	181	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  this.typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  this.typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  this.typeSystem);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	181	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  typeSystem,  propertiesToErrorFor);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	181	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());	  Preconditions.checkArgument(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());	  Preconditions.checkArgument(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType(),  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType(),  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!typeSystem.isUnknownType(),  propertiesToErrorFor);	  Preconditions.checkArgument(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType(),  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType(),  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!typeSystem.isUnknownType(),  typeSystem.isUnknownType());	  Preconditions.checkArgument(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
26	[BUG]  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	145	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	145	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	145	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(this.invalidationMap!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.invalidationMap!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.invalidationMap!=  null);	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	145	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(!this.invalidationMap.isEmpty());  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.invalidationMap.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.invalidationMap.isEmpty());	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	145	None	replace
31	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree().getTypeSystem();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTree().getTypeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree().getTypeSystem();	  this.typeSystem    =    typeSystem.getTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
32	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.findTypeSystem();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.findTypeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.findTypeSystem();	  this.typeSystem    =    typeSystem.getTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
33	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  typesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToSkip,  typesToErrorFor);	  this.types    =    Collections.emptyMap(typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  types	95	None	replace
34	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToSkip,  propertiesToErrorFor);	  this.types    =    Collections.emptyMap(typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  types	95	None	replace
35	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  invalidatingTypes);  [CE]  cannot  find  symbol  types  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToSkip,  invalidatingTypes);	  this.types    =    Collections.emptyMap(typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  types	95	None	replace
36	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  renameNodes);  [CE]  cannot  find  symbol  types  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip,  renameNodes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToSkip,  renameNodes);	  this.types    =    Collections.emptyMap(typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  types	95	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	172	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	172	None	replace
39	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	172	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	172	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                      IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.EMPTYList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.EMPTYList();	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	172	None	replace
42	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [CE]  cannot  find  symbol  typesToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    new    HashSet    <    T>();    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	183	None	replace
43	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  TreeSet  <  T>();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  TreeSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  TreeSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    new    HashSet    <    T>();    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
44	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    new    HashSet    <    T>();    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	183	None	replace
45	[BUG]  [BUGGY]  this.types  =  Lists.newHashMap();  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newHashMap();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newHashMap();	  this.types    =    Lists.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  types	94	None	replace
46	[BUG]  [BUGGY]  this.types  =  Lists.newLinkedHashMap();  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newLinkedHashMap();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newLinkedHashMap();	  this.types    =    Lists.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  types	94	None	replace
47	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptySet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.  <  T>emptySet();	  this.validatingTypes    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	17	None	replace
48	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.EMPTY_LIST;  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.EMPTY_LIST;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.EMPTY_LIST;	  this.validatingTypes    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	17	None	replace
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	135	2	add
50	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	135	2	add
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	135	2	add
52	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	135	2	add
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	135	2	add
54	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	135	2	add
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	135	2	add
56	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	135	2	add
57	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  preconditions  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  cannot  find  symbol  preconditions	135	None	add
58	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	135	62	add
59	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	135	62	add
60	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty()  ||  typeSystem.isEmpty());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty()  ||  typeSystem.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty()  ||  typeSystem.isEmpty());	  Preconditions.checkState(typeSystem.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  typeSystem.isEmpty());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  typeSystem.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty(),  typeSystem.isEmpty());	  Preconditions.checkState(typeSystem.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  propertiesToErrorFor.isEmpty());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  propertiesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty(),  propertiesToErrorFor.isEmpty());	  Preconditions.checkState(typeSystem.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  typesToErrorFor.isEmpty());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  typesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty(),  typesToErrorFor.isEmpty());	  Preconditions.checkState(typeSystem.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null,  typesToSkip);	  Preconditions.checkState(typeSystem!=    null,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	158	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null,  propertiesToErrorFor);	  Preconditions.checkState(typeSystem!=    null,    typesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	158	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null,  propertiesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null,  propertiesToSkip);	  Preconditions.checkState(typeSystem!=    null,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	158	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null,  typesToSkip);	  Preconditions.checkState(typeSystem!=    null,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	158	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	152	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	152	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkState(this.invalidatingTypes!=  null);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.invalidatingTypes!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.invalidatingTypes!=  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	152	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    T>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	118	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    T>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	118	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    T>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	118	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]                IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    T>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	118	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]                  IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  T>  compiler  =  typeSystem.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    T>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	118	None	replace
76	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeSystem(this);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
77	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  null);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this,  null);	  this.typeSystem    =    typeSystem.getTypeSystem(this);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
78	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeSystem(this);  [CE]  cannot  find  symbol  typesToSkip  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeSystem(this);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeSystem(this);	  this.typeSystem    =    typeSystem.getTypeSystem(this);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	127	None	replace
79	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  tt);  [CE]  cannot  find  symbol  tt  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  tt);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this,  tt);	  this.typeSystem    =    typeSystem.getTypeSystem(this);    	non-compiled	[CE]  cannot  find  symbol  tt	127	None	replace
80	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	34	62	add
81	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	34	62	add
82	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	34	62	add
83	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	34	62	add
84	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	34	62	add
85	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	34	62	add
86	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	136	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	136	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	136	None	replace
89	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	151	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(typeSystem!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(typeSystem!=  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	151	None	replace
91	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	151	None	replace
92	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  cannot  find  symbol  registry  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  registry	99	None	replace
93	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  ';'  expected	99	None	replace
94	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.NO_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  ';'  expected	99	None	replace
95	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
96	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
98	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
99	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
100	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
101	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	108	62	add
102	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	108	62	add
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
104	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(this.invalidationMap!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(this.invalidationMap!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
106	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(this.invalidationMap!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(this.invalidationMap!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(this.invalidationMap!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	108	2	add
107	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToSkip);	  this.typeSystem    =    new    TypeSystem(typeSystem,    renameNodes);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	91	None	replace
108	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToError);  [CE]  cannot  find  symbol  propertiesToError  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToError);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToError);	  this.typeSystem    =    new    TypeSystem(typeSystem,    renameNodes);    	non-compiled	[CE]  cannot  find  symbol  propertiesToError	91	None	replace
109	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;  [CE]  cannot  find  symbol  typesToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind?((    UnionFind)typeSystem).getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	128	None	replace
110	[BUG]  [BUGGY]  this.types  =  Lists.EMPTY_LIST;  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.EMPTY_LIST;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.EMPTY_LIST;	  this.types    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  types	97	None	replace
111	[BUG]  [BUGGY]  this.types  =  TypeSystem.EMPTY_LIST;  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  TypeSystem.EMPTY_LIST;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  TypeSystem.EMPTY_LIST;	  this.types    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  types	97	None	replace
112	[BUG]  [BUGGY]  this.types  =  typesToSkip;  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  typesToSkip;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  typesToSkip;	  this.types    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  types	97	None	replace
113	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  Preconditions.checkNotNull(compiler);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty());  Preconditions.checkNotNull(compiler);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(compiler);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  Preconditions.checkNotNull(compiler);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType());  Preconditions.checkNotNull(compiler);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(compiler);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
115	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(compiler);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(compiler);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(compiler);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	48	None	replace
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
117	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
119	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
120	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
121	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
122	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
123	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propersToErrorFor);  [CE]  cannot  find  symbol  propersToErrorFor  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propersToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propersToErrorFor);	  	non-compiled	[CE]  cannot  find  symbol  propersToErrorFor	45	None	add
124	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	45	None	add
125	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToSkip  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	122	None	replace
126	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [CE]  cannot  find  symbol  registry  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  registry	122	None	replace
127	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.newArrayList();	  this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	18	None	replace
128	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem);  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newArrayList(typeSystem);	  this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	18	None	replace
129	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(0);  [CE]  cannot  find  symbol  validatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(0);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newArrayList(0);	  this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	18	None	replace
130	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem.size());  [CE]  cannot  find  symbol  validatingTypes  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem.size());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newArrayList(typeSystem.size());	  this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	18	None	replace
131	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  name);  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  name);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  name);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
132	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  names);  [CE]  cannot  find  symbol  names  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  names);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  names);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  cannot  find  symbol  names	13	None	replace
133	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  registry);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  registry);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  registry);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  cannot  find  symbol  registry	13	None	replace
134	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typeSystem);  [CE]  TypeSystem  is  abstract;  cannot  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typeSystem);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typeSystem);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  TypeSystem  is  abstract;  cannot  be  instantiated	13	None	replace
135	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem,  propertiesToErrorFor);	  this.typeSystem    =    typesToErrorFor,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	132	None	replace
136	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor,  propertiesToSkip);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor,  propertiesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor,  propertiesToSkip);	  this.typeSystem    =    typesToErrorFor,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	132	None	replace
137	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.buildTypeSystem();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.buildTypeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.buildTypeSystem();	  this.typeSystem    =    typeSystem.createTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
138	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.newTypeSystem();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.newTypeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.newTypeSystem();	  this.typeSystem    =    typeSystem.createTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
139	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  null;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  typesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  null;	  this.typeSystem    =    typeSystem,    propertiesToErrorFor    instanceof    UnknownType?(UnknownType)typeSystem    :    null;    	non-compiled	[CE]  ';'  expected	162	None	replace
140	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Lists.newArrayList();  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Lists.newArrayList();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Lists.newArrayList();	  this.typeSystem    =    typeSystem,    propertiesToErrorFor    instanceof    UnknownType?(UnknownType)typeSystem    :    null;    	non-compiled	[CE]  ';'  expected	162	None	replace
141	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Collections.emptySet();  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Collections.emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Collections.emptySet();	  this.typeSystem    =    typeSystem,    propertiesToErrorFor    instanceof    UnknownType?(UnknownType)typeSystem    :    null;    	non-compiled	[CE]  ';'  expected	162	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isEmpty());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!typeSystem.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isEmpty());	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkArgument(typeSystem.isEmpty());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(typeSystem.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(typeSystem.isEmpty());	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
144	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	148	None	replace
145	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	148	None	replace
146	[BUG]  [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typeRegistry  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	148	None	replace
147	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  registry);  [CE]  cannot  find  symbol  registry  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  registry);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  registry);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  registry	6	None	replace
148	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  DEFAULT_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  DEFAULT_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	6	None	replace
149	[BUG]  [BUGGY]  this.types  =  Collections.newHashSet();  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.newHashSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.newHashSet();	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	57	None	replace
150	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typesToSkip);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.newArrayList(typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.newArrayList(typesToSkip);	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	57	None	replace
151	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typeSystem.size());  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.newArrayList(typeSystem.size());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.newArrayList(typeSystem.size());	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	57	None	replace
152	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	4	None	replace
153	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [CE]  cannot  find  symbol  typesToSkip  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	4	None	replace
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
155	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
157	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
159	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
160	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  renameNodes);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  renameNodes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  renameNodes);	  this.typeSystem    =    typeSystem,    typesToErrorFor);    	non-compiled	[CE]  ';'  expected	1	None	replace
161	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  typesToSkip);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  typesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  typesToSkip);	  this.typeSystem    =    typeSystem,    typesToErrorFor);    	non-compiled	[CE]  ';'  expected	1	None	replace
162	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  renameNodes);  [CE]  cannot  find  symbol  renameNodes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  renameNodes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  renameNodes);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	147	None	replace
163	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  typesToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	147	None	replace
164	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  typesToSkip);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	147	None	replace
165	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  types);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  types);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  types);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  types	147	None	replace
166	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	138	None	replace
167	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem!=  null);	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	138	None	replace
168	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().build();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().build();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem().build();	  this.typeSystem    =    typeSystem.getTypeSystem().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
169	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  ';'  expected	178	None	replace
170	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	178	None	replace
171	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	58	None	replace
172	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.propertiesToErrorFor);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	58	None	replace
173	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.values());  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.values());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.values());	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	58	None	replace
174	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToSkip);  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.propertiesToSkip);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	58	None	replace
175	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.cloneTree());  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.cloneTree());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.cloneTree());	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	58	None	replace
176	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
177	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
178	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
179	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
180	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
181	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
182	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
183	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
184	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(compiler);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(compiler);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(compiler);	  this.typeSystem    =    typeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
185	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
186	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this.typeSystem);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this.typeSystem);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this.typeSystem);	  this.typeSystem    =    typeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
187	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(name);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(name);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(name);	  this.typeSystem    =    typeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  name	87	None	replace
188	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  typesToErrorFor);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  typesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree(),  typesToErrorFor);	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
189	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  name);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  name);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  name);	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
190	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  false);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  false);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  false);	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
191	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  null);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  null);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor,  null);	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
192	[BUG]  [BUGGY]  this.types  =  Lists.newHashSet();  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newHashSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newHashSet();	  this.types    =    Lists.emptySet();    	non-compiled	[CE]  cannot  find  symbol  types	112	None	replace
193	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  instanceof  UnknownTypeSystem);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  instanceof  UnknownTypeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  instanceof  UnknownTypeSystem);	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
194	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newHashSet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.newHashSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.newHashSet();	  this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	56	None	replace
195	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.newHashSet(typeSystem);  [CE]  cannot  find  symbol  validatingTypes  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Sets.newHashSet(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Sets.newHashSet(typeSystem);	  this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	56	None	replace
196	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newHashSet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.newHashSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newHashSet();	  this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	56	None	replace
197	[BUG]  [BUGGY]  this.typeSystem  =  registry  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  typeSystem;  [CE]  cannot  find  symbol  registry  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  typeSystem;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  typeSystem;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getTypeRegistry()    :    registry;    	non-compiled	[CE]  cannot  find  symbol  registry	92	None	replace
198	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?  registry.getTypeRegistry()  :((  UnionFind)typeSystem).getTypeRegistry();  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?  registry.getTypeRegistry()  :((  UnionFind)typeSystem).getTypeRegistry();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?  registry.getTypeRegistry()  :((  UnionFind)typeSystem).getTypeRegistry();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getTypeRegistry()    :    registry;    	non-compiled	[CE]  cannot  find  symbol  registry	92	None	replace
199	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.invalidationMap  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	49	None	replace
200	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	49	None	replace
201	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	49	None	replace
202	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	49	None	replace
203	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	49	None	replace
204	[BUG]  [BUGGY]  Collections.sort(typeSystem,  this.propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(typeSystem,  this.propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem,  this.propertiesToErrorFor);	  Collections.sort(this.propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	64	None	replace
205	[BUG]  [BUGGY]  Collections.sort(this.typeSystem);  [CE]  cannot  find  symbol  Collections  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(this.typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(this.typeSystem);	  Collections.sort(this.propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	64	None	replace
206	[BUG]  [BUGGY]  Collections.sort(compiler,  this.propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(compiler,  this.propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(compiler,  this.propertiesToErrorFor);	  Collections.sort(this.propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	64	None	replace
207	[BUG]  [BUGGY]  Collections.sort(this.propertiesToErrorFor,  typeSystem);  [CE]  cannot  find  symbol  Collections  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(this.propertiesToErrorFor,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(this.propertiesToErrorFor,  typeSystem);	  Collections.sort(this.propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	64	None	replace
208	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.EMPTY_SET;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.EMPTY_SET;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.EMPTY_SET;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
209	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.EMPTY_SETS;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.EMPTY_SETS;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.EMPTY_SETS;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
210	[BUG]  [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	29	None	replace
211	[BUG]  [BUGGY]  if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	29	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]        IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	117	None	replace
213	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	117	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	117	None	replace
215	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	117	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]                IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	117	None	replace
217	[BUG]  [BUGGY]  Context.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  Context  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Context.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Context.checkState(typeSystem!=  null);	          Preconditions.checkState(typeSystem!=    null);    Context.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  Context	28	None	replace
218	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  Context  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem!=  null);	          Preconditions.checkState(typeSystem!=    null);    Context.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  Context	28	None	replace
219	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem!=  null);  }  [CE]  cannot  find  symbol  Context  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem!=  null);  }	          Preconditions.checkState(typeSystem!=    null);    Context.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  Context	28	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  Context  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem  ==  null);	          Preconditions.checkState(typeSystem!=    null);    Context.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  Context	28	None	replace
221	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  registry  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	73	None	replace
222	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	73	None	replace
223	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	73	None	replace
224	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  cannot  find  symbol  registry  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	73	None	replace
225	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptySet();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptySet();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	187	None	replace
226	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptySet();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptySet();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	187	None	replace
227	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.emptySet();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.invalidatingTypes  =  Collections.emptySet();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	187	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptySet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptySet();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	187	None	replace
229	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	146	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType());  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.contains(typeSystem));  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.contains(typeSystem));  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.invalidatingTypes.contains(typeSystem));  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	146	None	replace
232	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	179	None	replace
233	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	179	None	replace
234	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
235	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  names);  [CE]  cannot  find  symbol  names  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  names);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  names);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol  names	7	None	replace
236	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor,  typesToSkip);  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToErrorFor,  typesToSkip);	  this.types    =    Collections.emptyMap(typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	149	None	replace
237	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typeSystem);  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typeSystem);	  this.types    =    Collections.emptyMap(typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	149	None	replace
238	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor,  propertiesToSkip);  [CE]  cannot  find  symbol  types  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor,  propertiesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToErrorFor,  propertiesToSkip);	  this.types    =    Collections.emptyMap(typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	149	None	replace
239	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	137	None	replace
240	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	137	None	replace
241	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  preconditions  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  preconditions	137	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	116	None	replace
243	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	116	None	replace
244	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	116	None	replace
245	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToSkip  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	157	None	replace
246	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [CE]  cannot  find  symbol  registry  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  registry	157	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	164	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	164	None	replace
249	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  registry);  [CE]  cannot  find  symbol  registry  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  registry);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  registry);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  registry	9	None	replace
250	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  typesToSkip  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	101	None	replace
251	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	101	None	replace
252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
253	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
254	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
255	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
257	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
258	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	42	2	add
259	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	42	2	add
260	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	42	None	add
261	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(compiler);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(compiler);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
262	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  tt);  [CE]  cannot  find  symbol  tt  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  tt);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  tt);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  tt	71	None	replace
263	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  registry);  [CE]  cannot  find  symbol  registry  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  registry);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  registry);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  registry	71	None	replace
264	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
265	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  +  1]);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  +  1]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  +  1]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[typeSystem.size()    ]);    	non-compiled	[CE]  ';'  expected	163	None	replace
266	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[typeSystem.size()    ]);    	non-compiled	[CE]  ';'  expected	163	None	replace
267	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  -  1]);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  -  1]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  -  1]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[typeSystem.size()    ]);    	non-compiled	[CE]  ';'  expected	163	None	replace
268	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  tt);  [CE]  cannot  find  symbol  tt  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  tt);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  tt);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  tt	74	None	replace
269	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  registry);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  registry);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  registry);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  registry	74	None	replace
270	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  ';'  expected	167	None	replace
271	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  ';'  expected	167	None	replace
272	[BUG]  [BUGGY]  this.typeSystem  =  TypeSystem.NO_TYPE;  [CE]  cannot  find  symbol  NO_TYPE  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  TypeSystem.NO_TYPE;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  TypeSystem.NO_TYPE;	  this.typeSystem    =    TypeSystem.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol  NO_TYPE	66	None	replace
273	[BUG]  [BUGGY]  this.typeSystem  =  TypeSystem.NONE;  [CE]  cannot  find  symbol  NONE  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  TypeSystem.NONE;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  TypeSystem.NONE;	  this.typeSystem    =    TypeSystem.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol  NONE	66	None	replace
274	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.unknownType();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.unknownType();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.unknownType();	  this.typeSystem    =    TypeSystem.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
275	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
276	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
277	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
278	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
279	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(typeSystem);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotEmpty(compiler);  Preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  cannot  find  symbol	150	None	add
280	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNull(compiler);  Preconditions.checkNotNull(typeSystem);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNull(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNull(compiler);  Preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  cannot  find  symbol	150	None	add
281	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(compiler);  Preconditions.checkNotNull(typeSystem);  [CE]  no  suitable  method  found  for  checkState(AbstractCompiler)  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkState(compiler);  Preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(AbstractCompiler)	150	None	add
282	[BUG]  [BUGGY]  this.typeSystem  =  typesToError;  [CE]  cannot  find  symbol  typesToError  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToError;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToError;	  this.typeSystem    =    typesToSkip;    	non-compiled	[CE]  cannot  find  symbol  typesToError	65	None	replace
283	[BUG]  [BUGGY]  this.typeSystem  =  renameNodes;  [CE]  cannot  find  symbol  renameNodes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  renameNodes;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  renameNodes;	  this.typeSystem    =    typesToSkip;    	non-compiled	[CE]  cannot  find  symbol  renameNodes	65	None	replace
284	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
285	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
286	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
287	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
288	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
289	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
290	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
291	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
292	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
293	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	168	62	add
294	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	168	62	add
295	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	168	62	add
296	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToError);  [CE]  cannot  find  symbol  typesToError  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToError);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToError);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  typesToError	188	None	replace
297	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToErrorFor,  propertiesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  typesToErrorFor,  propertiesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	188	None	replace
298	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  renameNodes);  [CE]  cannot  find  symbol  renameNodes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  renameNodes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  renameNodes);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	188	None	replace
299	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());	  Preconditions.checkState(typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
300	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType(),  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType(),  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType(),  typeSystem.isUnknownType());	  Preconditions.checkState(typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
301	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());	  Preconditions.checkState(typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
302	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());	  Preconditions.checkState(typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
304	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
305	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
306	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
307	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
308	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
310	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
312	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
313	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
314	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
315	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	171	None	replace
316	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	171	None	replace
317	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	123	None	replace
318	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertyToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertyToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	123	None	replace
319	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor?  null  :  typesToErrorFor);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor?  null  :  typesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  typesToErrorFor?  null  :  typesToErrorFor);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor?    null    :    typesToErrorFor);    	non-compiled	[CE]  ';'  expected	133	None	replace
320	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToSkip);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToSkip);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor?    null    :    typesToErrorFor);    	non-compiled	[CE]  ';'  expected	133	None	replace
321	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.clone();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.clone();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.clone();	  this.typeSystem    =    typeSystem.cloneTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
322	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  ';'  expected	176	None	replace
323	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE)+  1;	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  ';'  expected	176	None	replace
324	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	186	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	186	None	replace
326	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  NO_TYPE);  [CE]  cannot  find  symbol  NO_TYPE  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  NO_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    INVALIDATION_ON_TYPE);    	non-compiled	[CE]  cannot  find  symbol  NO_TYPE	156	None	replace
327	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  DEFAULT_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  DEFAULT_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    INVALIDATION_ON_TYPE);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	156	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  Preconditions.checkNotNull(propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty());  Preconditions.checkNotNull(propertiesToErrorFor);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
329	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  renameNodesToSkip);  [CE]  cannot  find  symbol  renameNodesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  renameNodesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  renameNodesToSkip);	  this.typeSystem    =    new    TypeSystem(typeSystem,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  renameNodesToSkip	15	None	replace
330	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.  <  T>emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.  <  T>emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.  <  T>emptyList();	  this.validatingTypes    =    Collections.    <    T>emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	19	None	replace
331	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyMap();  [CE]  cannot  find  symbol  validatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyMap();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.  <  T>emptyMap();	  this.validatingTypes    =    Collections.    <    T>emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	19	None	replace
332	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.  <  T>emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Sets.  <  T>emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Sets.  <  T>emptyList();	  this.validatingTypes    =    Collections.    <    T>emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	19	None	replace
333	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.newLinkedList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newLinkedList();	  this.validatingTypes    =    Lists.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	126	None	replace
334	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    new    HashSet    <    T>();    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	21	None	replace
335	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  TreeSet  <  T>();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  TreeSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  TreeSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    new    HashSet    <    T>();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
336	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    new    HashSet    <    T>();    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	21	None	replace
337	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToError);  [CE]  cannot  find  symbol  typesToError  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToError);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  typesToError);	  this.typeSystem    =    new    TypeSystem(typeSystem,    typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  typesToError	90	None	replace
338	[BUG]  [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	30	None	replace
339	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	30	None	replace
340	[BUG]  [BUGGY]  if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	30	None	replace
341	[BUG]  [BUGGY]  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	79	None	replace
342	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	79	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty());  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
344	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	79	None	replace
345	[BUG]  [BUGGY]  Preconditions.checkState(!this.propertiesToErrorFor.isEmpty());  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.propertiesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.propertiesToErrorFor.isEmpty());	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	79	None	replace
346	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor,  typeSystem);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor,  typeSystem);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor,  typeSystem);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
347	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(compiler,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(compiler,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(compiler,  propertiesToErrorFor);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
348	[BUG]  [BUGGY]  this.typeSystem  =  TypeSystem.getTypeSystem(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  TypeSystem.getTypeSystem(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  TypeSystem.getTypeSystem(compiler,  typeSystem,  propertiesToErrorFor);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
349	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  propertiesToErrorFor.isEmpty());  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  propertiesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  propertiesToErrorFor.isEmpty());	  Preconditions.checkState(typeSystem!=    null    &&    typesToErrorFor.isEmpty());    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	160	None	replace
350	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typesToSkip.isEmpty());  [CE]  cannot  find  symbol  typesToSkip  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typesToSkip.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typesToSkip.isEmpty());	  Preconditions.checkState(typeSystem!=    null    &&    typesToErrorFor.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	160	None	replace
351	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isEmpty());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isEmpty());	  Preconditions.checkState(typeSystem!=    null    &&    typesToErrorFor.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
352	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  ||  typesToErrorFor.isEmpty());  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  ||  typesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  ||  typesToErrorFor.isEmpty());	  Preconditions.checkState(typeSystem!=    null    &&    typesToErrorFor.isEmpty());    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	160	None	replace
353	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  ||  typeSystem.isEmpty());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  ||  typeSystem.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  ||  typeSystem.isEmpty());	  Preconditions.checkState(typeSystem!=    null    &&    typesToErrorFor.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
354	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
355	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	22	2	add
356	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	22	62	add
357	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	22	62	add
358	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	22	62	add
359	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	22	62	add
360	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  >=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	22	None	add
361	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null,  typeSystem);	  Preconditions.checkState(compiler    >=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	130	None	replace
362	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null,  typesToErrorFor);	  Preconditions.checkState(compiler    >=    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	130	None	replace
363	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  registry  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  registry	10	None	replace
364	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	10	None	replace
365	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	10	None	replace
366	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  name);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  name);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor,  name);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  ';'  expected	182	None	replace
367	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  typesToSkip);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  typesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor,  typesToSkip);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  ';'  expected	182	None	replace
368	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  logger);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  logger);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor,  logger);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  ';'  expected	182	None	replace
369	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  null);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  null);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor,  null);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  ';'  expected	182	None	replace
370	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
371	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  MAX_INVALIDATION_WARNINGS_PER_PROPERTY);  [CE]  cannot  find  symbol  MAX_INVALIDATION_WARNINGS_PER_PROPERTY  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  MAX_INVALIDATION_WARNINGS_PER_PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  MAX_INVALIDATION_WARNINGS_PER_PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol  MAX_INVALIDATION_WARNINGS_PER_PROPERTY	100	None	replace
372	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	165	None	replace
373	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  registry  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  registry	165	None	replace
374	[BUG]  [BUGGY]  this.propertiesToErrorFor  =  typesToErrorFor;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.propertiesToErrorFor  =  typesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.propertiesToErrorFor  =  typesToErrorFor;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	44	None	replace
375	[BUG]  [BUGGY]  Preconditions.checkState(this.propertiesToErrorFor  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.propertiesToErrorFor  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.propertiesToErrorFor  ==  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	44	None	replace
376	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(compiler  ==  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	121	None	replace
377	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.typeSystem!=  null);  [CE]  cannot  find  symbol  typeSystem  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(compiler.typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(compiler.typeSystem!=  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  cannot  find  symbol  typeSystem	121	None	replace
378	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.cloneTree();  [CE]  cannot  find  symbol  typesToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.cloneTree();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.cloneTree();	  this.typeSystem    =    typeSystem.typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	180	None	replace
379	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertyToSkip);  [CE]  cannot  find  symbol  propertyToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertyToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertyToSkip);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertyToSkip	131	None	replace
380	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  tt);  [CE]  cannot  find  symbol  tt  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  tt);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  tt);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	131	None	replace
381	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  preconditions  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem  ==  null);	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	170	None	replace
382	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  preconditions  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	170	None	replace
383	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  incompatible  types	189	None	replace
384	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind;  [CE]  cannot  find  symbol  typesToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	189	None	replace
385	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  typesToSkip  :  null;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  typesToSkip  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  typesToSkip  :  null;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	189	None	replace
386	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  typesToSkip  :  typesToSkip;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  typesToSkip  :  typesToSkip;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  typesToSkip  :  typesToSkip;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	189	None	replace
387	[BUG]  [BUGGY]  Context.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  Context  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Context.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Context.checkState(typeSystem  ==  null);	          Preconditions.checkState(typeSystem    ==    null);    Context.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Context	37	None	replace
388	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	82	None	replace
389	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType());  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
390	[BUG]  [BUGGY]  Preconditions.checkState(!this.validatingTypes.isEmpty());  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.validatingTypes.isEmpty());  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.validatingTypes.isEmpty());  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	82	None	replace
391	[BUG]  [BUGGY]  Preconditions.checkState(!this.validatingTypes.contains(typeSystem));  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.validatingTypes.contains(typeSystem));  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.validatingTypes.contains(typeSystem));  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	82	None	replace
392	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.EMPTY_SET;  [CE]  cannot  find  symbol  validatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.EMPTY_SET;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.EMPTY_SET;	  this.validatingTypes    =    Collections.EMPTY_SET;    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	54	None	replace
393	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.EMPTY_SET;  [CE]  cannot  find  symbol  validatingTypes  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Sets.EMPTY_SET;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Sets.EMPTY_SET;	  this.validatingTypes    =    Collections.EMPTY_SET;    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	54	None	replace
394	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  this.typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  this.typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  this.typeSystem);	  Preconditions.checkState(this.typeSystem!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	174	None	replace
395	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  typeSystem,  propertiesToErrorFor);	  Preconditions.checkState(this.typeSystem!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	174	None	replace
396	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  typeSystem);	  Preconditions.checkState(this.typeSystem!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	174	None	replace
397	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  typeSystem;	  Preconditions.checkState(this.typeSystem!=    typeSystem);    	non-compiled	[CE]  ')'  expected	174	None	replace
398	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	103	2	add
399	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	103	2	add
400	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	103	62	add
401	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	103	62	add
402	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	103	62	add
403	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	103	62	add
404	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >>  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	103	None	add
405	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	103	None	add
406	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	103	None	add
407	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	81	None	replace
408	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType());  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
409	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	81	None	replace
410	[BUG]  [BUGGY]  Preconditions.checkState(this.validatingTypes!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.validatingTypes!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.validatingTypes!=  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	81	None	replace
411	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrors);  [CE]  cannot  find  symbol  propertiesToErrors  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrors);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrors);	  this.typeSystem    =    new    TypeSystem(typeSystem,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  propertiesToErrors	143	None	replace
412	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getRenamedTypes()  :  null;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getRenamedTypes()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getRenamedTypes()  :  null;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	120	None	replace
413	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getName()  :  null;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getName()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getName()  :  null;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	120	None	replace
414	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getTypes()  :  null;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getTypes()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getTypes()  :  null;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	120	None	replace
415	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	120	None	replace
416	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToErrorFor);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  Collections	63	None	replace
417	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem,  typesToSkip);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	63	None	replace
418	[BUG]  [BUGGY]  Collections.sort(typeSystem,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(typeSystem,  propertyToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem,  propertyToErrorFor);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	63	None	replace
419	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	109	None	replace
420	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	109	None	replace
421	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types,  propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.types,  propertiesToErrorFor);	  this.types    =    Lists.newArrayList(typeSystem.types);    	non-compiled	[CE]  cannot  find  symbol  types	129	None	replace
422	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types,  typesToSkip);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.types,  typesToSkip);	  this.types    =    Lists.newArrayList(typeSystem.types);    	non-compiled	[CE]  cannot  find  symbol  types	129	None	replace
423	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.properties);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.properties);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.properties);	  this.types    =    Lists.newArrayList(typeSystem.types);    	non-compiled	[CE]  cannot  find  symbol  types	129	None	replace
424	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.typesToSkip);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.typesToSkip);	  this.types    =    Lists.newArrayList(typeSystem.types);    	non-compiled	[CE]  cannot  find  symbol  types	129	None	replace
425	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typeSystem;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typeSystem;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typeSystem;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  ')'  expected	39	None	replace
426	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getRenamingType()  :  null;  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getRenamingType()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getRenamingType()  :  null;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  ')'  expected	39	None	replace
427	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null,  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null,  typeSystem);	  Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	2	None	replace
428	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToErrorFor);  [CE]  TypeSystem  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    typesToSkip);    	non-compiled	[CE]  TypeSystem  is  abstract;  cannot  be  instantiated	12	None	replace
429	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	110	None	replace
430	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(compiler!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(compiler!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	110	None	replace
431	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	110	None	replace
432	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typesToSkip  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	76	None	replace
433	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	76	None	replace
434	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(typeSystem);  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(typeSystem);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	185	None	replace
435	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.unmodifiableSet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Sets.unmodifiableSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Sets.unmodifiableSet();	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	185	None	replace
436	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.unmodifiableSet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.unmodifiableSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.unmodifiableSet();	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	185	None	replace
437	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(),  typesToErrorFor);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(),  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(),  typesToErrorFor);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  ';'  expected	185	None	replace
438	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
439	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  names);  [CE]  cannot  find  symbol  names  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  names);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  names);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol  names	11	None	replace
440	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  DEFAULT_TYPE);  [CE]  cannot  find  symbol  DEFAULT_TYPE  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  DEFAULT_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  DEFAULT_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPE	11	None	replace
441	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  1);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  1);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  1);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	60	None	replace
442	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  2);  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  2);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  2);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	60	None	replace
443	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  +  1);  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  +  1);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  +  1);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	60	None	replace
444	[BUG]  [BUGGY]  Preconditions.checkArgument(this.typeSystem!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(this.typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(this.typeSystem!=  null);	  Preconditions.checkArgument(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	184	None	replace
445	[BUG]  [BUGGY]  Preconditions.checkArgument(typeSystem  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(typeSystem  ==  null);	  Preconditions.checkArgument(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	184	None	replace
446	[BUG]  [BUGGY]  Preconditions.checkArgument(propertiesToErrorFor!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(propertiesToErrorFor!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(propertiesToErrorFor!=  null);	  Preconditions.checkArgument(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	184	None	replace
447	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
448	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
449	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
450	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
451	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	105	62	add
452	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	105	62	add
453	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]          IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	105	None	add
454	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]            IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	105	None	add
455	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
456	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [FE]  IllegalStateException  [FE]              IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
457	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	32	62	add
458	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	32	62	add
459	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	32	62	add
460	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	32	62	add
461	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	32	62	add
462	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	32	62	add
463	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	169	None	replace
464	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  renamingNodes);  [CE]  cannot  find  symbol  renamingNodes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  renamingNodes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  renamingNodes);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renamingNodes	142	None	replace
465	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  registry	75	None	replace
466	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	75	None	replace
467	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	75	None	replace
468	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_SET;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_SET;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_SET;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
469	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_SETS;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_SETS;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_SETS;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
470	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	159	None	replace
471	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	8	None	replace
472	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	8	None	replace
473	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	8	None	replace
474	[BUG]  [BUGGY]  Collections.sort(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(compiler,  typeSystem,  propertiesToErrorFor);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	62	None	replace
475	[BUG]  [BUGGY]  Collections.sort(this.typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(this.typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(this.typeSystem,  propertiesToErrorFor);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	62	None	replace
476	[BUG]  [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor,  tt);  [CE]  cannot  find  symbol  tt  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem,  propertiesToErrorFor,  tt);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	62	None	replace
477	[BUG]  [BUGGY]  this.types  =  Sets.EMPTY_SET;  [CE]  cannot  find  symbol  types  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Sets.EMPTY_SET;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Sets.EMPTY_SET;	  this.types    =    Collections.EMPTY_SET;    	non-compiled	[CE]  cannot  find  symbol  types	96	None	replace
478	[BUG]  [BUGGY]  this.types  =  Lists.EMPTY_SET;  [CE]  cannot  find  symbol  types  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.EMPTY_SET;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.EMPTY_SET;	  this.types    =    Collections.EMPTY_SET;    	non-compiled	[CE]  cannot  find  symbol  types	96	None	replace
479	[BUG]  [BUGGY]  this.types  =  Collections.EMPTY_TYPES;  [CE]  cannot  find  symbol  types  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.EMPTY_TYPES;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.EMPTY_TYPES;	  this.types    =    Collections.EMPTY_SET;    	non-compiled	[CE]  cannot  find  symbol  types	96	None	replace
480	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	107	None	replace
481	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	107	None	replace
482	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	107	None	replace
483	[BUG]  [BUGGY]  Collections.sort(typeSystem,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(typeSystem,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem,  typesToSkip);	  Collections.sort(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	61	None	replace
484	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	72	None	replace
485	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  registry  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  registry	72	None	replace
486	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	72	None	replace
487	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry(),  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry(),  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry(),  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	72	None	replace
488	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	111	2	replace
489	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	111	2	replace
490	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	111	2	replace
491	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	111	2	replace
492	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  IllegalStateException  	111	62	replace
493	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [FE]  IllegalStateException  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  IllegalStateException  	111	62	replace
494	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor,  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(propertiesToErrorFor,  typeSystem);	  Preconditions.checkNotNull(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	85	None	replace
495	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler,  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler,  typeSystem);	  Preconditions.checkNotNull(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	85	None	replace
496	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler,  propertiesToErrorFor);	  Preconditions.checkNotNull(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	85	None	replace
497	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isUnknownType()  ||!typeSystem.isUnknownType());	  Preconditions.checkState(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
498	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isUnknownType()  ||  typeSystem.isUnknownType());	  Preconditions.checkState(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
499	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());	  Preconditions.checkState(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
500	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  &&!typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  &&!typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isUnknownType()  &&!typeSystem.isUnknownType());	  Preconditions.checkState(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
501	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  null,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  null,  propertiesToErrorFor);	  Preconditions.checkState(typeSystem!=    null,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	41	None	replace
502	[BUG]  [BUGGY]  Preconditions.checkState(propertiesToErrorFor!=  null,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(propertiesToErrorFor!=  null,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(propertiesToErrorFor!=  null,  propertiesToErrorFor);	  Preconditions.checkState(typeSystem!=    null,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	41	None	replace
503	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null,  propertiesToErrorFor);	  Preconditions.checkState(typeSystem!=    null,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	41	None	replace
504	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	154	None	replace
505	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeSystem(typeSystem);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeSystem(typeSystem);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeSystem(typeSystem);	  this.typeSystem    =    typesToSkip.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	89	None	replace
506	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(type);  [CE]  cannot  find  symbol  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(type);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(type);	  this.typeSystem    =    typesToSkip.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  type	89	None	replace
507	[BUG]  [BUGGY]  this.typeSystem  =  renameNodes.getTypeSystem(typeSystem);  [CE]  cannot  find  symbol  renameNodes  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  renameNodes.getTypeSystem(typeSystem);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  renameNodes.getTypeSystem(typeSystem);	  this.typeSystem    =    typesToSkip.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	89	None	replace
508	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry(),    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	70	None	replace
509	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry(),  typeSystem.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry(),  typeSystem.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry(),  typeSystem.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry(),    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	70	None	replace
510	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  this.typeSystem    =    typeSystem.getTypeRegistry(),    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	70	None	replace
511	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry(),    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	70	None	replace
512	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
513	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
514	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(typeSystem);  Preconditions.checkNotNull(typeSystem);  [CE]  no  suitable  method  found  for  checkState(TypeSystem<T>)  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkState(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  no  suitable  method  found  for  checkState(TypeSystem<T>)	77	None	add
515	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  cannot  find  symbol	77	None	add
516	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	144	2	add
517	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	144	2	add
518	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	144	2	add
519	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	144	2	add
520	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	144	2	add
521	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	144	2	add
522	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	144	2	add
523	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	144	2	add
524	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  preconditions  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  cannot  find  symbol  preconditions	144	None	add
525	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.validationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  validationMap  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.validationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.validationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  cannot  find  symbol  validationMap	144	None	add
526	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isInvalidating());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isInvalidating());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isInvalidating());	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
527	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet(typeSystem);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Sets.newHashSet(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Sets.newHashSet(typeSystem);	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  types	59	None	replace
528	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Lists.  <  T>emptySet();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Lists.  <  T>emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Lists.  <  T>emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.    <    T>emptySet();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
529	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptyList();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptyList();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptyList();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.    <    T>emptySet();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
530	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [CE]  cannot  find  symbol  typesToSkip  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.    <    T>emptySet();    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	68	None	replace
531	[BUG]  [BUGGY]  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);	          Preconditions.checkState(typeSystem!=    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	134	None	replace
532	[BUG]  [BUGGY]  This.types  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.types  =  Collections.EMPTY_LIST;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.types  =  Collections.EMPTY_LIST;	  This.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  This	177	None	replace
533	[BUG]  [BUGGY]  This.types  =  Collections.emptySet();  [CE]  cannot  find  symbol  This  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.types  =  Collections.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.types  =  Collections.emptySet();	  This.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  This	177	None	replace
534	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typesToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	69	None	replace
535	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	69	None	replace
536	[BUG]  [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typeRegistry  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeRegistry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	69	None	replace
537	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [CE]  cannot  find  symbol  registry  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  registry	5	None	replace
538	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    null);    	non-compiled	[CE]  ';'  expected	5	None	replace
539	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.NULL_TYPE,  null);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.NULL_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getNativeType(JSTypeNative.NULL_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    null);    	non-compiled	[CE]  ';'  expected	5	None	replace
540	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorInstance  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [CE]  cannot  find  symbol  typesToErrorInstance  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorInstance  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorInstance  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;	  this.typeSystem    =    typesToSkip    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorInstance	38	None	replace
541	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
542	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
543	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
544	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.FUNCTION);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.FUNCTION);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler.getType()  ==  Token.FUNCTION);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
545	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().createTypeSystem();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().createTypeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().createTypeSystem();	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
546	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().findTypeSystem(name);  [CE]  cannot  find  symbol  name  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().findTypeSystem(name);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().findTypeSystem(name);	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol  name	51	None	replace
547	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().cloneTree(registry);  [CE]  cannot  find  symbol  registry  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().cloneTree(registry);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().cloneTree(registry);	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol  registry	51	None	replace
548	[BUG]  [BUGGY]  this.types  =  Arrays.emptySet();  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Arrays.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Arrays.emptySet();	  this.types    =    Sets.emptySet();    	non-compiled	[CE]  cannot  find  symbol  types	113	None	replace
549	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.length  ]);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.length  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.length  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[propertiesToErrorFor.size()    ]);    	non-compiled	[CE]  ';'  expected	161	None	replace
550	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor.toArray(new  TypeSystem[propertiesToErrorFor.size()  ]);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor.toArray(new  TypeSystem[propertiesToErrorFor.size()  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  typesToErrorFor.toArray(new  TypeSystem[propertiesToErrorFor.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[propertiesToErrorFor.size()    ]);    	non-compiled	[CE]  ';'  expected	161	None	replace
551	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typesToErrorFor.size()  ]);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typesToErrorFor.size()  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typesToErrorFor.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[propertiesToErrorFor.size()    ]);    	non-compiled	[CE]  ';'  expected	161	None	replace
552	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);  [CE]  cannot  find  symbol  registry  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	123	None	replace
553	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  typesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this,  typesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeSystem(this);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	127	None	replace
554	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  typesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this,  typesToSkip);	  this.typeSystem    =    typeSystem.getTypeSystem(this);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	127	None	replace
555	[BUG]  [BUGGY]  renameNodes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  renameNodes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  renameNodes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	renameNodes  =  Lists.newArrayList();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  renameNodes	137	None	replace
556	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	33	None	replace
557	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  else  {  typesToErrorFor  =  new  HashMap  <  T>();  }  [CE]  cannot  find  symbol  typesToErrorFor  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  else  {  typesToErrorFor  =  new  HashMap  <  T>();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  else  {  typesToErrorFor  =  new  HashMap  <  T>();  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	33	None	replace
558	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE)+  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE)+  1;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE)+  1;	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  ';'  expected	167	None	replace
559	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneType(),  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneType(),  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneType(),  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
560	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  invalidatingTypes);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  invalidatingTypes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree(),  invalidatingTypes);	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
561	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.clone(),  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.clone(),  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.clone(),  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
562	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(propertiesToErrorFor);	  this.types    =    Collections.emptyMap(typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	149	None	replace
563	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor,  invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToErrorFor,  invalidatingTypes);	  this.types    =    Collections.emptyMap(typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	149	None	replace
564	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(this.typesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(this.typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(this.typesToErrorFor);	  this.types    =    Collections.emptyMap(typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	149	None	replace
565	[BUG]  [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [CE]  incompatible  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  incompatible  types	4	None	replace
566	[BUG]  [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [CE]  cannot  find  symbol  typeRegistry  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	4	None	replace
567	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  validationMap  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  cannot  find  symbol  validationMap	135	None	add
568	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToErrorFor;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToErrorFor;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToErrorFor;	  this.typeSystem    =    typeSystem,    propertiesToErrorFor?    null    :    typesToErrorFor);    	non-compiled	[CE]  ';'  expected	133	None	replace
569	[BUG]  [BUGGY]  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    T>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	118	None	replace
570	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.values);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.values);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.values);	  this.types    =    Lists.newArrayList(typeSystem.types);    	non-compiled	[CE]  cannot  find  symbol  types	129	None	replace
571	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_LIST;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.EMPTY_LIST;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
572	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	23	None	replace
573	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  }  [CE]  cannot  find  symbol  preconditions  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	23	None	replace
574	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	23	None	replace
575	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  null,  propertiesToErrorFor);  [CE]  TypeSystem  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  null,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  null,  propertiesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  TypeSystem  is  abstract;  cannot  be  instantiated	14	None	replace
576	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  null);  [CE]  TypeSystem  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  null);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  null);	  this.typeSystem    =    new    TypeSystem(typeSystem,    renameNodes);    	non-compiled	[CE]  TypeSystem  is  abstract;  cannot  be  instantiated	91	None	replace
577	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToErrorFor,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypesToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToErrorFor,  propertiesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypesToErrorFor	12	None	replace
578	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	12	None	replace
579	[BUG]  [BUGGY]  this.typeSystem  =  TypeSystem.INVALIDATION;  [CE]  cannot  find  symbol  INVALIDATION  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  TypeSystem.INVALIDATION;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  TypeSystem.INVALIDATION;	  this.typeSystem    =    TypeSystem.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION	66	None	replace
580	[BUG]  [BUGGY]  renameNodes  =  Collections.emptyList();  [CE]  cannot  find  symbol  renameNodes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  renameNodes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	renameNodes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  renameNodes	146	None	replace
581	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isInvalidatingType());  [CE]  method  isInvalidatingType  in  interface  TypeSystem<T#2>  cannot  be  applied  to  given  types;  [FE]        IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isInvalidatingType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isInvalidatingType());	  Preconditions.checkState(typeSystem!=    null    &&    typeSystem.isUnknownType());    	non-compiled	[CE]  method  isInvalidatingType  in  interface  TypeSystem<T#2>  cannot  be  applied  to  given  types;	140	None	replace
582	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isAllType());  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isAllType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isAllType());	  Preconditions.checkState(typeSystem!=    null    &&    typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
583	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isRenameable());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isRenameable());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isRenameable());	  Preconditions.checkState(typeSystem!=    null    &&    typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
584	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertyToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertyToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	73	None	replace
585	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null,  invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null,  invalidatingTypes);	  Preconditions.checkState(typeSystem!=    null,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	158	None	replace
586	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(invalidatingTypes);  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newArrayList(invalidatingTypes);	  this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	18	None	replace
587	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(propertiesToErrorFor,  propertiesToErrorFor);	  Preconditions.checkNotNull(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	85	None	replace
588	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(propertiesToErrorFor,  typesToErrorFor);	  Preconditions.checkNotNull(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	85	None	replace
589	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertyToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertyToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	8	None	replace
590	[BUG]  [BUGGY]  Collections.sort(typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(typeSystem,  invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem,  invalidatingTypes);	  Collections.sort(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	61	None	replace
591	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	111	None	replace
592	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTreeSystem();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTreeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTreeSystem();	  this.typeSystem    =    typeSystem.cloneTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
593	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(typeSystem);  Preconditions.checkNotNull(typeSystem);  [CE]  no  suitable  method  found  for  checkArgument(TypeSystem<T>)  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkArgument(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(TypeSystem<T>)	77	None	add
594	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
595	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	77	2	add
596	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystems.size()  ]);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystems.size()  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystems.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[propertiesToErrorFor.size()    ]);    	non-compiled	[CE]  ';'  expected	161	None	replace
597	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  3);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  3);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  3);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	60	None	replace
598	[BUG]  [BUGGY]  This.types  =  Lists.newArrayList();  [CE]  cannot  find  symbol  This  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.types  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.types  =  Lists.newArrayList();	  This.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  This	177	None	replace
599	[BUG]  [BUGGY]  Preconditions.checkNotNull(validatingTypes);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(validatingTypes);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(validatingTypes);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	82	None	replace
600	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  >>  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	34	None	add
601	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    null;    	non-compiled	[CE]  ')'  expected	141	None	replace
602	[BUG]  [BUGGY]  renameNodes  =  Collections.emptySet();  [CE]  cannot  find  symbol  renameNodes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  renameNodes  =  Collections.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	renameNodes  =  Collections.emptySet();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  renameNodes	187	None	replace
603	[BUG]  [BUGGY]  Preconditions.checkNotNull(validationMap);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  validationMap  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(validationMap);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(validationMap);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  cannot  find  symbol  validationMap	154	None	replace
604	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
605	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
606	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
607	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	150	2	add
608	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  ';'  expected	178	None	replace
609	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  registry	178	None	replace
610	[BUG]  [BUGGY]  Collections.sort(typeSystem,  invalidatingTypesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(typeSystem,  invalidatingTypesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem,  invalidatingTypesToErrorFor);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypesToErrorFor	62	None	replace
611	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkNotNull(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkNotNull(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
612	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkNotNull(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkNotNull(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkNotNull(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	24	62	add
613	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.EMPTYList();  [CE]  cannot  find  symbol  validatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.EMPTYList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.EMPTYList();	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	186	None	replace
614	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	107	None	replace
615	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  typesToErrorFor;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  typesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  typesToErrorFor;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	107	None	replace
616	[BUG]  [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  incompatible  types  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  incompatible  types	101	None	replace
617	[BUG]  [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  typeRegistry  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	101	None	replace
618	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler!=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler!=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	103	None	add
619	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(typeSystem);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	155	None	replace
620	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	155	None	replace
621	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(propertiesToErrorFor  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(propertiesToErrorFor  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(propertiesToErrorFor  ==  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	155	None	replace
622	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
623	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
624	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
625	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
626	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
627	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
628	[BUG]  [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  compiler.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  incompatible  types	148	None	replace
629	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typeSystem;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typeSystem;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typeSystem;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	119	None	replace
630	[BUG]  [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  compiler.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  incompatible  types	76	None	replace
631	[BUG]  [BUGGY]  this.types  =  Lists.newLinkedList();  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newLinkedList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newLinkedList();	  this.types    =    Lists.emptyList();    	non-compiled	[CE]  cannot  find  symbol  types	98	None	replace
632	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    new    HashSet    <    T>();    	non-compiled	[CE]  ')'  expected	183	None	replace
633	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null,  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(compiler!=  null,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(compiler!=  null,  typeSystem);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	121	None	replace
634	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	152	None	replace
635	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	152	None	replace
636	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	168	62	add
637	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	168	62	add
638	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.validationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  validationMap  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.validationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.validationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  cannot  find  symbol  validationMap	168	None	add
639	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  preconditions  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  cannot  find  symbol  preconditions	168	None	add
640	[BUG]  [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  compiler.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  compiler.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
641	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  NodeTraversal.traverse(compiler,  typeSystem,  invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	NodeTraversal.traverse(compiler,  typeSystem,  invalidatingTypes);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	43	None	replace
642	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION);  [CE]  cannot  find  symbol  INVALIDATION  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    INVALIDATION_ON_TYPE);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION	156	None	replace
643	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION_PROPERTY);  [CE]  cannot  find  symbol  INVALIDATION_PROPERTY  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION_PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION_PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    INVALIDATION_ON_TYPE);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION_PROPERTY	156	None	replace
644	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	106	None	replace
645	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.    <    T>emptySet();    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	68	None	replace
646	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
647	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
648	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler  ==  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler  ==  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	105	None	add
649	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
650	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	105	62	add
651	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.emptySet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Sets.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Sets.emptySet();	  this.validatingTypes    =    Lists.emptySet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	55	None	replace
652	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  INVALIDATION_ON_TYPE);  [CE]  cannot  find  symbol  INVALIDATION_ON_TYPE  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  INVALIDATION_ON_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  INVALIDATION_ON_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION_ON_TYPE	7	None	replace
653	[BUG]  [BUGGY]  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem!=    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	134	None	replace
654	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(validatingTypesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [CE]  cannot  find  symbol  validatingTypesToErrorFor  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(validatingTypesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(validatingTypesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);	  	non-compiled	[CE]  cannot  find  symbol  validatingTypesToErrorFor	45	None	add
655	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
656	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
657	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
658	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
659	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor,  typeSystem);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor,  typeSystem);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor,  typeSystem);	  this.typeSystem    =    typeSystem,    typesToErrorFor);    	non-compiled	[CE]  ';'  expected	1	None	replace
660	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypesToErrorFor	131	None	replace
661	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);  [CE]  cannot  find  symbol  INVALIDATION_ON_TYPE  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION_ON_TYPE	9	None	replace
662	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	9	None	replace
663	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem,  invalidatingTypes);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	63	None	replace
664	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);	  this.typeSystem    =    typeSystem.getTypeRegistry(),    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	70	None	replace
665	[BUG]  [BUGGY]  this.types  =  new  HashSet  <  String>();  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  new  HashSet  <  String>();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  new  HashSet  <  String>();	  this.types    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  types	97	None	replace
666	[BUG]  [BUGGY]  this.types  =  typesToErrorFor;  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  typesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  typesToErrorFor;	  this.types    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  types	97	None	replace
667	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typeSystem);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.newArrayList(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.newArrayList(typeSystem);	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	57	None	replace
668	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	104	None	replace
669	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem  ==  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem  ==  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem  ==  typeSystem);	  Preconditions.checkState(this.typeSystem!=    typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	174	None	replace
670	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	179	None	replace
671	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  renamingNodes);  [CE]  cannot  find  symbol  renamingNodes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  renamingNodes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  renamingNodes);	  this.typeSystem    =    new    TypeSystem(typeSystem,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renamingNodes	143	None	replace
672	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypes,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypes,  propertiesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	188	None	replace
673	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);  [CE]  cannot  find  symbol  INVALIDATION_ON_TYPE  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION_ON_TYPE	71	None	replace
674	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	71	None	replace
675	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.emptySet();  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	20	None	replace
676	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType(),  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType(),  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isUnknownType(),  propertiesToErrorFor);	  Preconditions.checkState(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
677	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty(),  propertiesToErrorFor);	  Preconditions.checkState(typeSystem.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
678	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  typesToErrorFor);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isEmpty(),  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty(),  typesToErrorFor);	  Preconditions.checkState(typeSystem.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
679	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  typesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[typeSystem.size()    ]);    	non-compiled	[CE]  ';'  expected	163	None	replace
680	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
681	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
682	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
683	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	108	2	add
684	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  rootTypes);  [CE]  cannot  find  symbol  rootTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  rootTypes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  rootTypes);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	13	None	replace
685	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    typesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	replace
686	[BUG]  [BUGGY]  if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem  ==  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    typesToErrorFor);    }    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	31	None	replace
687	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    preconditions.checkNotNull(compiler);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	48	None	replace
688	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().renameNodes();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().renameNodes();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem().renameNodes();	  this.typeSystem    =    typeSystem.getTypeSystem().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
689	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  null.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  null.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  null.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  ';'  expected	72	None	replace
690	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    new    HashSet    <    T>();    	non-compiled	[CE]  ')'  expected	21	None	replace
691	[BUG]  [BUGGY]  Preconditions.checkNotNull(validatingTypes);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(validatingTypes);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(validatingTypes);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	81	None	replace
692	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);  [CE]  cannot  find  symbol  INVALIDATION_ON_TYPE  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  INVALIDATION_ON_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION_ON_TYPE	74	None	replace
693	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	74	None	replace
694	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(propertiesToErrorFor);  [CE]  cannot  find  symbol  preconditions  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(propertiesToErrorFor);	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  preconditions	80	None	replace
695	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.findTypeSystem(name);  [CE]  cannot  find  symbol  name  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.findTypeSystem(name);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.findTypeSystem(name);	  this.typeSystem    =    typeSystem.getTypeSystem();    	non-compiled	[CE]  cannot  find  symbol  name	86	None	replace
696	[BUG]  [BUGGY]  this.types  =  typesToErrorFor.emptySet();  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  typesToErrorFor.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  typesToErrorFor.emptySet();	  this.types    =    Sets.emptySet();    	non-compiled	[CE]  cannot  find  symbol  types	113	None	replace
697	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  PROPERTY);  [CE]  cannot  find  symbol  PROPERTY  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  PROPERTY);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  PROPERTY);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  PROPERTY	6	None	replace
698	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typesToErrorFor;  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typesToErrorFor;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typesToErrorFor;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  ')'  expected	39	None	replace
699	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	44	None	replace
700	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	44	None	replace
701	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(this.propertiesToErrorFor  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(this.propertiesToErrorFor  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(this.propertiesToErrorFor  ==  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	44	None	replace
702	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	29	None	replace
703	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(invalidatingTypes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(invalidatingTypes);	  this.typeSystem    =    typesToSkip.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	89	None	replace
704	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToSkip);  [CE]  cannot  find  symbol  invalidatingTypesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToSkip);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypesToSkip);	  this.typeSystem    =    new    TypeSystem(typeSystem,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypesToSkip	15	None	replace
705	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(propertiesToErrorFor);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	83	None	replace
706	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(propertiesToErrorFor);  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(propertiesToErrorFor);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	185	None	replace
707	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(invalidatingTypes);  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(invalidatingTypes);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	185	None	replace
708	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typeSystem;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typeSystem;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  typeSystem;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	124	None	replace
709	[BUG]  [BUGGY]  this.types  =  LinkedHashMultimap.newHashSet();  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  LinkedHashMultimap.newHashSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  LinkedHashMultimap.newHashSet();	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  types	59	None	replace
710	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeSystem().cloneTree();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeSystem().cloneTree();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeSystem().cloneTree();	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
711	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().cloneTree();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().cloneTree();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().cloneTree();	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
712	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().findTypeSystem(this);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().findTypeSystem(this);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().findTypeSystem(this);	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
713	[BUG]  [BUGGY]  Collections.sort(invalidatingTypes,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(invalidatingTypes,  propertiesToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	147	None	replace
714	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  propertiesToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  Collections	147	None	replace
715	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.renameNodes();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.renameNodes();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.renameNodes();	  this.typeSystem    =    typeSystem.typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
716	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this.typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this.typeSystem,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this.typeSystem,  propertiesToErrorFor);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
717	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor,  typesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(propertiesToErrorFor,  typesToErrorFor);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	88	None	replace
718	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToError);  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(typesToError);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToError);	  this.types    =    Collections.emptyMap(typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  types	95	None	replace
719	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(invalidatingTypes);  [CE]  cannot  find  symbol  types  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.emptyMap(invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(invalidatingTypes);	  this.types    =    Collections.emptyMap(typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  types	95	None	replace
720	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
721	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  ComparisonFailure  	47	2	replace
722	[BUG]  [BUGGY]  Preconditions.checkState(!skipRenaming);  Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;  [CE]  cannot  find  symbol  skipRenaming  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!skipRenaming);  Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!skipRenaming);  Preconditions.checkNotNull(typeSystem);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  cannot  find  symbol  skipRenaming	47	None	replace
723	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  null  :  typesToErrorFor;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  null  :  typesToErrorFor;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?  null  :  typesToErrorFor;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	189	None	replace
724	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind  &&  invalidatingTypes.contains(typeSystem);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind  &&  invalidatingTypes.contains(typeSystem);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind  &&  invalidatingTypes.contains(typeSystem);	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	189	None	replace
725	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind  &&  invalidatingTypes.size()  ==  1;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind  &&  invalidatingTypes.size()  ==  1;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind  &&  invalidatingTypes.size()  ==  1;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	189	None	replace
726	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType(),  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType(),  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType(),  propertiesToErrorFor);	  Preconditions.checkState(typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
727	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
728	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
729	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
730	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
731	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor,  invalidatingTypes);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  ';'  expected	182	None	replace
732	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  new  CheckLevel  <  T>());  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  new  CheckLevel  <  T>());  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor,  new  CheckLevel  <  T>());	  this.typeSystem    =    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  ';'  expected	182	None	replace
733	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isAll());  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isAll());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isAll());	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    >=    null);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
734	[BUG]  [BUGGY]  Preconditions.checkState(compiler.typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  typeSystem  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler.typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler.typeSystem,  propertiesToErrorFor);	  Preconditions.checkNotNull(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typeSystem	85	None	replace
735	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  else  {  typesToErrorFor  =  Collections.emptySet();  }  [CE]  cannot  find  symbol  typesToErrorFor  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  else  {  typesToErrorFor  =  Collections.emptySet();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  }  else  {  typesToErrorFor  =  Collections.emptySet();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	25	None	replace
736	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  validatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	186	None	replace
737	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  }  else  {  this.validatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  }  else  {  this.validatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  }  else  {  this.validatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	186	None	replace
738	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	8	None	replace
739	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	75	None	replace
740	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null  /*non-standard  type*/);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null  /*non-standard  type*/);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null  /*non-standard  type*/);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
741	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.unmodifiableList();	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	185	None	replace
742	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getTypeRegistry()!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(compiler.getTypeRegistry()!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(compiler.getTypeRegistry()!=  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	121	None	replace
743	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.typeSystem();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.typeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.typeSystem();	  this.typeSystem    =    typeSystem.typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
744	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  This  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  This	159	None	replace
745	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToSkip);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	63	None	replace
746	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  IllegalStateException  	47	62	replace
747	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	compilable	  [FE]  IllegalStateException  	47	62	replace
748	[BUG]  [BUGGY]  Preconditions.checkState(!skipRenaming);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [CE]  cannot  find  symbol  skipRenaming  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!skipRenaming);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!skipRenaming);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  cannot  find  symbol  skipRenaming	47	None	replace
749	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorSystem;  [CE]  cannot  find  symbol  typesToErrorSystem  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorSystem;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorSystem;	  this.typeSystem    =    typesToSkip;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorSystem	65	None	replace
750	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this.propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this.propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this.propertiesToErrorFor);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
751	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(registry,  propertiesToErrorFor);  [CE]  cannot  find  symbol  registry  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(registry,  propertiesToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(registry,  propertiesToErrorFor);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	88	None	replace
752	[BUG]  [BUGGY]  Preconditions.checkState(this.invalidatingTypes  ==  null);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.invalidatingTypes  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.invalidatingTypes  ==  null);	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	171	None	replace
753	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	119	None	replace
754	[BUG]  [BUGGY]  Preconditions.checkState(this.invalidationMap  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.invalidationMap  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.invalidationMap  ==  null);	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	154	None	replace
755	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE)||  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE)||  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE)||  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  ';'  expected	176	None	replace
756	[BUG]  [BUGGY]  Preconditions.checkState(!this.validatingTypes.isEmpty());  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.validatingTypes.isEmpty());  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.validatingTypes.isEmpty());  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	81	None	replace
757	[BUG]  [BUGGY]  Preconditions.checkState(!this.validatingTypes.contains(typeSystem));  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.validatingTypes.contains(typeSystem));  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.validatingTypes.contains(typeSystem));  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	81	None	replace
758	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);	  this.typeSystem    =    typeSystem.getTypeRegistry(),    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	70	None	replace
759	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [CE]  cannot  find  symbol  This  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  This	157	None	replace
760	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    typeSystem);    	non-compiled	[CE]  ';'  expected	157	None	replace
761	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTyperegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTyperegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTyperegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
762	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(typeSystem);  Preconditions.checkArgument(typeSystem);  [CE]  no  suitable  method  found  for  checkArgument(TypeSystem<T>)  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(typeSystem);  Preconditions.checkArgument(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkArgument(typeSystem);  Preconditions.checkArgument(typeSystem);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(TypeSystem<T>)	77	None	add
763	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet(propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Sets.newHashSet(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Sets.newHashSet(propertiesToErrorFor);	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  types	59	None	replace
764	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [CE]  cannot  find  symbol  typesToSkip  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	5	None	replace
765	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [CE]  cannot  find  symbol  This  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  This	5	None	replace
766	[BUG]  [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  &&  typesToErrorFor.isEmpty());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  &&  typesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!typeSystem.isUnknownType()  &&  typesToErrorFor.isEmpty());	  Preconditions.checkArgument(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
767	[BUG]  [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!typeSystem.isUnknownType()  &&  typeSystem.isUnknownType());	  Preconditions.checkArgument(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	175	None	replace
768	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	46	None	replace
769	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  this.typeSystem  =  typeSystem;  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  this.typeSystem  =  typeSystem;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  this.typeSystem  =  typeSystem;  }	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	46	None	replace
770	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  typesToErrorFor  =  typeSystem;  }  [CE]  cannot  find  symbol  typesToErrorFor  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  typesToErrorFor  =  typeSystem;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  typesToErrorFor  =  typeSystem;  }	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	46	None	replace
771	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  propertiesToErrorFor  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  propertiesToErrorFor  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  propertiesToErrorFor	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  ')'  expected	46	None	replace
772	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  names);  [CE]  cannot  find  symbol  names  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  names);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  names);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  names	71	None	replace
773	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)	45	None	add
774	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
775	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	45	2	add
776	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkArgument(compiler);  Preconditions.checkArgument(propertiesToErrorFor);  [CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkArgument(compiler);  Preconditions.checkArgument(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(propertiesToErrorFor);    Preconditions.checkArgument(compiler);  Preconditions.checkArgument(propertiesToErrorFor);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)	45	None	add
777	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  &&  typesToErrorFor.isEmpty());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType()  &&  typesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isUnknownType()  &&  typesToErrorFor.isEmpty());	  Preconditions.checkState(!typeSystem.isUnknownType());    	non-compiled	[CE]  cannot  find  symbol	173	None	replace
778	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	33	None	replace
779	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem!=  null);  }  [CE]  cannot  find  symbol  preconditions  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem!=  null);  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	33	None	replace
780	[BUG]  [BUGGY]  Preconditions.checkArgument(!this.invalidationMap.isEmpty());  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(!this.invalidationMap.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!this.invalidationMap.isEmpty());	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	145	None	replace
781	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTreeTypeSystem();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTreeTypeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTreeTypeSystem();	  this.typeSystem    =    typeSystem.cloneTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
782	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.computeTypeSystem();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.computeTypeSystem();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.computeTypeSystem();	  this.typeSystem    =    typeSystem.cloneTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
783	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
784	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertyToErrorFor);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertyToErrorFor);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertyToErrorFor);	  this.typeSystem    =    typeSystem,    typesToErrorFor);    	non-compiled	[CE]  ';'  expected	1	None	replace
785	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeSystemReferences().cloneTree();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeSystemReferences().cloneTree();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeSystemReferences().cloneTree();	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
786	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.OBJECT_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
787	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  NON_GLOBAL_TYPE);  [CE]  cannot  find  symbol  NON_GLOBAL_TYPE  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  NON_GLOBAL_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  NON_GLOBAL_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_TYPE	11	None	replace
788	[BUG]  [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.isEmpty());  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.isEmpty());  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.invalidatingTypes.isEmpty());  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	152	None	replace
789	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor;	  this.typeSystem    =    typeSystem.cloneTree(),    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	52	None	replace
790	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  ';'  expected	178	None	replace
791	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  this);  [CE]  TypeSystem  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  this);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  this);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  TypeSystem  is  abstract;  cannot  be  instantiated	14	None	replace
792	[BUG]  [BUGGY]  Preconditions.checkArgument(typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkArgument(typeSystem.isUnknownType());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(typeSystem.isUnknownType());	  Preconditions.checkNotNull(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
793	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	139	None	replace
794	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	139	None	replace
795	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(typeSystem);  [CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)	150	None	add
796	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(compiler);  Preconditions.checkArgument(typeSystem!=  null);  [CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkArgument(compiler);  Preconditions.checkArgument(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(typeSystem);    Preconditions.checkArgument(compiler);  Preconditions.checkArgument(typeSystem!=  null);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)	150	None	add
797	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
798	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
799	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
800	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  Lists.newArrayList();	          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	49	None	replace
801	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  4);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  4);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  4);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	60	None	replace
802	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  cannot  find  symbol  typesToSkip  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	99	None	replace
803	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  cannot  find  symbol  This  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol  This	99	None	replace
804	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	164	None	replace
805	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	164	None	replace
806	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	164	None	replace
807	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	172	None	replace
808	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	172	None	replace
809	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	73	None	replace
810	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	137	None	replace
811	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  else  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  else  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  else  {  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	137	None	replace
812	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  else  {  this.invalidatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	137	None	replace
813	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Collections.emptyList();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Collections.emptyList();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  Collections.emptyList();	  this.typeSystem    =    typeSystem,    propertiesToErrorFor    instanceof    UnknownType?(UnknownType)typeSystem    :    null;    	non-compiled	[CE]  ';'  expected	162	None	replace
814	[BUG]  [BUGGY]  this.typeSystem  =  TypeSystem.NOT;  [CE]  cannot  find  symbol  NOT  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  TypeSystem.NOT;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  TypeSystem.NOT;	  this.typeSystem    =    TypeSystem.UNKNOWN;    	non-compiled	[CE]  cannot  find  symbol  NOT	66	None	replace
815	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.newHashSet(propertiesToErrorFor);  [CE]  cannot  find  symbol  validatingTypes  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Sets.newHashSet(propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Sets.newHashSet(propertiesToErrorFor);	  this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	56	None	replace
816	[BUG]  [BUGGY]  this.types  =  Sets.emptyList();  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Sets.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Sets.emptyList();	  this.types    =    Lists.emptyList();    	non-compiled	[CE]  cannot  find  symbol  types	98	None	replace
817	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.isUnknownType());  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.isUnknownType());  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.isUnknownType());  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
818	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    typeSystem);    	non-compiled	[CE]  ';'  expected	122	None	replace
819	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [CE]  cannot  find  symbol  This  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  This	122	None	replace
820	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTyperegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTyperegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTyperegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
821	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem  ==  typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem  ==  typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem  ==  typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.propertiesToErrorFor    =    propertiesToErrorFor;    	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	79	None	replace
822	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [CE]  cannot  find  symbol  This  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    Collections.    <    T>emptySet();    	non-compiled	[CE]  cannot  find  symbol  This	68	None	replace
823	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	108	62	add
824	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	108	62	add
825	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	138	None	replace
826	[BUG]  [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  typeRegistry  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeRegistry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	  this.typeSystem    =    registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  typeRegistry	76	None	replace
827	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	109	None	replace
828	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	109	None	replace
829	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)||  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)||  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE)||  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	179	None	replace
830	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	  this.typeSystem    =    typeSystem,    registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	179	None	replace
831	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);  }  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);  }	          Preconditions.checkState(typeSystem!=    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	134	None	replace
832	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  Preconditions.checkState(compiler!=  null);  }  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  Preconditions.checkState(compiler!=  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  Preconditions.checkState(compiler!=  null);  }	          Preconditions.checkState(typeSystem!=    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	134	None	replace
833	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  Preconditions.checkState(compiler  ==  null);  }  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  Preconditions.checkState(compiler  ==  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  typeSystem.getCompiler();  Preconditions.checkState(compiler  ==  null);  }	          Preconditions.checkState(typeSystem!=    null);    AbstractCompiler    <    Object>    compiler    =    compiler.getCompiler();    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	134	None	replace
834	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  typesToErrorFor);	  Preconditions.checkState(this.typeSystem!=    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	174	None	replace
835	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
836	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);  Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	42	2	add
837	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(compiler);  [CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    Preconditions.checkArgument(compiler);  Preconditions.checkNotNull(compiler);	  	non-compiled	[CE]  no  suitable  method  found  for  checkArgument(AbstractCompiler)	42	None	add
838	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
839	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	153	2	add
840	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
841	[BUG]  [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(compiler);        Preconditions.checkNotNull(compiler);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	153	2	add
842	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	22	2	add
843	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	22	2	add
844	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().instance.cloneTree();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().instance.cloneTree();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem().instance.cloneTree();	  this.typeSystem    =    typeSystem.getTypeSystem().cloneTree();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
845	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().findTypeSystem(name);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().findTypeSystem(name);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem().findTypeSystem(name);	  this.typeSystem    =    typeSystem.getTypeSystem().cloneTree();    	non-compiled	[CE]  cannot  find  symbol  name	50	None	replace
846	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknown());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem.isUnknown());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknown());	  Preconditions.checkState(typeSystem.isEmpty());    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
847	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typeSystem.types);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.newArrayList(typeSystem.types);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.newArrayList(typeSystem.types);	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	57	None	replace
848	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typeSystem);  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newArrayListWithCapacity(typeSystem);	  this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	18	None	replace
849	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	144	2	add
850	[BUG]  [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkNotNull(typeSystem);        Preconditions.checkNotNull(typeSystem);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(typeSystem!=  null);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	144	2	add
851	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null  &&  propertiesToErrorFor.isEmpty());  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem  ==  null  &&  propertiesToErrorFor.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  ==  null  &&  propertiesToErrorFor.isEmpty());	  Preconditions.checkState(typeSystem!=    null    &&    typesToErrorFor.isEmpty());    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	160	None	replace
852	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.check(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.check(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.check(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
853	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  }  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	23	None	replace
854	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  registry;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  registry;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  registry;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getTypeRegistry()    :    registry;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	92	None	replace
855	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  typeSystem;  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(compiler!=  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  typeSystem;	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  ')'  expected	181	None	replace
856	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }	  if(typeSystem!=    null)    {    this.typeSystem    =    typeSystem;    }    else    {    System.arraycopy(typeSystem,    0,    this.propertiesToErrorFor,    0,    typesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	replace
857	[BUG]  [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  This  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  This.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  This	165	None	replace
858	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  cannot  find  symbol  Collections  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }	          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  cannot  find  symbol  Collections	136	None	replace
859	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  types);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this,  types);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this,  types);	  this.typeSystem    =    typeSystem.getTypeSystem(this);    	non-compiled	[CE]  cannot  find  symbol  types	127	None	replace
860	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.typeSystem!=  null,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  null,  typesToErrorFor);	  Preconditions.checkState(typeSystem!=    null,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	158	None	replace
861	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getName()  :  null;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getName()  :  null;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getName()  :  null;	  this.typeSystem    =    typesToErrorFor    instanceof    UnionFind;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	189	None	replace
862	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  names);  [CE]  cannot  find  symbol  names  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  names);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  names);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,    name);    	non-compiled	[CE]  cannot  find  symbol  names	74	None	replace
863	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.resolveTypes();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.resolveTypes();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.resolveTypes();	  this.typeSystem    =    typeSystem.getTypeSystem();    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
864	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  NUMBER_TYPE);  [CE]  cannot  find  symbol  NUMBER_TYPE  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  NUMBER_TYPE);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  NUMBER_TYPE);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    tt);    	non-compiled	[CE]  cannot  find  symbol  NUMBER_TYPE	7	None	replace
865	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToError);  [CE]  cannot  find  symbol  propertiesToError  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToError);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToError);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor,    typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  propertiesToError	12	None	replace
866	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.validatingTypes  ==  null);  this.validatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.validatingTypes  ==  null);  this.validatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.validatingTypes  ==  null);  this.validatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	116	None	replace
867	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	116	None	replace
868	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.guessingTypes!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  guessingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.guessingTypes!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.guessingTypes!=  null);  this.validatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  guessingTypes	116	None	replace
869	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typesToErrorFor);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	123	None	replace
870	[BUG]  [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.isEmpty());  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.invalidatingTypes.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.invalidatingTypes.isEmpty());	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	146	None	replace
871	[BUG]  [BUGGY]  Preconditions.checkState(this.propertiesToErrorFor!=  null,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.propertiesToErrorFor!=  null,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.propertiesToErrorFor!=  null,  propertiesToErrorFor);	  Preconditions.checkState(typeSystem!=    null,    propertiesToErrorFor);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	41	None	replace
872	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[this.typeSystem.size()  ]);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[this.typeSystem.size()  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[this.typeSystem.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[propertiesToErrorFor.size()    ]);    	non-compiled	[CE]  ';'  expected	161	None	replace
873	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]          IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();	          Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler    <    T>    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	118	None	replace
874	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertyToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem,  propertyToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertyToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor.toArray(new    TypeSystem[typeSystem.size()    ]);    	non-compiled	[CE]  ';'  expected	163	None	replace
875	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().findNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().findNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().findNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
876	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null  /*non-standard  type*/);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null  /*non-standard  type*/);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null  /*non-standard  type*/);	  this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,    null);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
877	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.check(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);  Preconditions.check(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem!=        null);        Preconditions.checkState(typeSystem    ==    null);    Preconditions.check(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	non-compiled	[CE]  cannot  find  symbol	24	None	add
878	[BUG]  [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.check(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);  Preconditions.check(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(typeSystem        ==        null);        Preconditions.checkState(typeSystem!=    null);    Preconditions.check(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
879	[BUG]  [BUGGY]  this.types  =  Collections.  <  T>emptyList();  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.  <  T>emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.  <  T>emptyList();	  this.types    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  types	97	None	replace
880	[BUG]  [BUGGY]  this.types  =  Collections.  <  T>emptySet();  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.types  =  Collections.  <  T>emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.  <  T>emptySet();	  this.types    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  cannot  find  symbol  types	97	None	replace
881	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  cannot  find  symbol  Collections  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }	          Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem    ==    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  cannot  find  symbol  Collections	169	None	replace
882	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem  ==  null);  }  [CE]  cannot  find  symbol  Context  [FE]              IllegalStateException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem  ==  null);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem  ==  null);  }	          Preconditions.checkState(typeSystem    ==    null);    Context.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol  Context	37	None	replace
883	[BUG]  [BUGGY]  Preconditions.checkState(!this.validatingTypes.isEmpty());  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(!this.validatingTypes.isEmpty());  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!this.validatingTypes.isEmpty());	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	82	None	replace
884	[BUG]  [BUGGY]  Preconditions.checkState(this.validatingTypes!=  null);  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  Preconditions.checkState(this.validatingTypes!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.validatingTypes!=  null);	          Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	82	None	replace
885	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typeSystem;  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typeSystem;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typeSystem;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	120	None	replace
886	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typesToErrorFor;  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typesToErrorFor;  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  typesToErrorFor;	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	120	None	replace
887	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();  [BUGGY]      this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();	  this.typeSystem    =(typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	120	None	replace
888	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	103	2	add
889	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	103	2	add
890	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	103	None	add
891	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyArray();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;      [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyArray();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.  <  T>emptyArray();	  this.validatingTypes    =    Collections.    <    T>emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	19	None	replace
