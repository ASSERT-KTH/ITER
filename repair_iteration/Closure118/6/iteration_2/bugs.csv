bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  typesToErrorFor);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  typesToErrorFor);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	7	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(compiler  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  ==  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	16	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	16	None	replace
4	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol  registry	6	None	replace
5	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  null);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
6	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  name);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  name);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol  name	6	None	replace
7	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  tt);  [CE]  cannot  find  symbol  tt  [FE]                        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  tt);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  tt);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol  tt	6	None	replace
8	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
9	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  name);  [CE]  cannot  find  symbol  name  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  name);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  name);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
10	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  null);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
11	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  tt);  [CE]  cannot  find  symbol  tt  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  tt);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  tt);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  tt	4	None	replace
12	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToSkip);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  typesToSkip);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	21	None	replace
13	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  tt);  [CE]  cannot  find  symbol  tt  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  tt);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	21	None	replace
14	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  null);  [CE]  TypeSystem  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  null);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  null);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  TypeSystem  is  abstract;  cannot  be  instantiated	21	None	replace
15	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToErrorFor);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  typesToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	21	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem  ==  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(this.typeSystem  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem  ==  null);	      Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	20	None	replace
17	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.EMPTY_LIST;	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	26	None	replace
18	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.newArrayList();	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	26	None	replace
19	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.  <  T>emptyList();	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	26	None	replace
20	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.emptySet();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.emptySet();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  Collections.emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
21	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    null;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	13	2	add
23	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  ComparisonFailure  	13	2	add
24	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	13	62	add
25	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	13	62	add
26	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  >=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	13	None	add
27	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  >>  null);  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem  >>  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem  >>  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	13	None	add
28	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  Context  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Context.checkState(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Context.checkState(typeSystem!=  null);	  	non-compiled	[CE]  cannot  find  symbol  Context	13	None	add
29	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  }	  this.typeSystem    =    typeSystem,    propertiesToErrorFor;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	10	None	replace
30	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  }	  this.typeSystem    =    typeSystem,    propertiesToErrorFor;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	10	None	replace
31	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	if(typeSystem!=  null)  {  this.typeSystem  =  typeSystem;  }  else  {  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  }	  this.typeSystem    =    typeSystem,    propertiesToErrorFor;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	10	None	replace
32	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	19	62	add
33	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	19	62	add
34	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	19	62	add
35	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem!=  null);	  	compilable	  [FE]  IllegalStateException  	19	62	add
36	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  >=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	19	None	add
37	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  Context  [FE]          IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Context.checkState(typeSystem  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Context.checkState(typeSystem  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  Context	19	None	add
38	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [CE]  cannot  find  symbol  typesToSkip  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	33	None	replace
39	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  ')'  expected	33	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(typeSystem  >=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem  >=  null);	      Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	14	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(typeSystem!=  null,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null,  propertiesToErrorFor);	      Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	14	None	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	17	2	add
43	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);	  	compilable	  [FE]  ComparisonFailure  	17	2	add
44	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	17	None	add
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	17	2	add
46	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(propertiesToErrorFor);	  	compilable	  [FE]  ComparisonFailure  	17	2	add
47	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	17	None	add
48	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  preconditions.checkNotNull(compiler);  [CE]  cannot  find  symbol  preconditions  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  preconditions.checkNotNull(compiler);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  preconditions.checkNotNull(compiler);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	17	None	add
49	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  Lists.newArrayList();	  	non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	17	None	add
50	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().cloneTree();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem().cloneTree();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem().cloneTree();	  this.typeSystem    =    typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
51	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().cloneTree();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().cloneTree();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().cloneTree();	  this.typeSystem    =    typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
52	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTree(),  propertiesToErrorFor);	  this.typeSystem    =    typeSystem.cloneTree();    	non-compiled	[CE]  ';'  expected	9	None	replace
53	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.createTypeSystem();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.createTypeSystem();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.createTypeSystem();	  this.typeSystem    =    typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
54	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_SET;  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Collections.EMPTY_SET;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.EMPTY_SET;	      this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	29	None	replace
55	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.emptySet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Lists.emptySet();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.emptySet();	      this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	29	None	replace
56	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.newHashSet();  [CE]  cannot  find  symbol  validatingTypes  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Sets.newHashSet();	      this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	29	None	replace
57	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList();  [CE]  cannot  find  symbol  types  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Collections.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.newArrayList();	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
58	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem);  [CE]  cannot  find  symbol  types  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Lists.newArrayList(typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
59	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet();  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Sets.newHashSet();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Sets.newHashSet();	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
60	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size());  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size());  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.size());	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
61	[BUG]  [BUGGY]  Collections.sort(typeSystem);  [CE]  cannot  find  symbol  Collections  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Collections.sort(typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	1	None	replace
62	[BUG]  [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(typeSystem,  propertiesToErrorFor);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	1	None	replace
63	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem);  [CE]  cannot  find  symbol  Collections  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	1	None	replace
64	[BUG]  [BUGGY]  Collections.sort(this.propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Collections.sort(this.propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(this.propertiesToErrorFor);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  Collections	1	None	replace
65	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip;  [CE]  cannot  find  symbol  typesToSkip  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToSkip;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip;	  this.typeSystem    =    typesToErrorFor;    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	8	None	replace
66	[BUG]  [BUGGY]  this.typeSystem  =  TypeSystem.UNKNOWN;  [CE]  cannot  find  symbol  UNKNOWN  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  TypeSystem.UNKNOWN;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  TypeSystem.UNKNOWN;	  this.typeSystem    =    typesToErrorFor;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	8	None	replace
67	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
68	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  Collections.  <  T>emptySet();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
69	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  registry  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  registry	3	None	replace
70	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry(),  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	3	None	replace
71	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);  [CE]  cannot  find  symbol  name  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);	      this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  name	3	None	replace
72	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	      this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
73	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  propertiesToErrorFor);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
74	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);  [CE]  cannot  find  symbol  name  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  name);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  name	2	None	replace
75	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  null);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
76	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  registry  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  registry	2	None	replace
77	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	11	2	add
78	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	11	2	add
79	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	11	None	add
80	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);  [CE]  cannot  find  symbol  preconditions  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  preconditions.checkNotNull(typeSystem);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	11	None	add
81	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  validatingTypes	11	None	add
82	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.validatingTypes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  validatingTypes	11	None	add
83	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	11	None	add
84	[BUG]  [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(propertiesToErrorFor);	      Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	12	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem,  propertiesToErrorFor);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkNotNull(typeSystem,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkNotNull(typeSystem,  propertiesToErrorFor);	      Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	12	None	replace
86	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem();	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
87	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(typeSystem);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(typeSystem);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(typeSystem);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
88	[BUG]  [BUGGY]  this.typeSystem  =  TypeSystem.getTypeSystem(typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  TypeSystem.getTypeSystem(typeSystem,  propertiesToErrorFor);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  TypeSystem.getTypeSystem(typeSystem,  propertiesToErrorFor);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
89	[BUG]  [BUGGY]  this.typeSystem  =  typesToSkip.getTypeSystem(typeSystem);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToSkip.getTypeSystem(typeSystem);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToSkip.getTypeSystem(typeSystem);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	23	None	replace
90	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  typesToSkip);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  typesToSkip);	  this.typeSystem    =    new    TypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	22	None	replace
91	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  renameNodes);  [CE]  cannot  find  symbol  renameNodes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  renameNodes);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  renameNodes);	  this.typeSystem    =    new    TypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	22	None	replace
92	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  registry;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  registry;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  registry;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
93	[BUG]  [BUGGY]  this.typeSystem  =  registry  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;  [CE]  cannot  find  symbol  registry  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  registry  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol  registry	32	None	replace
94	[BUG]  [BUGGY]  this.types  =  Lists.emptyMap();  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Lists.emptyMap();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.emptyMap();	      this.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  types	28	None	replace
95	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Collections.emptyMap(typesToSkip);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToSkip);	      this.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  types	28	None	replace
96	[BUG]  [BUGGY]  this.types  =  Collections.EMPTY_SET;  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Collections.EMPTY_SET;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.EMPTY_SET;	      this.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  types	28	None	replace
97	[BUG]  [BUGGY]  this.types  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  types  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Collections.EMPTY_LIST;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.EMPTY_LIST;	      this.types    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  types	25	None	replace
98	[BUG]  [BUGGY]  this.types  =  Lists.emptyList();  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Lists.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.emptyList();	      this.types    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  types	25	None	replace
99	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  null);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
100	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  tt);  [CE]  cannot  find  symbol  tt  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  tt);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  tt);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  tt	5	None	replace
101	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  cannot  find  symbol  registry  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  registry	5	None	replace
102	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  name);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  name);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	15	2	add
104	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	15	2	add
105	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	15	62	add
106	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	15	62	add
107	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	15	None	add
108	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	15	2	add
109	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	15	2	add
110	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	15	None	add
111	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	15	None	add
112	[BUG]  [BUGGY]  this.types  =  Lists.emptySet();  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Lists.emptySet();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.emptySet();	      this.types    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  types	27	None	replace
113	[BUG]  [BUGGY]  this.types  =  Sets.emptySet();  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Sets.emptySet();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Sets.emptySet();	      this.types    =    Collections.emptySet();    	non-compiled	[CE]  cannot  find  symbol  types	27	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(typeSystem.isEmpty());  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isEmpty());	      Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
115	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	15	None	add
116	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  validatingTypes	15	None	add
117	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();	  	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	19	None	add
118	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]      IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    AbstractCompiler  <  T>  compiler  =  compiler.getCompiler();	  	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	19	None	add
119	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	31	None	replace
120	[BUG]  [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =(typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  ')'  expected	31	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkArgument(compiler!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(compiler!=  null);	      Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	18	None	replace
122	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  typeSystem);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
123	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE,  propertiesToErrorFor);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
124	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaringType()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaringType()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	33	None	replace
125	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.cloneTypeSystem();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.cloneTypeSystem();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.cloneTypeSystem();	  this.typeSystem    =    typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
126	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Lists.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Lists.emptyList();	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	26	None	replace
127	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeSystem(this);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeSystem(this);	  this.typeSystem    =    TypeSystem.getTypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
128	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getTypeRegistry()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getTypeRegistry()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	32	None	replace
129	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types);  [CE]  cannot  find  symbol  types  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Lists.newArrayList(typeSystem.types);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(compiler  >=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler  >=  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	16	None	replace
131	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertyToErrorFor);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertyToErrorFor);	  this.typeSystem    =    new    TypeSystem(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	22	None	replace
132	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToErrorFor,  propertiesToErrorFor);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor,  propertiesToErrorFor);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	7	None	replace
133	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToErrorFor);  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToErrorFor);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor?  null  :  typesToErrorFor);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	7	None	replace
134	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);  [CE]  type  AbstractCompiler  does  not  take  parameters  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    AbstractCompiler  <  Object>  compiler  =  compiler.getCompiler();  Preconditions.checkState(typeSystem!=  null);	  	non-compiled	[CE]  type  AbstractCompiler  does  not  take  parameters	13	None	add
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	13	2	add
136	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	13	2	add
137	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	13	None	add
138	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  preconditions.checkState(typeSystem!=  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	13	None	add
139	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	13	None	add
140	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isUnknownType());  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typeSystem.isUnknownType());	      Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
141	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredProperties()  :  null;	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredProperties()    :    null;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	30	None	replace
142	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  invalidatingTypes);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	21	None	replace
143	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypes);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  invalidatingTypes);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	21	None	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	11	2	add
145	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	11	2	add
146	[BUG]  [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(typeSystem);  Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(typeSystem);    Preconditions.checkNotNull(typeSystem);  this.invalidatingTypes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	11	None	add
147	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Collections.sort(propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Collections.sort(propertiesToErrorFor,  invalidatingTypes);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	1	None	replace
148	[BUG]  [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [CE]  cannot  find  symbol  registry  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  registry.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol  registry	4	None	replace
149	[BUG]  [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.types  =  Collections.emptyMap(typesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.types  =  Collections.emptyMap(typesToErrorFor);	      this.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  types	28	None	replace
150	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	17	2	add
151	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(typeSystem);	  	compilable	  [FE]  ComparisonFailure  	17	2	add
152	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	17	None	add
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	17	2	add
154	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	17	2	add
155	[BUG]  [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  preconditions.checkNotNull(propertiesToErrorFor);  [CE]  cannot  find  symbol  preconditions  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkNotNull(compiler);  Preconditions.checkNotNull(compiler);  preconditions.checkNotNull(propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkNotNull(compiler);    Preconditions.checkNotNull(compiler);  preconditions.checkNotNull(propertiesToErrorFor);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	17	None	add
156	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION_ON_TYPE);  [CE]  cannot  find  symbol  INVALIDATION_ON_TYPE  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION_ON_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  INVALIDATION_ON_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION_ON_TYPE	5	None	replace
157	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE,  typeSystem);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(typeSystem!=  null,  typesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null,  typesToErrorFor);	      Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	14	None	replace
159	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
160	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typesToErrorFor.isEmpty());  [CE]  cannot  find  symbol  typesToErrorFor  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(typeSystem!=  null  &&  typesToErrorFor.isEmpty());  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem!=  null  &&  typesToErrorFor.isEmpty());	      Preconditions.checkState(typeSystem!=    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	14	None	replace
161	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[propertiesToErrorFor.size()  ]);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[propertiesToErrorFor.size()  ]);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[propertiesToErrorFor.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor;    	non-compiled	[CE]  ';'  expected	10	None	replace
162	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  null;  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  null;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor  instanceof  UnknownType?(UnknownType)typeSystem  :  null;	  this.typeSystem    =    typeSystem,    propertiesToErrorFor;    	non-compiled	[CE]  ';'  expected	10	None	replace
163	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor.toArray(new  TypeSystem[typeSystem.size()  ]);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor;    	non-compiled	[CE]  ';'  expected	10	None	replace
164	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	15	None	add
165	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeObjectType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
166	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(typeSystem.isUnknownType());  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(typeSystem.isUnknownType());	      Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
167	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NULL_TYPE);    	non-compiled	[CE]  ';'  expected	6	None	replace
168	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	add	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	19	62	add
169	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	19	62	add
170	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);  [CE]  cannot  find  symbol  preconditions  [FE]      IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  preconditions.checkState(typeSystem  ==  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	19	None	add
171	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	19	None	add
172	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem  ==  null);  Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem    ==    null);    Preconditions.checkState(typeSystem  ==  null);  this.invalidatingTypes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	19	None	add
173	[BUG]  [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(!typeSystem.isUnknownType());  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(!typeSystem.isUnknownType());	      Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
174	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(this.typeSystem!=  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(this.typeSystem!=  typeSystem);	      Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	12	None	replace
175	[BUG]  [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkArgument(!typeSystem.isUnknownType());  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(!typeSystem.isUnknownType());	      Preconditions.checkNotNull(typeSystem);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
176	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  ';'  expected	5	None	replace
177	[BUG]  [BUGGY]  This.types  =  Collections.emptyMap();  [CE]  cannot  find  symbol  This  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  This.types  =  Collections.emptyMap();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	This.types  =  Collections.emptyMap();	      this.types    =    Collections.emptyMap();    	non-compiled	[CE]  cannot  find  symbol  This	28	None	replace
178	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE,  typeSystem);	      this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
179	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  registry.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);	      this.typeSystem    =    typeSystem.getTypeRegistry().getTypeRegistry().getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  ';'  expected	3	None	replace
180	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem.typeSystem.cloneTree();  [CE]  cannot  find  symbol  typeSystem  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem.typeSystem.cloneTree();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem.typeSystem.cloneTree();	  this.typeSystem    =    typeSystem.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  typeSystem	9	None	replace
181	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  typeSystem);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkState(compiler!=  typeSystem);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkState(compiler!=  typeSystem);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	16	None	replace
182	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  tt);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem,  propertiesToErrorFor,  tt);	  this.typeSystem    =    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  ';'  expected	7	None	replace
183	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typeSystem  instanceof  UnionFind?((  UnionFind)typeSystem).getDeclaredTypes()  :  new  HashSet  <  T>();	  this.typeSystem    =    typeSystem    instanceof    UnionFind?((    UnionFind)typeSystem).getDeclaredTypes()    :    null;    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
184	[BUG]  [BUGGY]  Preconditions.checkArgument(typeSystem!=  null);  [CE]  variable  typeSystem  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  Preconditions.checkArgument(typeSystem!=  null);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	Preconditions.checkArgument(typeSystem!=  null);	      Preconditions.checkState(typeSystem    ==    null);    	non-compiled	[CE]  variable  typeSystem  might  not  have  been  initialized	20	None	replace
185	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet();  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.validatingTypes  =  Collections.unmodifiableSet();	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	26	None	replace
186	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  validatingTypes	13	None	add
187	[BUG]  [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptySet();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]      Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	        Preconditions.checkState(typeSystem!=    null);    Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Collections.emptySet();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	13	None	add
188	[BUG]  [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToSkip);  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  new  TypeSystem(typeSystem,  propertiesToErrorFor,  propertiesToSkip);	  this.typeSystem    =    new    TypeSystem(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	21	None	replace
189	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;    [BUGGY]  this.typeSystem  =  typesToErrorFor  instanceof  UnionFind;  [BUGGY]    this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	305	305	2	replace	this.typeSystem  =  typesToErrorFor  instanceof  UnionFind;	  this.typeSystem    =    typesToErrorFor;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	8	None	replace
