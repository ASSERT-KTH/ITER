bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  ++instancesSkipped;  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	add	++instancesSkipped;	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
2	[BUG]  [BUGGY]  ++instancesSkipped;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  ++instancesSkipped;  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	++instancesSkipped;	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  ++singleTypeProps;  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	add	++singleTypeProps;	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
4	[BUG]  [BUGGY]  ++singleTypeProps;  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  ++singleTypeProps;  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	++singleTypeProps;	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
5	[BUG]  [BUGGY]  if(!skipRenaming)  {  ++propsSkipped;  }  [CE]  cannot  find  symbol  skipRenaming  [FE]        ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  if(!skipRenaming)  {  ++propsSkipped;  }  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	if(!skipRenaming)  {  ++propsSkipped;  }	++propsSkipped;  	non-compiled	[CE]  cannot  find  symbol  skipRenaming	1	None	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  ++propsRenamed;  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	add	++propsRenamed;	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
7	[BUG]  [BUGGY]  ++propsRenamed;  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  ++propsRenamed;  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	++propsRenamed;	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	add	  	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
9	[BUG]  [BUGGY]    [FE]  ComparisonFailure  [FE]            ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	  	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
10	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  [CE]  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));		non-compiled	[CE]  	2	None	add
11	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString());  [CE]  cannot  find  symbol  node  [FE]      ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString());  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString());		non-compiled	[CE]  cannot  find  symbol  node	2	None	add
12	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " ");  [CE]  cannot  find  symbol  node  [FE]        ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " ");  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " ");		non-compiled	[CE]  cannot  find  symbol  node	2	None	add
13	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),  null);  [CE]  cannot  find  symbol  node  [FE]          ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),  null);  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),  null);		non-compiled	[CE]  cannot  find  symbol  node	2	None	add
14	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   "* ");  [CE]  cannot  find  symbol  node  [FE]            ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   "* ");  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   "* ");		non-compiled	[CE]  cannot  find  symbol  node	2	None	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  if(prop.skipRenaming)  {  ++propsSkipped;  }  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	add	if(prop.skipRenaming)  {  ++propsSkipped;  }	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
16	[BUG]  [BUGGY]  if(prop.skipRenaming)  {  ++propsSkipped;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  if(prop.skipRenaming)  {  ++propsSkipped;  }  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	if(prop.skipRenaming)  {  ++propsSkipped;  }	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  if(prop.skipRenaming)  {  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	add	if(prop.skipRenaming)  {  ++propsSkipped;  }  else  {  ++singleTypeProps;  }	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
18	[BUG]  [BUGGY]  if(prop.skipRenaming)  {  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  if(prop.skipRenaming)  {  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	if(prop.skipRenaming)  {  ++propsSkipped;  }  else  {  ++singleTypeProps;  }	++propsSkipped;  	compilable	  [FE]  ComparisonFailure  	1	2	replace
19	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  codingConvention,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  [CE]  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    NodeTraversal.traverse(compiler,  node,  codingConvention,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    NodeTraversal.traverse(compiler,  node,  codingConvention,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));		non-compiled	[CE]  	2	None	add
20	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),  false);  [CE]  cannot  find  symbol  node  [FE]      ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),  false);  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    NodeTraversal.traverse(compiler,  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),  false);		non-compiled	[CE]  cannot  find  symbol  node	2	None	add
21	[BUG]  [BUGGY]  if(prop.skipRenaming  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  ++propsSkipped;  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]  if(prop.skipRenaming  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  ++propsSkipped;  }  [BUGGY]  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	if(prop.skipRenaming  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  ++propsSkipped;  }	++propsSkipped;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	1	None	replace
22	[BUG]  [BUGGY]    JSTypeNative[]  props  =  prop.getTypes();  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    JSTypeNative[]  props  =  prop.getTypes();  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    JSTypeNative[]  props  =  prop.getTypes();		non-compiled	[CE]  incompatible  types	2	None	add
23	[BUG]  [BUGGY]    JSTypeNative[]  props  =  prop.getProperties();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    JSTypeNative[]  props  =  prop.getProperties();  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    JSTypeNative[]  props  =  prop.getProperties();		non-compiled	[CE]  cannot  find  symbol	2	None	add
24	[BUG]  [BUGGY]    JSTypeNative[]  props  =  prop.typesToSkip.getProperties();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    JSTypeNative[]  props  =  prop.typesToSkip.getProperties();  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    JSTypeNative[]  props  =  prop.typesToSkip.getProperties();		non-compiled	[CE]  cannot  find  symbol	2	None	add
25	[BUG]  [BUGGY]    Collections.sort(prop.properties);  [CE]  cannot  find  symbol  properties  [FE]          ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    Collections.sort(prop.properties);  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    Collections.sort(prop.properties);		non-compiled	[CE]  cannot  find  symbol  properties	2	None	add
26	[BUG]  [BUGGY]    JSTypeNative[]  props  =  prop.findTypes();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    JSTypeNative[]  props  =  prop.findTypes();  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    JSTypeNative[]  props  =  prop.findTypes();		non-compiled	[CE]  cannot  find  symbol	2	None	add
27	[BUG]  [BUGGY]    JSTypeNative[]  props  =  prop.typesToSkip.values();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure  [CONTEXT]  compiler.report(JSError.make(  NodeUtil.getSourceName(node),  node,  checkLevelForProp,  Warnings.INVALIDATION_ON_TYPE,  prop.name,  rootType.toString(),   " "));  }  }  }  }  else  {  if  (prop.skipRenaming)  {  [BUGGY]    JSTypeNative[]  props  =  prop.typesToSkip.values();  [BUGGY]  ++propsSkipped;  }  else  {  ++singleTypeProps;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  renameProperties  [RETURN_TYPE]  void  [VARIABLES]  TypeSystem  typeSystem  Set  allTypes  invalidatingTypes  newTypesToSkip  renameNodes  reported  rootTypesToSkip  typesToSkip  CheckLevel  checkLevelForProp  Node  node  UnionFind  types  String  field  name  newName  qName  suggestion  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  count  instancesRenamed  instancesSkipped  nextUniqueId  originalTypesSize  propsRenamed  propsSkipped  singleTypeProps  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  changed  skipRenaming  T  rootType  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  convention  JSTypeNative[]  nativeTypes  Map  propNames  properties  propertiesToErrorFor  rootTypes  Property  prop  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.18257418583505536	609	609	2	replace	    JSTypeNative[]  props  =  prop.typesToSkip.values();		non-compiled	[CE]  cannot  find  symbol	2	None	add
