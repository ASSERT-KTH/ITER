bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.newHashSet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newHashSet();	  this.validatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
2	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newArrayList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.newArrayList(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newArrayList(typesToErrorFor);	  this.validatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
3	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newLinkedHashMap();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.newLinkedHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newLinkedHashMap();	  this.validatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
4	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newLinkedList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.newLinkedList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newLinkedList();	  this.validatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
5	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	43	3	replace
6	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	43	3	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
8	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
9	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptySet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.  <  T>emptySet();	  this.validatingTypes    =    Collections.EMPTY_SET;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
10	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	154	None	add
11	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	154	None	add
12	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	154	None	add
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            RuntimeException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	15	62	replace
14	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap!=  null)  {  [FE]  NullPointerException  [FE]            RuntimeException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	15	62	replace
15	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
16	[BUG]  [BUGGY]  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
17	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
18	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
19	[BUG]  [BUGGY]  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
20	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typeSystem);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(typeSystem);	  this.invalidationMap    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
21	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(typesToErrorFor);	  this.invalidationMap    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
22	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(propertiesToErrorFor);	  this.invalidationMap    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
23	[BUG]  [BUGGY]  this.invalidationMap  =  invalidatingTypes.emptyMap();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidatingTypes.emptyMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidatingTypes.emptyMap();	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
24	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.clone();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap.clone();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap.clone();	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
25	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.toArray();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap.toArray();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap.toArray();	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
26	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.get(name);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap.get(name);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap.get(name);	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
27	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.toArray(new  Multimap());  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap.toArray(new  Multimap());  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap.toArray(new  Multimap());	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
28	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(name))  {	  if(!this.invalidationMap.isEmpty()    &&!this.propertiesToErrorFor.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	21	None	replace
29	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(key))  {  [CE]  cannot  find  symbol  key  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(key))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(key))  {	  if(!this.invalidationMap.isEmpty()    &&!this.propertiesToErrorFor.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  key	21	None	replace
30	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	77	62	replace
31	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	77	62	replace
32	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  RuntimeException  	77	3	replace
33	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [FE]  RuntimeException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  RuntimeException  	77	3	replace
34	[BUG]  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  LinkedHashMultimap.create();	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
35	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	compilable	  [FE]  RuntimeException  	142	3	replace
36	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [FE]  RuntimeException  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	compilable	  [FE]  RuntimeException  	142	3	replace
37	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
38	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	142	None	replace
39	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	70	None	add
40	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	70	None	add
41	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	70	None	add
42	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newLinkedHashMap();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newLinkedHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newLinkedHashMap();	  this.validatingTypes    =    Lists.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
43	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newHashMap();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newHashMap();	  this.validatingTypes    =    Lists.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
44	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.  <  T>emptyMap();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.  <  T>emptyMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.  <  T>emptyMap();	  this.validatingTypes    =    Lists.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	75	62	replace
46	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	75	62	replace
47	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.typeSystem!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  this.typeSystem!=  null)  {	  if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	75	62	replace
48	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.typeSystem!=  null)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.typeSystem!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.typeSystem!=  null)  {	  if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	75	62	replace
49	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.newHashSet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.newHashSet();	  this.invalidatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.newArrayList(typesToErrorFor);	  this.invalidatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newLinkedList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.newLinkedList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.newLinkedList();	  this.invalidatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.contains(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
53	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
54	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(typeSystem,  propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(typeSystem,  propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(typeSystem,  propertiesToErrorFor))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
55	[BUG]  [BUGGY]  if(!typeSystem.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!typeSystem.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!typeSystem.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
56	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	69	62	replace
57	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isEmpty())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	69	62	replace
58	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	69	62	replace
59	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	69	62	replace
60	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
61	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayMultimap();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayMultimap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayMultimap();	  this.invalidationMap    =    Lists.newLinkedHashMultimap();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
62	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMap();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newLinkedHashMap();	  this.invalidationMap    =    Lists.newLinkedHashMultimap();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
63	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashArray();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashArray();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newLinkedHashArray();	  this.invalidationMap    =    Lists.newLinkedHashMultimap();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
64	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(typesToSkip);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayListWithCapacity(typesToSkip);	  this.invalidationMap    =    Lists.newArrayListWithCapacity(types);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
65	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(types,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(types,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayListWithCapacity(types,  invalidatingTypes);	  this.invalidationMap    =    Lists.newArrayListWithCapacity(types);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
66	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(types,  typesToSkip);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(types,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayListWithCapacity(types,  typesToSkip);	  this.invalidationMap    =    Lists.newArrayListWithCapacity(types);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
67	[BUG]  [BUGGY]  this.types  =  Lists.newLinkedHashList();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newLinkedHashList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newLinkedHashList();	  this.types    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
68	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	112	None	replace
69	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	112	None	replace
70	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	112	None	replace
71	[BUG]  [BUGGY]  if(!this.invalidationMap.containsKey(name)||  LinkedHashMultimap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]                  NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.containsKey(name)||  LinkedHashMultimap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.containsKey(name)||  LinkedHashMultimap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	112	None	replace
72	[BUG]  [BUGGY]  Collections.sort(this.typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.typeSystem,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.typeSystem,  propertiesToErrorFor);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
73	[BUG]  [BUGGY]  Collections.sort(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(compiler,  typeSystem,  propertiesToErrorFor);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
74	[BUG]  [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor,  tt);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(typeSystem,  propertiesToErrorFor,  tt);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
75	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	9	2	replace
76	[BUG]  [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	9	2	replace
77	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
78	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
79	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  >=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor  >=  null)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
80	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  If(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  If(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    If(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
81	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);	  this.validatingTypes    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
82	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(propertiesToErrorFor);	  this.validatingTypes    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
83	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem,  typesToSkip);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typeSystem,  typesToSkip);	  this.validatingTypes    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
84	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typeSystem,  invalidatingTypes);	  this.validatingTypes    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	41	2	replace
86	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	41	2	replace
87	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	41	3	replace
88	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	41	3	replace
89	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	29	62	replace
90	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	29	62	replace
91	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||    propertyToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	11	None	replace
92	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||    propertyToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
93	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||    propertyToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	11	None	replace
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	155	2	replace
95	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	155	2	replace
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	155	2	replace
97	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	155	2	replace
98	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [CE]  non-static  method  isEmpty()  cannot  be  referenced  from  a  static  context  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.isEmpty())    {    	non-compiled	[CE]  non-static  method  isEmpty()  cannot  be  referenced  from  a  static  context	35	None	replace
99	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.isEmpty())  {  [CE]  non-static  method  isEmpty()  cannot  be  referenced  from  a  static  context  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.isEmpty())    {    	non-compiled	[CE]  non-static  method  isEmpty()  cannot  be  referenced  from  a  static  context	35	None	replace
100	[BUG]  [BUGGY]  if(!this.validationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [CE]  cannot  find  symbol  validationMap  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.validationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.validationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  validationMap	35	None	replace
101	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(key))  {  [CE]  cannot  find  symbol  key  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(key))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(key))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  key	20	None	replace
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.containsKey(name))    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
103	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(typeSystem))  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.containsKey(name))    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
104	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToSkip);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typesToSkip);	  this.validatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
105	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  typesToSkip);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  typesToSkip);	  this.validatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
106	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  propertiesToSkip);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  propertiesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  propertiesToSkip);	  this.validatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
107	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	58	62	replace
108	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	58	62	replace
109	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	58	62	replace
110	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	58	62	replace
111	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  typesToErrorFor  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  typesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	58	None	replace
112	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]          NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  propertyToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	58	None	replace
113	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
114	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
115	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap    ==    null)    {    If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
116	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  >=  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  >=  null)  {	  	non-compiled	[CE]  ';'  expected	30	None	add
117	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(types);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(types);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(types);	  this.validatingTypes    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
118	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(invalidatingTypes,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(invalidatingTypes,  propertiesToErrorFor);	  this.validatingTypes    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
119	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem,  propertiesToErrorFor);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
120	[BUG]  [BUGGY]  Collections.sort(this.propertiesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.propertiesToErrorFor,  typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.propertiesToErrorFor,  typeSystem);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
121	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(propertiesToErrorFor,  typesToErrorFor);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
122	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newLinkedList(typesToErrorFor);	  this.invalidatingTypes    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
123	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes.containsKey(name))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	115	None	replace
124	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(null))  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(null))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(null))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
125	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(key))  {  [CE]  cannot  find  symbol  key  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(key))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(key))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  key	115	None	replace
126	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(name,  typeSystem))  {  [CE]  cannot  find  symbol  name  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(name,  typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(name,  typeSystem))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	115	None	replace
127	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	132	None	add
128	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	132	None	add
129	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isFunction()  ||  this.invalidationMap.isFunction())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isFunction()  ||  this.invalidationMap.isFunction())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isFunction()  ||  this.invalidationMap.isFunction())  {	  	non-compiled	[CE]  ';'  expected	132	None	add
130	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
131	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
132	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
133	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
134	[BUG]  [BUGGY]  Collections.sort(typeSystem,  renameNodes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(typeSystem,  renameNodes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(typeSystem,  renameNodes);	  Collections.sort(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
135	[BUG]  [BUGGY]  Collections.sort(typeSystem,  typesToSkip);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(typeSystem,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(typeSystem,  typesToSkip);	  Collections.sort(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
136	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	136	62	replace
137	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	136	62	replace
138	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	136	62	replace
139	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	136	62	replace
140	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  RuntimeException  	136	3	replace
141	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [FE]  RuntimeException  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  RuntimeException  	136	3	replace
142	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	68	None	add
143	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    If(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	68	None	add
144	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(this.types,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(this.types,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(this.types,  propertiesToErrorFor);	  this.types    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
145	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(this.types,  typesToSkip);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(this.types,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(this.types,  typesToSkip);	  this.types    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
146	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(this.types,  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(this.types,  typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(this.types,  typesToErrorFor);	  this.types    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
147	[BUG]  [BUGGY]  this.invalidationMap  =  new  HashMap  <  String,  CheckLevel>();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  new  HashMap  <  String,  CheckLevel>();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  new  HashMap  <  String,  CheckLevel>();	  this.invalidationMap    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
148	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.emptyList();	  this.invalidationMap    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
149	[BUG]  [BUGGY]  this.invalidationMap  =  null;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  null;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  null;	  this.invalidationMap    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
150	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	149	None	add
151	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	149	None	add
152	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propersToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propersToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.propersToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	149	None	add
153	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  if(!this.propersToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  if(!this.propersToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.propertiesToErrorFor.isEmpty())    {    if(!this.propersToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	149	None	add
154	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.  <  T>emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.  <  T>emptySet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.  <  T>emptySet();	  this.invalidatingTypes    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
155	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.  <  T>emptyList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.  <  T>emptyList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.  <  T>emptyList();	  this.invalidatingTypes    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
156	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typesToSkip.isEmpty())  {  [CE]  cannot  find  symbol  typesToSkip  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typesToSkip.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  typesToSkip.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    typesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	59	None	replace
157	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typeSystem.isEmpty())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typeSystem.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  typeSystem.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    typesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
158	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  typesToSkip);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  typesToSkip);	  this.validatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
159	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToSkip);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToSkip);	  this.validatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
160	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  propertiesToSkip);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  propertiesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  propertiesToSkip);	  this.validatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
161	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	147	None	add
162	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	147	None	add
163	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	147	None	add
164	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	147	None	add
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	148	2	replace
166	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	148	2	replace
167	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	148	2	replace
168	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	148	2	replace
169	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	148	2	replace
170	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	148	2	replace
171	[BUG]  [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	145	None	add
172	[BUG]  [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	145	None	add
173	[BUG]  [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	145	None	add
174	[BUG]  [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  >=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  >=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.propertiesToErrorFor  >=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	145	None	add
175	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  cannot  find  symbol  Collections  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  cannot  find  symbol  Collections	144	None	replace
176	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap()  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap()  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap()	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  ';'  expected	144	None	replace
177	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  cannot  find  symbol  Collections  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  cannot  find  symbol  Collections	144	None	replace
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	107	2	replace
179	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	107	2	replace
180	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	107	2	replace
181	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	107	2	replace
182	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newHashMap();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newHashMap();	  this.invalidationMap    =    Lists.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
183	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	133	62	replace
184	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	133	62	replace
185	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	133	62	replace
186	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	133	62	replace
187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	133	2	replace
188	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	133	2	replace
189	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	133	62	replace
190	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	133	62	replace
191	[BUG]  [BUGGY]  Collections.sort(invalidatingTypes,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(invalidatingTypes,  propertiesToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
192	[BUG]  [BUGGY]  Collections.sort(validatingTypes,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(validatingTypes,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(validatingTypes,  propertiesToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
193	[BUG]  [BUGGY]  Collections.sort(invalidatingTypes,  propertyToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(invalidatingTypes,  propertyToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(invalidatingTypes,  propertyToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
194	[BUG]  [BUGGY]  Collections.sort(typeSystem,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(typeSystem,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(typeSystem,  invalidatingTypes);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
195	[BUG]  [BUGGY]  Collections.sort(validatingTypes,  propertyToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(validatingTypes,  propertyToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(validatingTypes,  propertyToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
196	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.renameNodes.contains(name))  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.renameNodes.contains(name))  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.renameNodes.contains(name))  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||!   "this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	19	None	replace
197	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.typeSystem.isEmpty())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.typeSystem.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.typeSystem.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||!   "this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
198	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||!   "this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	19	None	replace
199	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  &&!this.invalidationMap.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  &&!this.invalidationMap.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  &&!this.invalidationMap.contains(propertiesToErrorFor))  {	  if(!invalidationMap.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
200	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {	  if(!invalidationMap.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
201	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {	  if(!invalidationMap.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
202	[BUG]  [BUGGY]  if(!validationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  validationMap  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!validationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!validationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {	  if(!invalidationMap.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol  validationMap	7	None	replace
203	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes.contains(typeSystem))  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes.contains(typeSystem))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	118	None	replace
204	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  typesToSkip.contains(typeSystem))  {  [CE]  cannot  find  symbol  typesToSkip  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  typesToSkip.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  typesToSkip.contains(typeSystem))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	118	None	replace
205	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  typeSystem.contains(invalidatingTypes))  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  typeSystem.contains(invalidatingTypes))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  typeSystem.contains(invalidatingTypes))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	118	None	replace
206	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.contains(typeSystem))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
207	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(types,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(types,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(types,  invalidatingTypes);	  this.invalidationMap    =    Lists.newArrayList(types);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
208	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typesToSkip);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(typesToSkip);	  this.invalidationMap    =    Lists.newArrayList(types);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
209	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(types,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(types,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(types,  propertiesToErrorFor);	  this.invalidationMap    =    Lists.newArrayList(types);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
210	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
211	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
212	[BUG]  [BUGGY]  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
213	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
214	[BUG]  [BUGGY]  this.types  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Collections.newHashSet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Collections.newHashSet();	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
215	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
216	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
217	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  >=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor  >=  null)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
218	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  If(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  If(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    If(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
219	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertyToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  propertyToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  &&  propertyToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	135	None	add
220	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	78	62	replace
221	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap!=  null)  {  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	78	62	replace
222	[BUG]  [BUGGY]  if(!this.typeSystem.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.typeSystem.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.typeSystem.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!this.typeSystem.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
223	[BUG]  [BUGGY]  if(!typeSystem.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!typeSystem.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!typeSystem.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.typeSystem.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
224	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||!this.typeSystem.isEmpty())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||!this.typeSystem.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()  ||!this.typeSystem.isEmpty())  {	  if(!this.typeSystem.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
225	[BUG]  [BUGGY]  if(!this.typeSystem.isEmpty()  ||  typeSystem.isEmpty())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.typeSystem.isEmpty()  ||  typeSystem.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.typeSystem.isEmpty()  ||  typeSystem.isEmpty())  {	  if(!this.typeSystem.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
226	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
227	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
228	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
229	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  >=  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  >=  null)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	62	2	replace
231	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	62	2	replace
232	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	57	None	add
233	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	57	None	add
234	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  propertyToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	57	None	add
235	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.  <  T>emptyList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.  <  T>emptyList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.  <  T>emptyList();	  this.validatingTypes    =    Lists.emptyList();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
236	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isNone())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
237	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isNone())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
238	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typeSystem.isNone())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typeSystem.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  typeSystem.isNone())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
239	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isNone())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
240	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isNull())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isNull())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isNull())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNull())    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
241	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNull())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNull())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNull())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNull())    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
242	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isUnknown())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isUnknown())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isUnknown())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNull())    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
243	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	85	62	replace
244	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	85	62	replace
245	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(typeSystem);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(typeSystem);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
246	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(typesToErrorFor);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
247	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(propertiesToErrorFor);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
248	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(types);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet(types);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.unmodifiableSet(types);	  this.validatingTypes    =    Collections.unmodifiableSet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
249	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	42	None	add
250	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	42	None	add
251	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	42	None	add
252	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propersToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propersToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.propertiesToErrorFor  ==  null  ||!this.propersToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	42	None	add
253	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.types,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.types,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(this.types,  invalidatingTypes);	  this.invalidationMap    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
254	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.types,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.types,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(this.types,  propertiesToErrorFor);	  this.invalidationMap    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
255	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  NullPointerException  	124	62	replace
256	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  NullPointerException  	124	62	replace
257	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  NullPointerException  	124	62	replace
258	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(typeSystem))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  NullPointerException  	124	62	replace
259	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typesToSkip,  invalidatingTypes);	  this.types    =    Lists.newArrayList(typesToSkip);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
260	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typesToErrorFor);	  this.types    =    Lists.newArrayList(typesToSkip);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
261	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip,  renameNodes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip,  renameNodes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typesToSkip,  renameNodes);	  this.types    =    Lists.newArrayList(typesToSkip);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
262	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip,  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip,  typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typesToSkip,  typesToErrorFor);	  this.types    =    Lists.newArrayList(typesToSkip);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
263	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	88	None	add
264	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	88	None	add
265	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	88	None	add
266	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToSkip);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(typesToSkip);	  this.invalidatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
267	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor,  typesToSkip);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor,  typesToSkip);	  this.invalidatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
268	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor,  invalidatingTypes);	  this.invalidatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
269	[BUG]  [BUGGY]  Collections.sort(this.typeSystem,  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.typeSystem,  typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.typeSystem,  typesToErrorFor);	  Collections.sort(this.typeSystem);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
270	[BUG]  [BUGGY]  Collections.sort(this.typeSystem,  this.propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.typeSystem,  this.propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.typeSystem,  this.propertiesToErrorFor);	  Collections.sort(this.typeSystem);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
271	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
272	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
273	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
274	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.create()!=  null)  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
275	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()  ==  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
276	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()  ==  null)  {  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()  ==  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
277	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
278	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
279	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  ComparisonFailure  	38	2	replace
280	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [FE]  ComparisonFailure  [FE]                        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  ComparisonFailure  	38	2	replace
281	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	104	None	add
282	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	104	None	add
283	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor    ==    null)    {    If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	104	None	add
284	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	104	None	add
285	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
286	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null)  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null)  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null)  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
287	[BUG]  [BUGGY]  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
288	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
289	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
290	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap    ==    null)    {    If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
291	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  >=  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap    ==    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  >=  null)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
292	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST_ARRAY  |  Collections.EMPTY_LIST_SET;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST_ARRAY  |  Collections.EMPTY_LIST_SET;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.EMPTY_LIST_ARRAY  |  Collections.EMPTY_LIST_SET;	  this.validatingTypes    =    Collections.EMPTY_LIST_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
293	[BUG]  [BUGGY]  this.validatingTypes  =  new  HashMap  <  String,  CheckLevel>();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  new  HashMap  <  String,  CheckLevel>();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  new  HashMap  <  String,  CheckLevel>();	  this.validatingTypes    =    Collections.EMPTY_LIST_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
294	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	55	None	add
295	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	55	None	add
296	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	55	None	add
297	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propersToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propersToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor.isEmpty())    {    if(!this.propersToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	55	None	add
298	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newHashMap();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.newHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newHashMap();	  this.invalidationMap    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
299	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newLinkedHashArrayList();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.newLinkedHashArrayList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newLinkedHashArrayList();	  this.invalidationMap    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
300	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.newHashSet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newHashSet();	  this.invalidationMap    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
301	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newLinkedHashMap();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.newLinkedHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newLinkedHashMap();	  this.invalidationMap    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
302	[BUG]  [BUGGY]  logger  =  compiler.getLogger();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  logger  =  compiler.getLogger();  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	logger  =  compiler.getLogger();	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
303	[BUG]  [BUGGY]  logger  =  Logger.getLogger(typeSystem);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  logger  =  Logger.getLogger(typeSystem);  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	logger  =  Logger.getLogger(typeSystem);	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
304	[BUG]  [BUGGY]  logger  =  Logger.getLogger(registry);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  logger  =  Logger.getLogger(registry);  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	logger  =  Logger.getLogger(registry);	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
305	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	126	None	add
306	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	126	None	add
307	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	126	None	add
308	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.synchronizedSet(typeSystem);	  this.invalidatingTypes    =    Collections.synchronizedSet(this.invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
309	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.synchronizedSet(this.invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.synchronizedSet(this.invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.synchronizedSet(this.invalidatingTypes);	  this.invalidatingTypes    =    Collections.synchronizedSet(this.invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
310	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.synchronizedSet(this.invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Sets.synchronizedSet(this.invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Sets.synchronizedSet(this.invalidatingTypes);	  this.invalidatingTypes    =    Collections.synchronizedSet(this.invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
311	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes,  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes,  typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes,  typesToErrorFor);	  this.invalidatingTypes    =    Collections.synchronizedSet(this.invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
312	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes,  propertiesToErrorFor);	  this.invalidatingTypes    =    Collections.synchronizedSet(this.invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
313	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	84	None	add
314	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	84	None	add
315	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  If(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  If(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    If(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	84	None	add
316	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  >=  null  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  >=  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  >=  null  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	84	None	add
317	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    propertiesToErrorFor;    }    	non-compiled	[CE]  incompatible  types	143	None	replace
318	[BUG]  [BUGGY]  if(!this.validationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  cannot  find  symbol  validationMap  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.validationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.validationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    propertiesToErrorFor;    }    	non-compiled	[CE]  cannot  find  symbol  validationMap	143	None	replace
319	[BUG]  [BUGGY]  if(!this.validationMap.isEmpty())  {  if(!this.validationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  cannot  find  symbol  validationMap  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.validationMap.isEmpty())  {  if(!this.validationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.validationMap.isEmpty())  {  if(!this.validationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    propertiesToErrorFor;    }    	non-compiled	[CE]  cannot  find  symbol  validationMap	143	None	replace
320	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	89	3	replace
321	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [FE]  RuntimeException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	89	3	replace
322	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	89	62	replace
323	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	89	62	replace
324	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_SET;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_SET;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.EMPTY_SET;	  this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
325	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    &&!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	44	None	add
326	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    &&!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	44	None	add
327	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    &&!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	44	None	add
328	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  >=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  >=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    &&!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  >=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	44	None	add
329	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(types);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(types);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(types);	  this.invalidatingTypes    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
330	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(typeSystem);	  this.invalidatingTypes    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
331	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(propertiesToErrorFor);	  this.invalidatingTypes    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
332	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP  |  Collections.EMPTY_MAP;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP  |  Collections.EMPTY_MAP;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.EMPTY_MAP  |  Collections.EMPTY_MAP;	  this.invalidationMap    =    Collections.EMPTY_MAP;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
333	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP  +  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP  +  1;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.EMPTY_MAP  +  1;	  this.invalidationMap    =    Collections.EMPTY_MAP;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
334	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Collections.newArrayList(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Collections.newArrayList(typesToErrorFor);	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
335	[BUG]  [BUGGY]  this.types  =  Collections.newLinkedHashMap();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Collections.newLinkedHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Collections.newLinkedHashMap();	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
336	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	86	None	add
337	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	86	None	add
338	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  If(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  If(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    ||!this.invalidationMap.isEmpty())    {    If(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	86	None	add
339	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  >=  null  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  >=  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  >=  null  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	86	None	add
340	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	46	None	add
341	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	46	None	add
342	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	46	None	add
343	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  >=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  >=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  >=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	46	None	add
344	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(1);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(1);	  this.invalidationMap    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
345	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typeSystem.size());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(typeSystem.size());  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(typeSystem.size());	  this.invalidationMap    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
346	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(2);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(2);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(2);	  this.invalidationMap    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
347	[BUG]  [BUGGY]  Collections.sort(types);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(types);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(types);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
348	[BUG]  [BUGGY]  Collections.sort(this.rootTypes,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.rootTypes,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.rootTypes,  propertiesToErrorFor);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
349	[BUG]  [BUGGY]  Collections.sort(this.rootTypes,  tt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.rootTypes,  tt);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.rootTypes,  tt);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
350	[BUG]  [BUGGY]  Collections.sort(this.rootTypes,  types);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.rootTypes,  types);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.rootTypes,  types);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
351	[BUG]  [BUGGY]  Collections.sort(this.rootTypes,  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.rootTypes,  typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.rootTypes,  typesToErrorFor);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
352	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
353	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
354	[BUG]  [BUGGY]  if(!compiler.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!compiler.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!compiler.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
355	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.isNone())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
356	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
357	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isNone())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isNone())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
358	[BUG]  [BUGGY]  if(!compiler.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!compiler.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!compiler.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
359	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	119	None	add
360	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	119	None	add
361	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	119	None	add
362	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  >=  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor  >=  null)  {	  	non-compiled	[CE]  ';'  expected	119	None	add
363	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	71	3	replace
364	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [FE]  RuntimeException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	71	3	replace
365	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToSkip);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToSkip);	  this.invalidatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
366	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  typesToSkip);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  typesToSkip);	  this.invalidatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
367	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  invalidatingTypes);	  this.invalidatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
368	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  propertiesToSkip);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  propertiesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  propertiesToSkip);	  this.invalidatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
369	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
370	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(propertiesToErrorFor);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
371	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  typesToSkip);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  typesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typeSystem,  typesToSkip);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
372	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(this.typeSystem);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(this.typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(this.typeSystem);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
373	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	127	3	replace
374	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	127	3	replace
375	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	127	2	replace
376	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	127	2	replace
377	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  typesToErrorFor  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	127	None	replace
378	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	127	3	replace
379	[BUG]  [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	127	3	replace
380	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(1);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(1);	  this.types    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
381	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size());  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typeSystem.size());	  this.types    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
382	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(2);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(2);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(2);	  this.types    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
383	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	82	None	add
384	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	82	None	add
385	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.  <  T>emptyList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.  <  T>emptyList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.  <  T>emptyList();	  this.invalidatingTypes    =    Lists.emptyList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
386	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedHashMap();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newLinkedHashMap();	  this.invalidatingTypes    =    Lists.emptyList();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
387	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	117	2	replace
388	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null)  {  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	117	2	replace
389	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||  invalidatingTypes!=  null)  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]      RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||  invalidatingTypes!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||  invalidatingTypes!=  null)  {	  if(this.invalidationMap!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	117	None	replace
390	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||  this.invalidationMap!=  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	117	2	replace
391	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||  this.invalidationMap!=  null)  {  [FE]  ComparisonFailure  [FE]        RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||  this.invalidationMap!=  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	117	2	replace
392	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||  invalidatingTypes  ==  null)  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||  invalidatingTypes  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||  invalidatingTypes  ==  null)  {	  if(this.invalidationMap!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	117	None	replace
393	[BUG]  [BUGGY]  this.invalidationMap  =  Maps.newHashMap();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Maps.newHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Maps.newHashMap();	  this.invalidationMap    =    Maps.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
394	[BUG]  [BUGGY]  this.invalidationMap  =  Maps.newLinkedHashMap();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Maps.newLinkedHashMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Maps.newLinkedHashMap();	  this.invalidationMap    =    Maps.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
395	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(1);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(1);	  this.validatingTypes    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
396	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem.size());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem.size());  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typeSystem.size());	  this.validatingTypes    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
397	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	83	62	replace
398	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	83	62	replace
399	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {	  if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
400	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  If(!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  If(!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  If(!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	36	None	replace
401	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	36	None	replace
402	[BUG]  [BUGGY]  If(!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  If(!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	If(!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	36	None	replace
403	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	130	None	add
404	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	130	None	add
405	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  If(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  If(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    If(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	130	None	add
406	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(1);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(1);	  this.invalidatingTypes    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
407	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typeSystem.size());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typeSystem.size());  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(typeSystem.size());	  this.invalidatingTypes    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
408	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyList(),  typesToErrorFor);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyList(),  typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.  <  T>emptyList(),  typesToErrorFor);	  this.validatingTypes    =    Collections.    <    T>emptyList();    	non-compiled	[CE]  	67	None	replace
409	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyMap();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.  <  T>emptyMap();	  this.validatingTypes    =    Collections.    <    T>emptyList();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
410	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&  this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	150	3	replace
411	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	150	3	replace
412	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
413	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	106	None	add
414	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	106	None	add
415	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	106	None	add
416	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	40	None	add
417	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.invalidationMap!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	40	None	add
418	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	40	None	add
419	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propersToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propersToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.propersToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	40	None	add
420	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    	compilable	  [FE]  NullPointerException  	157	62	replace
421	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    	compilable	  [FE]  NullPointerException  	157	62	replace
422	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(typeSystem))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    	compilable	  [FE]  NullPointerException  	157	62	replace
423	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(typeSystem))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(typeSystem))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    	compilable	  [FE]  NullPointerException  	157	62	replace
424	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    	compilable	  [FE]  NullPointerException  	157	62	replace
425	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    	compilable	  [FE]  NullPointerException  	157	62	replace
426	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
427	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
428	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  If(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  If(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    If(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
429	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  >=  null)  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor  >=  null)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
430	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  	non-compiled	[CE]  ';'  expected	123	None	add
431	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  If(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  If(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    If(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  	non-compiled	[CE]  ';'  expected	123	None	add
432	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null)    {    if(this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
433	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null)    {    if(this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
434	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(this.invalidationMap  >=  null)  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(this.invalidationMap  >=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null)    {    if(this.invalidationMap  >=  null)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
435	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  If(this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  If(this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null)    {    If(this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	116	None	add
436	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	146	2	replace
437	[BUG]  [BUGGY]  if(this.propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	146	2	replace
438	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  	non-compiled	[CE]  ';'  expected	156	None	add
439	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  If(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  If(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    If(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  	non-compiled	[CE]  ';'  expected	156	None	add
440	[BUG]  [BUGGY]  if(!this.propersToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  propersToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propersToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propersToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propersToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propersToErrorFor	12	None	replace
441	[BUG]  [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||!this.propersToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  propersToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor.isEmpty()  ||!this.propersToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor.isEmpty()  ||!this.propersToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propersToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propersToErrorFor	12	None	replace
442	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  new  HashMap  <  String,  CheckLevel>();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  new  HashMap  <  String,  CheckLevel>();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  new  HashMap  <  String,  CheckLevel>();  }	  if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
443	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  new  HashMap  <  T>();  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  new  HashMap  <  T>();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  new  HashMap  <  T>();  }	  if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
444	[BUG]  [BUGGY]  Collections.sort(this.invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.invalidatingTypes);	  Collections.sort(this.propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
445	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  name	83	None	replace
446	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	83	62	replace
447	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	83	62	replace
448	[BUG]  [BUGGY]  this.invalidationMap  =  Maps.newHashMultimap();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Maps.newHashMultimap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Maps.newHashMultimap();	  this.invalidationMap    =    Maps.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
449	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMultimap(invalidationMap);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMultimap(invalidationMap);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newLinkedHashMultimap(invalidationMap);	  this.invalidationMap    =    Lists.newLinkedHashMultimap();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
450	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayListWithCapacity(propertiesToErrorFor);	  this.invalidatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
451	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.isEmpty())    {    if(!propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	70	None	add
452	[BUG]  [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.containsKey(name))    {    	non-compiled	[CE]  ';'  expected	112	None	replace
453	[BUG]  [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	112	None	replace
454	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(8);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(8);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(8);	  this.invalidatingTypes    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
455	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  name	133	None	replace
456	[BUG]  [BUGGY]  if(!this.typeSystem.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.typeSystem.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.typeSystem.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
457	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  if(!this.invalidationMap.isEmpty()  ||! "this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [CE]  unclosed  string  literal  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  if(!this.invalidationMap.isEmpty()  ||! "this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))    {    if(!this.invalidationMap.isEmpty()  ||! "this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  	non-compiled	[CE]  unclosed  string  literal	156	None	add
458	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(8);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(8);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(8);	  this.validatingTypes    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
459	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypes,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(invalidatingTypes,  propertiesToErrorFor);	  this.invalidationMap    =    Lists.newArrayList(invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
460	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isNone())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	60	None	replace
461	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(8);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(8);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(8);	  this.types    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
462	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	131	2	replace
463	[BUG]  [BUGGY]  if(invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	131	2	replace
464	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||  this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	131	62	replace
465	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||  this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||  this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	131	62	replace
466	[BUG]  [BUGGY]  this.invalidationMap  =  invalidatingTypes;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidatingTypes;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidatingTypes;	  this.invalidationMap    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
467	[BUG]  [BUGGY]  this.invalidationMap  =  new  HashMultimap  <  String,  CheckLevel>();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  new  HashMultimap  <  String,  CheckLevel>();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  new  HashMultimap  <  String,  CheckLevel>();	  this.invalidationMap    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
468	[BUG]  [BUGGY]  this.invalidationMap  =  new  HashMultimap();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  new  HashMultimap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  new  HashMultimap();	  this.invalidationMap    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
469	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(INVALIDATION_ON_TYPE);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(INVALIDATION_ON_TYPE);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(INVALIDATION_ON_TYPE);	  this.invalidationMap    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
470	[BUG]  [BUGGY]  if(!this.validationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  cannot  find  symbol  validationMap  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.validationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.validationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  validationMap	89	None	replace
471	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  &&!this.invalidationMap.hasEmpty())  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  &&!this.invalidationMap.hasEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    if(this.invalidationMap!=  null  &&!this.invalidationMap.hasEmpty())  {	  	non-compiled	[CE]  ';'  expected	84	None	add
472	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	154	None	add
473	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	154	None	add
474	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	127	2	replace
475	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	127	2	replace
476	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap!=  null?  invalidationMap.emptyMap()  :  null;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap!=  null?  invalidationMap.emptyMap()  :  null;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap!=  null?  invalidationMap.emptyMap()  :  null;	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
477	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap  ==  null?  null  :  invalidationMap.emptyMap();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap  ==  null?  null  :  invalidationMap.emptyMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap  ==  null?  null  :  invalidationMap.emptyMap();	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
478	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(invalidatingTypes);	  this.types    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
479	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.contains(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
480	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(invalidatingTypesToSkip);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(invalidatingTypesToSkip);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(invalidatingTypesToSkip);	  this.types    =    Lists.newArrayList(typesToSkip);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
481	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(invalidatingTypesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(invalidatingTypesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(invalidatingTypesToErrorFor);	  this.types    =    Lists.newArrayList(typesToSkip);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
482	[BUG]  [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	34	None	replace
483	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.  <  T>emptyList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Sets.  <  T>emptyList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Sets.  <  T>emptyList();	  this.validatingTypes    =    Collections.    <    T>emptyList();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
484	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayListWithCapacity(typesToErrorFor);	  this.invalidationMap    =    Lists.newArrayListWithCapacity(types);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
485	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(0);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayListWithCapacity(0);	  this.invalidationMap    =    Lists.newArrayListWithCapacity(types);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
486	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	68	None	add
487	[BUG]  [BUGGY]  logger  =  compiler.getLogger(this);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  logger  =  compiler.getLogger(this);  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	logger  =  compiler.getLogger(this);	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  illegal  start  of  type	138	None	replace
488	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes!=  null)  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  invalidatingTypes!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	136	None	replace
489	[BUG]  [BUGGY]  this.validatingTypes  =  new  HashSet  <  String>();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  new  HashSet  <  String>();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  new  HashSet  <  String>();	  this.validatingTypes    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
490	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typesToErrorFor,  invalidatingTypes);	  this.validatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
491	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	126	None	add
492	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.newLinkedHashSet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Sets.newLinkedHashSet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Sets.newLinkedHashSet();	  this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
493	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.newHashSet(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Sets.newHashSet(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Sets.newHashSet(invalidatingTypes);	  this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	152	None	replace
494	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propersToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  if(!this.propersToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap    ==    null)    {    if(!this.propersToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
495	[BUG]  [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
496	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
497	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	47	2	replace
498	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	47	2	replace
499	[BUG]  [BUGGY]  if(typeSystem!=  null  ||!typeSystem.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null  ||!typeSystem.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typeSystem!=  null  ||!typeSystem.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	62	None	replace
500	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null)  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	62	3	replace
501	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null)  {  [FE]  RuntimeException  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null)  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	62	3	replace
502	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor!=  null)  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	62	2	replace
503	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null)  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null)  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	62	2	replace
504	[BUG]  [BUGGY]  Collections.sort(this.rootTypes,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.rootTypes,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.rootTypes,  invalidatingTypes);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
505	[BUG]  [BUGGY]  Collections.sort(this.rootTypes,  this.typeSystem);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.rootTypes,  this.typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.rootTypes,  this.typeSystem);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
506	[BUG]  [BUGGY]  Collections.sort(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(invalidatingTypes);	  Collections.sort(this.rootTypes);    	non-compiled	[CE]  illegal  start  of  type	137	None	replace
507	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
508	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.create()!=    null)    {    	compilable	  [FE]  NullPointerException  	38	62	replace
509	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isNone())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isNone())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isNone())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
510	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	18	None	replace
511	[BUG]  [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()    ||    LinkedHashMultimap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	35	None	replace
512	[BUG]  [BUGGY]  this.invalidatingTypes  =  new  HashSet  <  Class  <?>()  :  Collections.EMPTY_LIST;  [CE]  >  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  new  HashSet  <  Class  <?>()  :  Collections.EMPTY_LIST;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  new  HashSet  <  Class  <?>()  :  Collections.EMPTY_LIST;	  this.invalidatingTypes    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  >  expected	65	None	replace
513	[BUG]  [BUGGY]  this.invalidatingTypes  =  new  HashSet  <  String>();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  new  HashSet  <  String>();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  new  HashSet  <  String>();	  this.invalidatingTypes    =    Collections.EMPTY_LIST;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
514	[BUG]  [BUGGY]  if(!this.invalidationMap.containsKey(name)||!this.propertiesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  name  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.containsKey(name)||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.containsKey(name)||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  name	69	None	replace
515	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(invalidationMap  ==  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	117	2	replace
516	[BUG]  [BUGGY]  if(invalidationMap  ==  null)  {  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap  ==  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	117	2	replace
517	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(invalidationMap!=  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  RuntimeException  	117	3	replace
518	[BUG]  [BUGGY]  if(invalidationMap!=  null)  {  [FE]  RuntimeException  [FE]      RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap!=  null)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  RuntimeException  	117	3	replace
519	[BUG]  [BUGGY]  if(validationMap  ==  null)  {  [CE]  cannot  find  symbol  validationMap  [FE]        RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(validationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(validationMap  ==  null)  {	  if(this.invalidationMap!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  validationMap	117	None	replace
520	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    if(!invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	88	None	add
521	[BUG]  [BUGGY]  if(!this.invalidatingTypes.isEmpty()  ||  invalidatingTypes.containsKey(name))  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidatingTypes.isEmpty()  ||  invalidatingTypes.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidatingTypes.isEmpty()  ||  invalidatingTypes.containsKey(name))  {	  if(!this.invalidationMap.isEmpty()    ||    invalidatingTypes.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	115	None	replace
522	[BUG]  [BUGGY]  this.types  =  Collections.newLinkedList();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Collections.newLinkedList();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Collections.newLinkedList();	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
523	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  ComparisonFailure  	77	2	replace
524	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  ComparisonFailure  	77	2	replace
525	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newLinkedList(invalidatingTypes);	  this.invalidatingTypes    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
526	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	148	3	replace
527	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	148	3	replace
528	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||!   "this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	19	None	replace
529	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||!   "this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	19	None	replace
530	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.newArrayList(invalidatingTypes);	  this.invalidatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
531	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList(0);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.newArrayList(0);	  this.invalidatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
532	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP  +  invalidatingTypes.size();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP  +  invalidatingTypes.size();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.EMPTY_MAP  +  invalidatingTypes.size();	  this.invalidationMap    =    Collections.EMPTY_MAP;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
533	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap;  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap;	  this.invalidationMap    =    Collections.EMPTY_MAP;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
534	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	56	3	replace
535	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	56	3	replace
536	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	17	None	replace
537	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typeSystem,  invalidatingTypes);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
538	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newLinkedList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newLinkedList(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newLinkedList(invalidatingTypes);	  this.validatingTypes    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
539	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.invalidationMap.hasEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap!=  null  ||!this.invalidationMap.hasEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap!=  null  ||!this.invalidationMap.hasEmpty())  {	  	non-compiled	[CE]  ';'  expected	86	None	add
540	[BUG]  [BUGGY]  if(!this.compiler.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.compiler.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.compiler.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(typeSystem))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
541	[BUG]  [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor!=  null  ||!this.propersToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(this.propertiesToErrorFor!=  null  ||!this.propersToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor!=    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(this.propertiesToErrorFor!=  null  ||!this.propersToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	145	None	add
542	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  cannot  find  symbol  Collections  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  cannot  find  symbol  Collections	144	None	replace
543	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
544	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	compilable	  [FE]  NullPointerException  	142	62	replace
545	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	compilable	  [FE]  NullPointerException  	142	62	replace
546	[BUG]  [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [CE]  cannot  find  symbol  name  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.containsKey(name))  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  name	142	None	replace
547	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.newArrayList(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newArrayList(invalidatingTypes);	  this.validatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
548	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	61	2	replace
549	[BUG]  [BUGGY]  if(invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	61	2	replace
550	[BUG]  [BUGGY]  Collections.sort(this.typeSystem,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.typeSystem,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.typeSystem,  invalidatingTypes);	  Collections.sort(this.typeSystem);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
551	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	106	None	add
552	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor,  invalidatingTypes);	  this.validatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
553	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayListWithCapacity(propertiesToErrorFor);	  this.validatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
554	[BUG]  [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  If(!this.invalidationMap.containsKey(name))  {  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  If(!this.invalidationMap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.containsKey(name))  {  If(!this.invalidationMap.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	36	None	replace
555	[BUG]  [BUGGY]  if(invalidationMap!=  null)  {  If(!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap!=  null)  {  If(!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap!=  null)  {  If(!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  ';'  expected	36	None	replace
556	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.hasEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.hasEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.invalidationMap.hasEmpty())  {	  	non-compiled	[CE]  ';'  expected	130	None	add
557	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.outvalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.outvalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.outvalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	130	None	add
558	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    propertiesToErrorFor;    }    	non-compiled	[CE]  incompatible  types	143	None	replace
559	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    propertiesToErrorFor;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
560	[BUG]  [BUGGY]  if(!this.validationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.validationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.validationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    propertiesToErrorFor;    }    	non-compiled	[CE]  illegal  start  of  type	143	None	replace
561	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	9	2	replace
562	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	9	2	replace
563	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [CE]  unclosed  string  literal  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||! "this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	82	None	add
564	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	82	None	add
565	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
566	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
567	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  invalidationMap.create();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  invalidationMap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  invalidationMap.create();  }	  if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
568	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  it.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  it.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  it.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	132	None	add
569	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newLinkedHashMultimap();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.newLinkedHashMultimap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newLinkedHashMultimap();	  this.invalidationMap    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
570	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.newArrayList(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newArrayList(invalidatingTypes);	  this.invalidationMap    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
571	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newHashMultimap();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.newHashMultimap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newHashMultimap();	  this.invalidationMap    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
572	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem,  invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem,  invalidatingTypes);	  Collections.sort(propertiesToErrorFor,    typeSystem);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
573	[BUG]  [BUGGY]  this.types  =  Lists.newLinkedList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newLinkedList(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newLinkedList(typesToErrorFor);	  this.types    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
574	[BUG]  [BUGGY]  this.types  =  Lists.newLinkedList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Lists.newLinkedList(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newLinkedList(invalidatingTypes);	  this.types    =    Lists.newLinkedList();    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
575	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isNull())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isNull())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isNull())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNull())    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
576	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isNull())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isNull())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.typeSystem.isNull())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isNull())    {    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
577	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
578	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	85	62	replace
579	[BUG]  [BUGGY]  if(invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(invalidationMap  ==  null  &&!this.invalidationMap.isEmpty())  {	  if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	85	62	replace
580	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	107	62	replace
581	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	107	62	replace
582	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.newLinkedHashSet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Sets.newLinkedHashSet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Sets.newLinkedHashSet();	  this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
583	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet(invalidatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Sets.newHashSet(invalidatingTypes);	  this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
584	[BUG]  [BUGGY]  this.types  =  Sets.newLinkedHashSet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Sets.newLinkedHashSet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Sets.newLinkedHashSet();	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
585	[BUG]  [BUGGY]  Collections.sort(compiler,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(compiler,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(compiler,  propertiesToErrorFor);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
586	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.typeSystem!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  this.typeSystem!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	29	62	replace
587	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.typeSystem!=  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.typeSystem!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  this.typeSystem!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  NullPointerException  	29	62	replace
588	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(typeSystem!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  NullPointerException  	124	62	replace
589	[BUG]  [BUGGY]  if(typeSystem!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typeSystem!=  null  &&!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  NullPointerException  	124	62	replace
590	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(typeSystem!=  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  ComparisonFailure  	124	2	replace
591	[BUG]  [BUGGY]  if(typeSystem!=  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typeSystem!=  null  ||!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    	compilable	  [FE]  ComparisonFailure  	124	2	replace
592	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	58	62	replace
593	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	58	62	replace
594	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  typesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  typesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  typesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    typesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	59	None	replace
595	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  if(!propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  if(!propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(typeSystem))    {    if(!propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  	non-compiled	[CE]  ';'  expected	123	None	add
596	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(invalidatingTypesToErrorFor);	  this.invalidationMap    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
597	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(this.propertiesToErrorFor);	  this.invalidationMap    =    Lists.newArrayList(this.types);    	non-compiled	[CE]  illegal  start  of  type	141	None	replace
598	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  cannot  find  symbol  Collections  [FE]            NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  cannot  find  symbol  Collections	144	None	replace
599	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  cannot  find  symbol  Collections  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typeSystem!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  cannot  find  symbol  Collections	144	None	replace
600	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  Collections.emptyMap();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    Collections.emptyMap();    }    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
601	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||! "this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||! "this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(propertiesToErrorFor  ==  null  ||! "this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	106	None	add
602	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	78	2	replace
603	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	78	2	replace
604	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	69	2	replace
605	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	69	2	replace
606	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet(typeSystem);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Sets.newHashSet(typeSystem);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Sets.newHashSet(typeSystem);	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
607	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet(propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Sets.newHashSet(propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Sets.newHashSet(propertiesToErrorFor);	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
608	[BUG]  [BUGGY]  Collections.sort(this.typeSystem,  this.validatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.typeSystem,  this.validatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.typeSystem,  this.validatingTypes);	  Collections.sort(this.typeSystem);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
609	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||  this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
610	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||  this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||  this.propertiesToErrorFor.isEmpty())  {	  if(this.propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
611	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertyToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  &&  propertyToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  &&  propertyToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	55	None	add
612	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newHashMultimap();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newHashMultimap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newHashMultimap();	  this.invalidationMap    =    Lists.newLinkedHashMultimap();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
613	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(this.types);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.types  =  Collections.newArrayList(this.types);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Collections.newArrayList(this.types);	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
614	[BUG]  [BUGGY]  if(!this.typeSystem.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.typeSystem.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.typeSystem.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  if(!this.typeSystem.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
615	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.typeSystem.isEmpty())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.typeSystem.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  this.typeSystem.isEmpty())  {	  if(!this.typeSystem.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
616	[BUG]  [BUGGY]  if(!this.typeSystem.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.typeSystem.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.typeSystem.isEmpty()  ||  typesToErrorFor.isEmpty())  {	  if(!this.typeSystem.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
617	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  >>  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  >>  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  >>  null)  {	  	non-compiled	[CE]  ';'  expected	76	None	add
618	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
619	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
620	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	10	None	replace
621	[BUG]  [BUGGY]  if(types!=  null)  {  this.invalidationMap  =  Lists.newArrayListWithCapacity(types);  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(types!=  null)  {  this.invalidationMap  =  Lists.newArrayListWithCapacity(types);  }  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(types!=  null)  {  this.invalidationMap  =  Lists.newArrayListWithCapacity(types);  }	  this.invalidationMap    =    Lists.newArrayListWithCapacity(types);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
622	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.  <  Multimap>emptyMap();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Collections.  <  Multimap>emptyMap();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.  <  Multimap>emptyMap();	  this.invalidationMap    =    Collections.EMPTY_MAP;    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
623	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	105	2	replace
624	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	105	2	replace
625	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(8);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(8);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(8);	  this.invalidationMap    =    Lists.newArrayList(0);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
626	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||! "this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||! "this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||! "this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	154	None	add
627	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  	non-compiled	[CE]  ';'  expected	130	None	add
628	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  	non-compiled	[CE]  ';'  expected	130	None	add
629	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }	  	non-compiled	[CE]  ';'  expected	130	None	add
630	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	33	2	replace
631	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap    ==    null)    {    	compilable	  [FE]  ComparisonFailure  	33	2	replace
632	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||  this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	131	2	replace
633	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||  this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||  this.invalidationMap.isEmpty())  {	  if(this.invalidationMap    ==    null    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	131	2	replace
634	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor.contains(propertiesToErrorFor))  {	  if(!this.invalidationMap.isEmpty()    ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
635	[BUG]  [BUGGY]  Collections.sort(this.propertiesToErrorFor,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.propertiesToErrorFor,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.propertiesToErrorFor,  propertiesToErrorFor);	  Collections.sort(typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
636	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
637	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	non-compiled	[CE]  ';'  expected	80	None	replace
638	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newArrayListWithCapacity(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidatingTypes  =  Collections.newArrayListWithCapacity(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.newArrayListWithCapacity(typesToErrorFor);	  this.invalidatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
639	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  |&!this.propertiesToErrorFor.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  |&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    &&!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  ==  null  |&!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
640	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
641	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.cloneTree();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap.cloneTree();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap.cloneTree();	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
642	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.create();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.invalidationMap  =  invalidationMap.create();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap.create();	  this.invalidationMap    =    invalidationMap.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
643	[BUG]  [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.containsKey(name))  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.containsKey(name))  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
644	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  Arrays.asList(this.invalidationMap);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  Arrays.asList(this.invalidationMap);  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  Arrays.asList(this.invalidationMap);	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    <    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
645	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap.containsKey(name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap.containsKey(name))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	20	None	replace
646	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  &&  this.invalidationMap.isEmpty())  {	  if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	85	3	replace
647	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&  this.invalidationMap.isEmpty())  {  [FE]  RuntimeException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&  this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  &&  this.invalidationMap.isEmpty())  {	  if(this.invalidationMap!=    null    &&!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	85	3	replace
648	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  ComparisonFailure  	136	2	replace
649	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    propertiesToErrorFor!=    null)    {    	compilable	  [FE]  ComparisonFailure  	136	2	replace
650	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  ComparisonFailure  	29	2	replace
651	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  ComparisonFailure  	29	2	replace
652	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  RuntimeException  	29	3	replace
653	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [FE]  RuntimeException  [FE]      NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  if(!this.invalidationMap.isEmpty()    &&    this.propertiesToErrorFor!=    null)    {    	compilable	  [FE]  RuntimeException  	29	3	replace
654	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(this.propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Lists.newArrayList(this.propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(this.propertiesToErrorFor);	  this.validatingTypes    =    Lists.newArrayList(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
655	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null)  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(propertiesToErrorFor!=  null)  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null)  {  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
656	[BUG]  [BUGGY]  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	If(propertiesToErrorFor  ==  null  ||!propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  ';'  expected	63	None	replace
657	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newArrayListWithCapacity(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.newArrayListWithCapacity(typesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newArrayListWithCapacity(typesToErrorFor);	  this.validatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
658	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newArrayList(this.validatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.newArrayList(this.validatingTypes);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newArrayList(this.validatingTypes);	  this.validatingTypes    =    Collections.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
659	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  E>emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  this.validatingTypes  =  Collections.  <  E>emptySet();  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.  <  E>emptySet();	  this.validatingTypes    =    Collections.EMPTY_SET;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
660	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    &&!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	88	None	add
661	[BUG]  [BUGGY]  Collections.sort(this.invalidatingTypes,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  Collections.sort(this.invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.invalidatingTypes,  propertiesToErrorFor);	  Collections.sort(propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
662	[BUG]  [BUGGY]  if(typesToErrorFor  ==  null)  {  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(typesToErrorFor  ==  null)  {  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);  }  [BUGGY]      if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(typesToErrorFor  ==  null)  {  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);  }	  this.invalidatingTypes    =    Lists.newArrayListWithCapacity(typesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	139	None	replace
663	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem.name))  {  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem.name))  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(typeSystem.name))  {	  if(!this.invalidationMap.isEmpty()    &&!this.propertiesToErrorFor.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	21	None	replace
664	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  ArrayBuilders.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  cannot  find  symbol  ArrayBuilders  [FE]          NullPointerException      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  ArrayBuilders.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  ArrayBuilders.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())    {    this.invalidationMap    =    LinkedHashMultimap.create();    }    else    {    this.invalidationMap    =    propertiesToErrorFor;    }    	non-compiled	[CE]  cannot  find  symbol  ArrayBuilders	143	None	replace
665	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  if(!this.propertiesToErrorMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()    ||    this.propertiesToErrorFor!=    null)    {    if(!this.propertiesToErrorMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {	  	non-compiled	[CE]  ';'  expected	74	None	add
666	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||  this.invalidationMap.size()  ==  1)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||  this.invalidationMap.size()  ==  1)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	117	62	replace
667	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||  this.invalidationMap.size()  ==  1)  {  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;      [BUGGY]  if(this.invalidationMap!=  null  ||  this.invalidationMap.size()  ==  1)  {  [BUGGY]      this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||  this.invalidationMap.size()  ==  1)  {	  if(this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	117	62	replace
