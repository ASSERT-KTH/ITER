bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(typesToErrorFor);	      this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.newArrayList();	      this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Sets.newHashSet();	      this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(0);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(0);	      this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
5	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.contains(propertiesToErrorFor))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
6	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.contains(propertiesToErrorFor))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.contains(propertiesToErrorFor))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
7	[BUG]  [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!invalidationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!invalidationMap.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
8	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.contains(propertiesToErrorFor))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
9	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
10	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
11	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  ||  propertyToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
12	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.propersToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  if(!this.propersToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    if(!this.propersToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	21	None	add
13	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]    RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
14	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]      RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
15	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]        RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
16	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  >=  null)  {  [CE]  ';'  expected  [FE]          RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  >=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  >=  null)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
17	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	3	None	add
18	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    If(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	3	None	add
19	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  if(!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    if(!this.propertiesToErrorFor.isEmpty()  ||! "this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  unclosed  string  literal	3	None	add
20	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(name))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.containsKey(name))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
21	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(name))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.propertiesToErrorFor.containsKey(name))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
22	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(key))  {  [CE]  cannot  find  symbol  key  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(key))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(key))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(name))    {    	non-compiled	[CE]  cannot  find  symbol  key	14	None	replace
23	[BUG]  [BUGGY]  Collections.sort(typeSystem);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  Collections.sort(typeSystem);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(typeSystem);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  Collections.sort(this.propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  Collections.sort(this.propertiesToErrorFor);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.propertiesToErrorFor);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Collections.sort(this.typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  Collections.sort(this.typeSystem);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.typeSystem);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  Collections.sort(typeSystem,  propertiesToErrorFor);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(typeSystem,  propertiesToErrorFor);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  Collections.sort(propertiesToErrorFor,  typeSystem);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(propertiesToErrorFor,  typeSystem);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	16	62	replace
29	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  this.propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	16	62	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	16	2	replace
31	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [FE]  ComparisonFailure  [FE]      RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	16	2	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	16	2	replace
33	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [FE]  ComparisonFailure  [FE]        RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	16	2	replace
34	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
35	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
36	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  If(!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    If(!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
37	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())  <  this.invalidationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
38	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.create()!=  null)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
39	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
41	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
43	[BUG]  [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
44	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	20	3	replace
45	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  &&!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	20	3	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
47	[BUG]  [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
48	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.emptyMap();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Lists.emptyMap();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.emptyMap();	      this.invalidationMap    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Collections.EMPTY_MAP;  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.EMPTY_MAP;	      this.invalidationMap    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  this.invalidationMap  =  Maps.emptyMap();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Maps.emptyMap();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Maps.emptyMap();	      this.invalidationMap    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Collections.emptySet();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.emptySet();	      this.validatingTypes    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_SET;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Collections.EMPTY_SET;  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.EMPTY_SET;	      this.validatingTypes    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST;  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.EMPTY_LIST;	      this.validatingTypes    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.emptyMap();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.emptyMap();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.emptyMap();	      this.validatingTypes    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	22	3	replace
56	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [FE]  RuntimeException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  RuntimeException  	22	3	replace
57	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	22	62	replace
58	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  NullPointerException  	22	62	replace
59	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  typesToErrorFor  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  typesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	22	None	replace
60	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isNone())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isNone())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
61	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
62	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    if(propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
63	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    If(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
64	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.emptySet();	      this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
65	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_LIST;  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.EMPTY_LIST;	      this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
66	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.emptyList();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Lists.emptyList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.emptyList();	      this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
67	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyList();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Collections.  <  T>emptyList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.  <  T>emptyList();	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	4	62	replace
69	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	4	62	replace
70	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	4	62	replace
71	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	4	62	replace
72	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNone())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
73	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNull())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNull())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.isNull())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
74	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	6	62	replace
75	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	6	62	replace
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	6	2	replace
77	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	6	2	replace
78	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
79	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
80	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    If(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
81	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  >=  null)  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  >=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap  >=  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
82	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
83	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
84	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	2	3	replace
85	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  [FE]  RuntimeException  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	2	3	replace
86	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
87	[BUG]  [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
88	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
89	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
90	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(types);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Lists.newArrayList(types);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(types);	      this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
91	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newLinkedHashMultimap();	      this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
92	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Lists.newArrayList(0);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(0);	      this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
93	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newArrayList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Collections.newArrayList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.newArrayList();	      this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
94	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.types  =  Collections.newArrayList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Collections.newArrayList();	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
95	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.types  =  Lists.newArrayList(typesToSkip);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typesToSkip);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
96	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(this.types);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.types  =  Lists.newArrayList(this.types);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(this.types);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
97	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.types  =  Sets.newHashSet();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Sets.newHashSet();	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
98	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newArrayList();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Collections.newArrayList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.newArrayList();	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
99	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typesToErrorFor);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typesToErrorFor);	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
100	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.newArrayList(0);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(0);	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
101	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.newArrayList(typeSystem);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(typeSystem);	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
102	[BUG]  [BUGGY]  Collections.sort(propertiesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  Collections.sort(propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(propertiesToErrorFor,  invalidatingTypes);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
103	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.emptyList();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.emptyList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.emptyList();	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
104	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	6	2	replace
105	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor  ==  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	6	2	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
107	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
108	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.newArrayList(invalidatingTypes);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayList(invalidatingTypes);	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
109	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.newLinkedList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newLinkedList();	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
110	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    this.invalidationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  ';'  expected	1	None	add
111	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	1	None	add
112	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty()  ||  LinkedHashMultimap.containsKey(name))  {	  	non-compiled	[CE]  ';'  expected	1	None	add
113	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(invalidatingTypes);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayList(invalidatingTypes);	      this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
114	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newLinkedList();	      this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
115	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(name))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.containsKey(name))  {	  if(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  name	2	None	replace
116	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	2	3	replace
117	[BUG]  [BUGGY]  if(this.invalidationMap!=  null)  {  [FE]  RuntimeException  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap!=  null)  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  RuntimeException  	2	3	replace
118	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.contains(typeSystem))  {  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.contains(typeSystem))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  invalidatingTypes.contains(typeSystem))  {	  if(!this.invalidationMap.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	2	None	replace
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	16	2	replace
120	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [FE]  ComparisonFailure  [FE]    RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  ComparisonFailure  	16	2	replace
121	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.types  =  Lists.newArrayList(0);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(0);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
122	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.types  =  Lists.newArrayList(typeSystem);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newArrayList(typeSystem);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
123	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(name))    {    	compilable	  [FE]  NullPointerException  	14	62	replace
124	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [FE]  NullPointerException  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(typeSystem))  {	  if(!this.propertiesToErrorFor.isEmpty()    &&!this.invalidationMap.containsKey(name))    {    	compilable	  [FE]  NullPointerException  	14	62	replace
125	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.emptyMap();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  invalidationMap.emptyMap();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  invalidationMap.emptyMap();	      this.invalidationMap    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	22	2	replace
127	[BUG]  [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	22	2	replace
128	[BUG]  [BUGGY]  if(!this.typeSystem.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.typeSystem.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.typeSystem.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
129	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypes);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(invalidatingTypes);	      this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
130	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	2	2	replace
131	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	2	2	replace
132	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
133	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||  this.invalidationMap.isEmpty())  {	  if(!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	2	62	replace
134	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Collections.unmodifiableSet();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.unmodifiableSet();	      this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
135	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	16	62	replace
136	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [FE]  NullPointerException  [FE]    RuntimeException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  &&  propertiesToErrorFor!=  null)  {	  if(!this.propertiesToErrorFor.isEmpty()    &&    this.invalidationMap!=    null)    {    	compilable	  [FE]  NullPointerException  	16	62	replace
137	[BUG]  [BUGGY]  Collections.sort(this.rootTypes);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  Collections.sort(this.rootTypes);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	Collections.sort(this.rootTypes);	      Collections.sort(propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
138	[BUG]  [BUGGY]  logger  =  Logger.getLogger(compiler);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  logger  =  Logger.getLogger(compiler);  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	logger  =  Logger.getLogger(compiler);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
139	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);	      this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
140	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(types);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(types);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayListWithCapacity(types);	      this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
141	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.types);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Lists.newArrayList(this.types);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Lists.newArrayList(this.types);	      this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
142	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
143	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  propertiesToErrorFor;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
144	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty())  {  if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())    {    if(!this.invalidationMap.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  Collections.emptyMap();  }	  	non-compiled	[CE]  ';'  expected	1	None	add
145	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
146	[BUG]  [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.propertiesToErrorFor!=  null  ||!this.propertiesToErrorFor.isEmpty())  {	  if(propertiesToErrorFor    ==    null    ||!this.propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	22	2	replace
148	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	22	2	replace
149	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	22	2	replace
150	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  this.propertiesToErrorFor.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||    propertiesToErrorFor.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	22	2	replace
151	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Lists.newArrayListWithCapacity(typesToErrorFor);	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
152	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Sets.newHashSet();	      this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST_ARRAY;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST_ARRAY;  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.validatingTypes  =  Collections.EMPTY_LIST_ARRAY;	      this.validatingTypes    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
155	[BUG]  [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(this.invalidationMap  ==  null  ||!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
156	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	4	62	replace
157	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {  [BUGGY]    this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty()  ||!this.propertiesToErrorFor.equals(propertiesToErrorFor))  {	  if(!this.propertiesToErrorFor.isEmpty()    ||!this.invalidationMap.isEmpty())    {    	compilable	  [FE]  NullPointerException  	4	62	replace
158	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidationMap  =  Collections.EMPTY_LIST;  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidationMap  =  Collections.EMPTY_LIST;	      this.invalidationMap    =    Collections.emptyMap();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
159	[BUG]  [BUGGY]  this.types  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.types  =  Lists.newLinkedList();  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.types  =  Lists.newLinkedList();	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
160	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;    [BUGGY]  this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes);  [BUGGY]    if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	this.invalidatingTypes  =  Collections.synchronizedSet(this.invalidatingTypes);	      this.invalidatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
