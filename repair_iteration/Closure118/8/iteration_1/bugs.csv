bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.invalidationMap.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  NullPointerException  	15	62	replace
2	[BUG]  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.invalidationMap.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.invalidationMap.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  NullPointerException  	15	62	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
4	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
6	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  this.invalidationMap!=  null)  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	  	if  (!this.propertiesToErrorFor.isEmpty())  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]    this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.validatingTypes  =  Lists.newArrayList();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.validatingTypes  =  Lists.newArrayList();		non-compiled	[CE]  cannot  find  symbol  validatingTypes	16	None	add
9	[BUG]  [BUGGY]    Collections.sort(propertiesToErrorFor);  [CE]  cannot  find  symbol  Collections  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    Collections.sort(propertiesToErrorFor);  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    Collections.sort(propertiesToErrorFor);		non-compiled	[CE]  cannot  find  symbol  Collections	16	None	add
10	[BUG]  [BUGGY]    this.invalidationMap  =  Lists.newArrayList();  [CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.invalidationMap  =  Lists.newArrayList();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.invalidationMap  =  Lists.newArrayList();		non-compiled	[CE]  incompatible  types;  no  instance(s)  of  type  variable(s)  E  exist  so  that  ArrayList<E>  conforms  to  Multimap<Object,JSError>	16	None	add
11	[BUG]  [BUGGY]    this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.validatingTypes  =  Collections.emptyList();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.validatingTypes  =  Collections.emptyList();		non-compiled	[CE]  cannot  find  symbol  validatingTypes	16	None	add
12	[BUG]  [BUGGY]    this.validatingTypes  =  Collections.emptyMap();  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.validatingTypes  =  Collections.emptyMap();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.validatingTypes  =  Collections.emptyMap();		non-compiled	[CE]  cannot  find  symbol  validatingTypes	16	None	add
13	[BUG]  [BUGGY]    this.invalidationMap  =  Collections.emptyMap();  [CE]  cannot  find  symbol  Collections  [FE]              ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.invalidationMap  =  Collections.emptyMap();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.invalidationMap  =  Collections.emptyMap();		non-compiled	[CE]  cannot  find  symbol  Collections	16	None	add
14	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(name))  {  [CE]  cannot  find  symbol  name  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(name))  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&!this.invalidationMap.containsKey(name))  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	non-compiled	[CE]  cannot  find  symbol  name	15	None	replace
15	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  RuntimeException  	15	3	replace
16	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [FE]  RuntimeException  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  &&  this.invalidationMap!=  null)  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  RuntimeException  	15	3	replace
17	[BUG]  [BUGGY]    this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.invalidatingTypes  =  Lists.newArrayList();		non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	16	None	add
18	[BUG]  [BUGGY]    this.invalidatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.invalidatingTypes  =  Collections.emptyList();		non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	16	None	add
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
20	[BUG]  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(propertiesToErrorFor  ==  null  ||!this.propertiesToErrorFor.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	add	if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
22	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||  propertiesToErrorFor.isEmpty())  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	compilable	  [FE]  ComparisonFailure  	15	2	replace
23	[BUG]  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]  if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	if(!this.propertiesToErrorFor.isEmpty()  ||!this.invalidationMap.contains(propertiesToErrorFor))  {	if  (!this.propertiesToErrorFor.isEmpty())  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
24	[BUG]  [BUGGY]    this.types  =  Lists.newArrayList();  [CE]  cannot  find  symbol  types  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]    this.types  =  Lists.newArrayList();  [BUGGY]  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	307	307	2	replace	    this.types  =  Lists.newArrayList();		non-compiled	[CE]  cannot  find  symbol  types	16	None	add
