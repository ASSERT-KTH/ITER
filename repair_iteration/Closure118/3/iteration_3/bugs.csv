bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler,  invalidatingTypes);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  instanceof  AbstractCompiler,  invalidatingTypes);	  Preconditions.checkState(compiler    instanceof    AbstractCompiler);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler,  typeSystem);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler,  typeSystem);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  instanceof  AbstractCompiler,  typeSystem);	  Preconditions.checkState(compiler    instanceof    AbstractCompiler);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  Class  <?>);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  Class  <?>);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  instanceof  Class  <?>);	  Preconditions.checkState(compiler    instanceof    AbstractCompiler);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  Class  <?>);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  Class  <?>);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  Class  <?>);	  Preconditions.checkState(compiler    instanceof    AbstractCompiler);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
5	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
6	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
7	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
8	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
9	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  new  ArrayList  <  T>();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  new  ArrayList  <  T>();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  new  ArrayList  <  T>();	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
10	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
11	[BUG]  [BUGGY]  Collections.EMPTY_SETS)  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_SETS)  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_SETS)  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
12	[BUG]  [BUGGY]  Collections.unmodifiableSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.unmodifiableSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.unmodifiableSet())  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
13	[BUG]  [BUGGY]  Collections.unmodifiableSet(compiler))  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.unmodifiableSet(compiler))  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.unmodifiableSet(compiler))  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
14	[BUG]  [BUGGY]  Constructor  <  T>  compiler,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Constructor  <  T>  compiler,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Constructor  <  T>  compiler,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
15	[BUG]  [BUGGY]  Constructor  <  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  >  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Constructor  <  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Constructor  <  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  >  expected	133	None	replace
16	[BUG]  [BUGGY]  Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	133	None	replace
17	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
18	[BUG]  [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
19	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
20	[BUG]  [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
23	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  null);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
24	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  tt);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  tt);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
25	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null,  codingConvention);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler!=  null,  codingConvention);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkState(compiler!=  null,  codingConvention);	  Predicates.checkNotNull(compiler,    codingConvention);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  Predicates.checkState(compiler  ==  null,  codingConvention);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler  ==  null,  codingConvention);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkState(compiler  ==  null,  codingConvention);	  Predicates.checkNotNull(compiler,    codingConvention);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  boolean  skipRenaming)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  boolean  skipRenaming)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    invalidatingTypes)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	93	None	replace
28	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  tt)  {  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  tt)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    invalidatingTypes)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
29	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  LinkedHashMultimap)  {  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  LinkedHashMultimap)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  LinkedHashMultimap)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    invalidatingTypes)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
30	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  logger)  {  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  logger)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes,  logger)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    invalidatingTypes)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
31	[BUG]  [BUGGY]  (AbstractCompiler)compiler.cloneTree(),  registry;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.cloneTree(),  registry;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.cloneTree(),  registry;	  (AbstractCompiler)compiler.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  (AbstractCompiler)compiler.create();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.create();	  (AbstractCompiler)compiler.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
33	[BUG]  [BUGGY]  (AbstractCompiler)compiler.cloneTree(this.typeSystem);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.cloneTree(this.typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.cloneTree(this.typeSystem);	  (AbstractCompiler)compiler.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Collections.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Collections.newHashSet();	  this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
35	[BUG]  [BUGGY]  This.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  This.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	This.invalidatingTypes  =  Sets.newHashSet();	  this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
36	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet(compiler);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Sets.newHashSet(compiler);	  this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
37	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
38	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
39	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  logger  =  Logger.getLogger(compiler,  name);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger  =  Logger.getLogger(compiler,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger  =  Logger.getLogger(compiler,  name);	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
43	[BUG]  [BUGGY]  logger  =  compiler.getLogger();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger  =  compiler.getLogger();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger  =  compiler.getLogger();	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
44	[BUG]  [BUGGY]  Logger.getLogger(compiler));  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Logger.getLogger(compiler));  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Logger.getLogger(compiler));	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
45	[BUG]  [BUGGY]  this(compiler,  null,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
46	[BUG]  [BUGGY]  this(compiler,  registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
47	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  propertiesToErrorFor)  {	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
48	[BUG]  [BUGGY]  this.registry  =  registry.createRegistry();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  registry.createRegistry();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  registry.createRegistry();	  this.registry    =    compiler.createRegistry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
49	[BUG]  [BUGGY]  this.registry  =  compiler.createRegistry(this);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.createRegistry(this);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.createRegistry(this);	  this.registry    =    compiler.createRegistry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
50	[BUG]  [BUGGY]  this.registry  =  compiler.createRegistry(null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.createRegistry(null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.createRegistry(null);	  this.registry    =    compiler.createRegistry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
51	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_SET;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.validatingTypes  =  Collections.EMPTY_SET;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.validatingTypes  =  Collections.EMPTY_SET;	  this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
52	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.validatingTypes  =  Lists.newArrayList();	  this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
53	[BUG]  [BUGGY]  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.validatingTypes  =  Sets.newHashSet();	  this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
54	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.validatingTypes  =  Collections.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.validatingTypes  =  Collections.newHashSet();	  this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
55	[BUG]  [BUGGY]  Predicates.checkArgument(compiler  ==  null);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler  ==  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkArgument(compiler  ==  null);	  Predicates.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
56	[BUG]  [BUGGY]  Predicates.checkArgument(compiler.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler.getType()  ==  Token.NAME);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkArgument(compiler.getType()  ==  Token.NAME);	  Predicates.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  Predicates.checkArgument(compiler.getTypeRegistry()!=  null);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler.getTypeRegistry()!=  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkArgument(compiler.getTypeRegistry()!=  null);	  Predicates.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
58	[BUG]  [BUGGY]  this(compiler,  registry,  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
59	[BUG]  [BUGGY]  this(compiler,  registry,  null,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  null,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  null,  propertiesToErrorFor)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
60	[BUG]  [BUGGY]  this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>(),  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>(),  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>(),  propertiesToErrorFor)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
61	[BUG]  [BUGGY]  this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>())  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>())  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>())  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
62	[BUG]  [BUGGY]  this(compiler,  registry,  null,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  null,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  null,  propertiesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
63	[BUG]  [BUGGY]  Predicates.checkState(compiler  >=  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler  >=  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkState(compiler  >=  null);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  Predicates.checkState(compiler  [Delete]  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler  [Delete]  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkState(compiler  [Delete]  null);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  tt)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  tt)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    tt)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	71	None	replace
66	[BUG]  [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	typeSystem,  Map  <  String,  CheckLevel>  tt)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    tt)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
67	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt,  boolean  skipRenaming)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt,  boolean  skipRenaming)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    tt)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	71	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  typeSystem,  0,  tt.length);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  typeSystem,  0,  tt.length);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  typeSystem,  0,  tt.length);	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    tt)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
69	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
70	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
71	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
72	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet()    ||    invalidatingTypes.size()    ==    0)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
73	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  1)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  1)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  1)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet()    ||    invalidatingTypes.size()    ==    0)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
74	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  2)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  2)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  2)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet()    ||    invalidatingTypes.size()    ==    0)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
75	[BUG]  [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
76	[BUG]  [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  skipRenaming)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
77	[BUG]  [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
78	[BUG]  [BUGGY]  super(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
79	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  compiler)  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  compiler)  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  compiler)  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  Collections.  <  T>emptyMap())  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyMap())  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyMap())  {  this.invalidationMap  =  Collections.emptyMap();  }	  Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
82	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();  }	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
83	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  registry)  {  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  registry)  {  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  registry)  {  this.validatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
84	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this,  registry);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this,  registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompiler(this,  registry);	  AbstractCompiler    compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  	63	None	replace
85	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this,  null);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this,  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompiler(this,  null);	  AbstractCompiler    compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  	63	None	replace
86	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this,  name);  [CE]  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this,  name);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompiler(this,  name);	  AbstractCompiler    compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  	63	None	replace
87	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    T>emptyList(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
88	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    T>emptyList(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
89	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes,  renameNodes)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes,  renameNodes)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  invalidatingTypes,  renameNodes)  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    T>emptyList(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
90	[BUG]  [BUGGY]  Arrays.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    T>emptyList(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
91	[BUG]  [BUGGY]  Context.checkState(compiler  ==  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler  ==  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Context.checkState(compiler  ==  null);	  Context.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
92	[BUG]  [BUGGY]  Context.checkState(compiler  >=  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler  >=  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Context.checkState(compiler  >=  null);	  Context.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
93	[BUG]  [BUGGY]  Context.checkState(compiler  [Delete]  null);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler  [Delete]  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Context.checkState(compiler  [Delete]  null);	  Context.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
94	[BUG]  [BUGGY]  Context.checkState(compiler  >>  null);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler  >>  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Context.checkState(compiler  >>  null);	  Context.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypes,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypes,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  invalidatingTypes,  0,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.invalidatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  invalidatingTypes.length);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  invalidatingTypes.length);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  invalidatingTypes.length);	  System.arraycopy(compiler,    0,    this.invalidatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.invalidatingTypes);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.invalidatingTypes);	  System.arraycopy(compiler,    0,    this.invalidatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToErrorFor,  tt);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToErrorFor,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  typesToSkip);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  typesToSkip);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  typeSystem);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  typeSystem);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  invalidatingTypes);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(this.typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(this.typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(this.typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(typeSystem,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(typeSystem,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(typeSystem,  0,  this.typeSystem,  0,  propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(this.propertiesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(this.propertiesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(this.propertiesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
105	[BUG]  [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_SET)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
106	[BUG]  [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.EMPTY_SET)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
107	[BUG]  [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.EMPTY_SET)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
108	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>);	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
109	[BUG]  [BUGGY]  this(compiler,  propertiesToErrorFor,  Collections.  <  String,  CheckLevel>emptySet());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  propertiesToErrorFor,  Collections.  <  String,  CheckLevel>emptySet());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  propertiesToErrorFor,  Collections.  <  String,  CheckLevel>emptySet());	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
110	[BUG]  [BUGGY]  this.compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
111	[BUG]  [BUGGY]  this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>,  false);	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
112	[BUG]  [BUGGY]  this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>,  null);	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
113	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    true)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
114	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    true)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
115	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    true)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
116	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    true)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
117	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  typesToErrorFor)  {	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
118	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor)  {	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
119	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
120	[BUG]  [BUGGY]  this.registry  =  registry.getRegistry(),  compiler;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  registry.getRegistry(),  compiler;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  registry.getRegistry(),  compiler;	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
121	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(),  registry);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(),  registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(),  registry);	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
122	[BUG]  [BUGGY]  this.registry  =  registry.getRegistry(),  compiler);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  registry.getRegistry(),  compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  registry.getRegistry(),  compiler);	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
123	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(),  name;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(),  name;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(),  name;	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
124	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>)  {	  super(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>)    {    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
125	[BUG]  [BUGGY]  super(compiler,  typesToErrorFor,  Map  <  String,  CheckLevel>)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typesToErrorFor,  Map  <  String,  CheckLevel>)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typesToErrorFor,  Map  <  String,  CheckLevel>)  {	  super(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>)    {    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
126	[BUG]  [BUGGY]  super(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>)  {	  super(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>)    {    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
127	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>)  {	  super(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>)    {    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
128	[BUG]  [BUGGY]  super(compiler,  propertiesToErrorFor,  Map  <  T>,  CheckLevel>)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  propertiesToErrorFor,  Map  <  T>,  CheckLevel>)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  propertiesToErrorFor,  Map  <  T>,  CheckLevel>)  {	  super(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>)    {    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
129	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  compiler)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  compiler)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  compiler)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
130	[BUG]  [BUGGY]  this(compiler,  null,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
131	[BUG]  [BUGGY]  this(compiler,  registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
132	[BUG]  [BUGGY]  this.compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
133	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
134	[BUG]  [BUGGY]  this.compiler,  codingConvention);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  codingConvention);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  codingConvention);	  this.compiler,    compiler);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
135	[BUG]  [BUGGY]  this.compiler,  registry);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  registry);	  this.compiler,    compiler);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
136	[BUG]  [BUGGY]  this.compiler,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  null);	  this.compiler,    compiler);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
137	[BUG]  [BUGGY]  this.compiler,  tt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  tt);	  this.compiler,    compiler);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
138	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  registry,  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  registry,  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  registry,  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    registry)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
139	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    registry)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
140	[BUG]  [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
141	[BUG]  [BUGGY]  Collections.EMPTY_SETS)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_SETS)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_SETS)  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
142	[BUG]  [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
143	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  typesToErrorFor)  {	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
144	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
145	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS)  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
146	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
147	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  true)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  true)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS,  true)  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
148	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
149	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
150	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
151	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    null);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
152	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  null);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    null);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
153	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    null);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
154	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  name);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  name);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  name);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler.getType()  ==  Token.NAME);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler.getType()  ==  Token.NAME);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
156	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()!=  Token.NAME);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler.getType()!=  Token.NAME);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  null);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME,  null);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
158	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  typeSystem);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
159	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
160	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
161	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  name);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  name);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
162	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  typeSystem);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  typeSystem);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor,  tt);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.typeSystem,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  typesToErrorFor);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  typesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  compiler);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  compiler);	  System.arraycopy(compiler,    0,    this.typeSystem,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  this.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor  -  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor  -  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor  -  1);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor  +  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor  +  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor  +  1);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor,  tt);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
170	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  ||  compiler.isInterface());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  ||  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler!=  null  ||  compiler.isInterface());	  Preconditions.checkState(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
171	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null  &&  compiler.isInterface());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null  &&  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  ==  null  &&  compiler.isInterface());	  Preconditions.checkState(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
172	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null  ||  compiler.isInterface());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler  ==  null  ||  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  ==  null  ||  compiler.isInterface());	  Preconditions.checkState(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
173	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isConstructor());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isConstructor());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler!=  null  &&  compiler.isConstructor());	  Preconditions.checkState(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
174	[BUG]  [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
175	[BUG]  [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
176	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  this.name)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  this.name)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  this.name)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
177	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
178	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  tt)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  tt)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
179	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  true)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  true)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  true)  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	130	None	replace
180	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	130	None	replace
181	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.newArrayList();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.newArrayList();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	130	None	replace
182	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_SET;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_SET;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Collections.EMPTY_SET;	  this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
183	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.nextToken();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.nextToken();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.nextToken();	  AbstractCompiler    compiler    =    compiler.next();    	non-compiled	[CE]  	90	None	replace
184	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.create();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.create();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.create();	  AbstractCompiler    compiler    =    compiler.next();    	non-compiled	[CE]  	90	None	replace
185	[BUG]  [BUGGY]  (AbstractCompiler)compiler,  registry);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler,  registry);	  (AbstractCompiler)compiler);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
186	[BUG]  [BUGGY]  (AbstractCompiler)compiler,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler,  null);	  (AbstractCompiler)compiler);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
187	[BUG]  [BUGGY]  (AbstractCompiler)compiler,  codingConvention);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler,  codingConvention);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler,  codingConvention);	  (AbstractCompiler)compiler);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
188	[BUG]  [BUGGY]  (AbstractCompiler)compiler,  false);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler,  false);	  (AbstractCompiler)compiler);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
189	[BUG]  [BUGGY]  this(compiler,  true,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
190	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
191	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
192	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  NodeTraversal.traverse(compiler,  this,  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  this,  null);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
193	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  registry);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  NodeTraversal.traverse(compiler,  this,  registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  this,  registry);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
194	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  NodeTraversal.traverse(compiler,  this,  propertiesToErrorFor);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  this,  propertiesToErrorFor);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
195	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  null);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  NodeTraversal.traverse(compiler,  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  null);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
196	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Collections.EMPTY_LIST;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.EMPTY_LIST;	  this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
197	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.emptyMap();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Collections.emptyMap();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.emptyMap();	  this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
198	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  registry)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  registry)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  registry)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    compiler)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
199	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  this.compiler)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  this.compiler)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  this.compiler)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    compiler)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
200	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(registry);  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompiler(registry);	  AbstractCompiler    compiler    =    compiler.getCompiler(compiler);    	non-compiled	[CE]  	62	None	replace
201	[BUG]  [BUGGY]  ParameterizedCompiler  compiler  =  compiler.getParameterizedCompiler();  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  ParameterizedCompiler  compiler  =  compiler.getParameterizedCompiler();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	ParameterizedCompiler  compiler  =  compiler.getParameterizedCompiler();	  AbstractCompiler    compiler    =    compiler.getCompiler(compiler);    	non-compiled	[CE]  	62	None	replace
202	[BUG]  [BUGGY]  Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
203	[BUG]  [BUGGY]  Arrays.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
204	[BUG]  [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyMap(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
205	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
206	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
207	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
208	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
209	[BUG]  [BUGGY]  super(compiler,  invalidatingTypes,  registry);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  invalidatingTypes,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  invalidatingTypes,  registry);	  super(compiler,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
210	[BUG]  [BUGGY]  super(compiler,  invalidatingTypes,  tt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  invalidatingTypes,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  invalidatingTypes,  tt);	  super(compiler,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
211	[BUG]  [BUGGY]  super(compiler,  invalidatingTypes,  renameNodes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  invalidatingTypes,  renameNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  invalidatingTypes,  renameNodes);	  super(compiler,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
212	[BUG]  [BUGGY]  super(compiler,  invalidatingTypes,  name);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  invalidatingTypes,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  invalidatingTypes,  name);	  super(compiler,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
213	[BUG]  [BUGGY]  super(compiler,  invalidatingTypes,  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  invalidatingTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  invalidatingTypes,  null);	  super(compiler,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
214	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
215	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
216	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
217	[BUG]  [BUGGY]  Preconditions.checkState(!compiler.isUnknownProperty());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(!compiler.isUnknownProperty());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(!compiler.isUnknownProperty());	  Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor,  renameNodes);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor,  renameNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor,  renameNodes);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
219	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToSkip);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToSkip);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  this.typeSystem.length);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  this.typeSystem.length);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  this.typeSystem.length);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
221	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor,  tt);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
222	[BUG]  [BUGGY]  Collections.newArrayList())  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newArrayList())  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newArrayList())  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.newHashSet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
223	[BUG]  [BUGGY]  Collections.newHashSet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newHashSet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashSet())  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.newHashSet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
224	[BUG]  [BUGGY]  Collections.newHashSet())  {  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newHashSet())  {  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashSet())  {  this.invalidationMap  =  Lists.newLinkedHashMultimap();	  Collections.newHashSet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
225	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
226	[BUG]  [BUGGY]  this(registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
227	[BUG]  [BUGGY]  this(registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
228	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
229	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  Object,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
230	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  tt)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  tt)  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
231	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(compiler);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Lists.newArrayList(compiler);	  this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
232	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Collections.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Collections.newArrayList();	  this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
233	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(0);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Lists.newArrayList(0);	  this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
234	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Lists.newLinkedList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Lists.newLinkedList();	  this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
235	[BUG]  [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
236	[BUG]  [BUGGY]  super(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
237	[BUG]  [BUGGY]  super(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
238	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
239	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor.length);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor.length);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor.length);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  tt);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor.size());  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor.size());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor.size());	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
243	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
244	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  new  HashSet  <  T>();  }  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  new  HashSet  <  T>();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  new  HashSet  <  T>();  }	  Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
245	[BUG]  [BUGGY]  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	add	TypeSystem  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	compilable	  [FE]  ComparisonFailure  	70	2	replace
247	[BUG]  [BUGGY]  TypeSystem  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	compilable	  [FE]  ComparisonFailure  	70	2	replace
248	[BUG]  [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {	  typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
249	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  typeSystem;	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
250	[BUG]  [BUGGY]  this.typeSystem  =  System.getProperty(JavaTypeRegistry.DEFAULT_TYPE);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  System.getProperty(JavaTypeRegistry.DEFAULT_TYPE);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  System.getProperty(JavaTypeRegistry.DEFAULT_TYPE);	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
251	[BUG]  [BUGGY]  this.typeSystem  =  System.getProperty(PROPERTY_SYSTEM);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  System.getProperty(PROPERTY_SYSTEM);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  System.getProperty(PROPERTY_SYSTEM);	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
252	[BUG]  [BUGGY]  this.typeSystem  =  System.getProperty(PROPERTY_SYNTHETIC_PROPERTY);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  System.getProperty(PROPERTY_SYNTHETIC_PROPERTY);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  System.getProperty(PROPERTY_SYNTHETIC_PROPERTY);	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
253	[BUG]  [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
254	[BUG]  [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
255	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
256	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  true)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  true)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  true)  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
257	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newLinkedHashMultimap();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
258	[BUG]  [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
259	[BUG]  [BUGGY]  super(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
260	[BUG]  [BUGGY]  super(registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  compiler)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
261	[BUG]  [BUGGY]  super(registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(registry,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  compiler.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  compiler.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  compiler.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.typeSystem);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.typeSystem.types);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.typeSystem.types);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.typeSystem.types);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.typeSystem);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
264	[BUG]  [BUGGY]  this.registry  =  registry.getRegistry(name);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  registry.getRegistry(name);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  registry.getRegistry(name);	  this.registry    =    registry.getRegistry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
265	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  T>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Maps.  <  T>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  T>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
266	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
267	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Maps.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
268	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
269	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor  -  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor  -  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor  -  1);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
270	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor  +  1);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor  +  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor  +  1);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
271	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  this.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
272	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    invalidationMap)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
273	[BUG]  [BUGGY]  Arrays.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    T>emptyList(),    invalidationMap)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
274	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  invalidatingTypes.length);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  invalidatingTypes.length);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.validatingTypes,  0,  invalidatingTypes.length);	  System.arraycopy(compiler,    0,    this.validatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
275	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  propertiesToErrorFor,  tt);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  propertiesToErrorFor,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.validatingTypes,  0,  propertiesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.validatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
276	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  typesToSkip);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.validatingTypes,  0,  typesToSkip);	  System.arraycopy(compiler,    0,    this.validatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
277	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToSkip)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
278	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
279	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
280	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(compiler);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newArrayList(compiler);	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
281	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Lists.newLinkedHashMultimap();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newLinkedHashMultimap();	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
282	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(0);  [CE]  illegal  start  of  type  [FE]                                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(0);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newArrayList(0);	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
283	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newArrayList();  [CE]  illegal  start  of  type  [FE]                                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Collections.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.newArrayList();	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
284	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    Lists.    <    Class    <?>    emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
285	[BUG]  [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyMap(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    Lists.    <    Class    <?>    emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
286	[BUG]  [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyMap(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    T>emptyList(),    Lists.    <    Class    <?>    emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
287	[BUG]  [BUGGY]  Collections.newHashSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newHashSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
288	[BUG]  [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
289	[BUG]  [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
290	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.createParent();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.createParent();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.createParent();	  AbstractCompiler    compiler    =    compiler.getParent();    	non-compiled	[CE]  	60	None	replace
291	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getRawParent();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getRawParent();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getRawParent();	  AbstractCompiler    compiler    =    compiler.getParent();    	non-compiled	[CE]  	60	None	replace
292	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getPropertyCompiler();  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getPropertyCompiler();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getPropertyCompiler();	  AbstractCompiler    compiler    =    compiler.getParent();    	non-compiled	[CE]  	60	None	replace
293	[BUG]  [BUGGY]  logger.info( "Invalidating  type  system: "  +  compiler);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger.info( "Invalidating  type  system: "  +  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger.info( "Invalidating  type  system: "  +  compiler);	  logger.fine(   "Invalidating    type    system:   "    +    compiler);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
294	[BUG]  [BUGGY]  logger.fine( "Invalidating  type  system: "  +  name);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger.fine( "Invalidating  type  system: "  +  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger.fine( "Invalidating  type  system: "  +  name);	  logger.fine(   "Invalidating    type    system:   "    +    compiler);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
295	[BUG]  [BUGGY]  logger.fine( "Invalidating  type  system: "  +  typeSystem);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger.fine( "Invalidating  type  system: "  +  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger.fine( "Invalidating  type  system: "  +  typeSystem);	  logger.fine(   "Invalidating    type    system:   "    +    compiler);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
296	[BUG]  [BUGGY]  logger.fine( "Invalidating  type  system: "  +  compiler,  name);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger.fine( "Invalidating  type  system: "  +  compiler,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger.fine( "Invalidating  type  system: "  +  compiler,  name);	  logger.fine(   "Invalidating    type    system:   "    +    compiler);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
297	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.propertiesToErrorFor,    0,    compiler.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
298	[BUG]  [BUGGY]  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(this.propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.propertiesToErrorFor,    0,    compiler.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
299	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    String,    CheckLevel>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
300	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes())  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes())  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidatingTypes())  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    String,    CheckLevel>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
301	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    String,    CheckLevel>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
302	[BUG]  [BUGGY]  Lists.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Lists.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Lists.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    Lists.    <    String>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
303	[BUG]  [BUGGY]  Arrays.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    Lists.    <    String>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
304	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
305	[BUG]  [BUGGY]  this(compiler,  null,  Map.Entry  <  String,  CheckLevel>  entry,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.Entry  <  String,  CheckLevel>  entry,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.Entry  <  String,  CheckLevel>  entry,  propertiesToErrorFor);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
306	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
307	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
308	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
309	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Collections.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
310	[BUG]  [BUGGY]  This.registry  =  compiler.getRegistry(null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  This.registry  =  compiler.getRegistry(null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	This.registry  =  compiler.getRegistry(null);	  This.registry    =    compiler.getRegistry();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
311	[BUG]  [BUGGY]  This.registry  =  compiler.getRegistryInstance();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  This.registry  =  compiler.getRegistryInstance();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	This.registry  =  compiler.getRegistryInstance();	  This.registry    =    compiler.getRegistry();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
312	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
313	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
314	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Collections.newArrayList();  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Collections.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Collections.newArrayList();	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
315	[BUG]  [BUGGY]  this.typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
316	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
317	[BUG]  [BUGGY]  Arrays.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Arrays.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
318	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(null,  registry);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(null,  registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(null,  registry);	  this.registry    =    compiler.getRegistry(null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
319	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(null,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(null,  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(null,  null);	  this.registry    =    compiler.getRegistry(null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
320	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(name);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(name);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(name);	  this.registry    =    compiler.getRegistry(null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
321	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(compiler);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(compiler);	  this.registry    =    compiler.getRegistry(null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
322	[BUG]  [BUGGY]  this(compiler,  registry,  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
323	[BUG]  [BUGGY]  this(registry,  compiler,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(registry,  compiler,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(registry,  compiler,  propertiesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
324	[BUG]  [BUGGY]  this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>());  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  new  HashMap  <  String,  CheckLevel>());	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
325	[BUG]  [BUGGY]  this(compiler,  registry,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  propertiesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  ||  compiler.isInterface());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  ||  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler!=  null  ||  compiler.isInterface());	  Preconditions.checkArgument(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	129	None	replace
327	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  ==  null  &&  compiler.isInterface());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler  ==  null  &&  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler  ==  null  &&  compiler.isInterface());	  Preconditions.checkArgument(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	129	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  ==  null  ||  compiler.isInterface());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler  ==  null  ||  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler  ==  null  ||  compiler.isInterface());	  Preconditions.checkArgument(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	129	None	replace
329	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToSkip);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToSkip);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    typesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToSkip);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToSkip);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    typesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  typesToSkip);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  typesToSkip);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    typesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
332	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToSkip)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
333	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  tt)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
334	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes,  name)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
335	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.EMPTY_SET;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Collections.EMPTY_SET;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.EMPTY_SET;	  this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
336	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newHashSet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Collections.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.newHashSet();	  this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
337	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToSkip)  {  [CE]  variable  propertiesToErrorFor  might  not  have  been  initialized  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToSkip)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToSkip)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    typesToErrorFor)    {    	non-compiled	[CE]  variable  propertiesToErrorFor  might  not  have  been  initialized	94	None	replace
338	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor,  boolean  skipRenaming)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor,  boolean  skipRenaming)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    typesToErrorFor)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	94	None	replace
339	[BUG]  [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    typesToErrorFor)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
340	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  T>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  T>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  T>  propertiesToErrorFor)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
341	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
342	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  Object,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
343	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
344	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
345	[BUG]  [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.emptySet();  }	  LinkedHashMultimap.create())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
346	[BUG]  [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.EMPTY_SET;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.EMPTY_SET;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.EMPTY_SET;	  LinkedHashMultimap.create())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
347	[BUG]  [BUGGY]  This.invalidationMap  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  This.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	This.invalidationMap  =  Collections.emptySet();	  LinkedHashMultimap.create())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
348	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
349	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
350	[BUG]  [BUGGY]  super(compiler,  typeSystem);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem);	  super(compiler,    null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
351	[BUG]  [BUGGY]  super(compiler,  null,  typeSystem);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  typeSystem);	  super(compiler,    null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
352	[BUG]  [BUGGY]  super(compiler,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  propertiesToErrorFor);	  super(compiler,    null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
353	[BUG]  [BUGGY]  super(compiler,  this);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this);	  super(compiler,    null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
354	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(this,  registry);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(this,  registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(this,  registry);	  this.registry    =    compiler.getRegistry(this);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
355	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(this,  name);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(this,  name);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(this,  name);	  this.registry    =    compiler.getRegistry(this);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
356	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(this,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(this,  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(this,  null);	  this.registry    =    compiler.getRegistry(this);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
357	[BUG]  [BUGGY]  Collections.newArrayList())  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newArrayList())  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newArrayList())  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.newHashSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
358	[BUG]  [BUGGY]  Sets.newHashSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Sets.newHashSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Sets.newHashSet())  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.newHashSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
359	[BUG]  [BUGGY]  Collections.newHashSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newHashSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashSet())  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.newHashSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
360	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  T>emptyMap(),  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  T>emptyMap(),  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  T>emptyMap(),  propertiesToErrorFor)  {	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
361	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
362	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  T>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  T>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  T>  propertiesToErrorFor)  {	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
363	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  Object,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
364	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
365	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
366	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
367	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes.  <  String,  CheckLevel>,  Maps.  <  String,  CheckLevel>);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes.  <  String,  CheckLevel>,  Maps.  <  String,  CheckLevel>);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes.  <  String,  CheckLevel>,  Maps.  <  String,  CheckLevel>);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
368	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  name);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes,  name);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
369	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
370	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP,  null)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP,  null)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP,  null)  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
371	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
372	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP  =  Lists.newArrayList();	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
373	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
374	[BUG]  [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
375	[BUG]  [BUGGY]  (AbstractCompiler)compiler.getParent();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.getParent();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.getParent();	  (AbstractCompiler)compiler.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
376	[BUG]  [BUGGY]  (AbstractCompiler)compiler.reset();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.reset();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.reset();	  (AbstractCompiler)compiler.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
377	[BUG]  [BUGGY]  super(compiler,  INVALIDATION_ON_TYPE);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  INVALIDATION_ON_TYPE);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  INVALIDATION_ON_TYPE);	  super(compiler,    codingConvention);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
378	[BUG]  [BUGGY]  super(compiler,  codingConvention,  registry);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  codingConvention,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  codingConvention,  registry);	  super(compiler,    codingConvention);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
379	[BUG]  [BUGGY]  super(compiler,  codingConvention,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  codingConvention,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  codingConvention,  null);	  super(compiler,    codingConvention);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
380	[BUG]  [BUGGY]  super(compiler,  codingConvention,  typeSystem);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  codingConvention,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  codingConvention,  typeSystem);	  super(compiler,    codingConvention);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
381	[BUG]  [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
382	[BUG]  [BUGGY]  Collections.  <  Class  <?>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Class  <?>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Class  <?>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
383	[BUG]  [BUGGY]  Collections.  <  Object>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    Object>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
384	[BUG]  [BUGGY]  Collections.  <  Object>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptyList())  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    Object>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
385	[BUG]  [BUGGY]  Collections.EMPTY_LIST_SETS())  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_SETS())  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_SETS())  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
386	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYSet(),  true)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYSet(),  true)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYSet(),  true)  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
387	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.EMPTY_LIST_ARRAYSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
388	[BUG]  [BUGGY]  Constructor  <  T>  compiler,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Constructor  <  T>  compiler,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Constructor  <  T>  compiler,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
389	[BUG]  [BUGGY]  Constructor  <  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  >  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Constructor  <  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Constructor  <  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  >  expected	132	None	replace
390	[BUG]  [BUGGY]  Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collection  <  T>  typesToErrorFor,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	132	None	replace
391	[BUG]  [BUGGY]  Constructor  <  T>  compiler,  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Constructor  <  T>  compiler,  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Constructor  <  T>  compiler,  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
392	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  new  HashSet  <  T>();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  new  HashSet  <  T>();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.validatingTypes  =  new  HashSet  <  T>();  }	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
393	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  new  ArrayList  <  T>();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  new  ArrayList  <  T>();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.validatingTypes  =  new  ArrayList  <  T>();  }	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
394	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getNativeCompiler();  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getNativeCompiler();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getNativeCompiler();	  AbstractCompiler    compiler    =    compiler.getDefaultCompiler();    	non-compiled	[CE]  	89	None	replace
395	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getInstance();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getInstance();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getInstance();	  AbstractCompiler    compiler    =    compiler.getDefaultCompiler();    	non-compiled	[CE]  	89	None	replace
396	[BUG]  [BUGGY]  super(registry,  compiler);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(registry,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(registry,  compiler);	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
397	[BUG]  [BUGGY]  super(compiler,  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry.getNativeType(JSTypeNative.UNKNOWN_TYPE));	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
398	[BUG]  [BUGGY]  super(compiler,  registry.getNativeType(JSTypeNative.NULL_TYPE));  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry.getNativeType(JSTypeNative.NULL_TYPE));  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry.getNativeType(JSTypeNative.NULL_TYPE));	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
399	[BUG]  [BUGGY]  super(compiler,  registry.getNativeType(JSTypeNative.OBJECT_TYPE));  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry.getNativeType(JSTypeNative.OBJECT_TYPE));  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry.getNativeType(JSTypeNative.OBJECT_TYPE));	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
400	[BUG]  [BUGGY]  this(compiler,  null,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
401	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
402	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  this.compiler)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  this.compiler)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  this.compiler)  {  this.invalidationMap  =  Collections.emptyList();	  Collections.    <    T>emptyList(),    compiler)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
403	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
404	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
405	[BUG]  [BUGGY]  this(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
406	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
407	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  invalidatingTypes);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
408	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  0);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  0);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor,  0);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
409	[BUG]  [BUGGY]  this(compiler,  null,  Maps.newHashMap());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.newHashMap());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.newHashMap());	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
410	[BUG]  [BUGGY]  this(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor)  {	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
411	[BUG]  [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
412	[BUG]  [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
413	[BUG]  [BUGGY]  Predicates.checkArgument(compiler  >=  null);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler  >=  null);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkArgument(compiler  >=  null);	  Predicates.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
414	[BUG]  [BUGGY]  Predicates.checkArgument(compiler!=  null  &&  compiler.isInterface());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler!=  null  &&  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkArgument(compiler!=  null  &&  compiler.isInterface());	  Predicates.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
415	[BUG]  [BUGGY]  this.registry  =  compiler.createRegistry(compiler);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.createRegistry(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.createRegistry(compiler);	  this.registry    =    compiler.createRegistry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
416	[BUG]  [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_SET)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
417	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  registry);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkNotNull(compiler,  registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkNotNull(compiler,  registry);	  Predicates.checkNotNull(compiler,    codingConvention);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
418	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  INVALIDATION);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkNotNull(compiler,  INVALIDATION);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkNotNull(compiler,  INVALIDATION);	  Predicates.checkNotNull(compiler,    codingConvention);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
419	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
420	[BUG]  [BUGGY]  this(compiler,  true,  Map.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
421	[BUG]  [BUGGY]  this(compiler,  false,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
422	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  T>,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  T>,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  T>,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
423	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  String,  CheckLevel>,  propertiesToErrorFor)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
424	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
425	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  typesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  typesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Maps.  <  String,  CheckLevel>  typesToErrorFor,  typeSystem);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
426	[BUG]  [BUGGY]  super(compiler,  propertiesToErrorFor,  Maps.newHashMap())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  propertiesToErrorFor,  Maps.newHashMap())  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  propertiesToErrorFor,  Maps.newHashMap())  {	  super(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>)    {    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
427	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
428	[BUG]  [BUGGY]  logger  =  Logger.getLogger(registry);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger  =  Logger.getLogger(registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger  =  Logger.getLogger(registry);	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
429	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  1,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  1,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.invalidatingTypes,  1,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.invalidatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
430	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  rootTypes,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  rootTypes,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  rootTypes,  0,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.invalidatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
431	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  this.validatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
432	[BUG]  [BUGGY]  this.invalidationMap  =  invalidationMap.emptyList();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  invalidationMap.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  invalidationMap.emptyList();	  this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
433	[BUG]  [BUGGY]  Arrays.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
434	[BUG]  [BUGGY]  Collections.newHashMap())  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newHashMap())  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashMap())  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.newHashSet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
435	[BUG]  [BUGGY]  this.typeSystem  =  System.getProperty( "line.separator ");  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  System.getProperty( "line.separator ");  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  System.getProperty( "line.separator ");	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
436	[BUG]  [BUGGY]  this.typeSystem  =  System.getProperty( "user.name ");  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  System.getProperty( "user.name ");  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  System.getProperty( "user.name ");	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
437	[BUG]  [BUGGY]  this.typeSystem  =  typesToErrorFor;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  typesToErrorFor;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  typesToErrorFor;	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
438	[BUG]  [BUGGY]  this(compiler,  null,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
439	[BUG]  [BUGGY]  this(compiler,  null,  Map.newHashMap());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.newHashMap());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.newHashMap());	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
440	[BUG]  [BUGGY]  this(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.newHashMap(),  propertiesToErrorFor);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
441	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
442	[BUG]  [BUGGY]  Collections.  <  T>  propertiesToErrorFor,  Map  <  String,  CheckLevel>  tt)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>  propertiesToErrorFor,  Map  <  String,  CheckLevel>  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>  propertiesToErrorFor,  Map  <  String,  CheckLevel>  tt)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    tt)    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
443	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  T>emptyMap());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  T>emptyMap());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  T>emptyMap());	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
444	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  typesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  typesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  typesToErrorFor)  {	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
445	[BUG]  [BUGGY]  Arrays.  <  T>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
446	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Maps.newHashMap());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Maps.newHashMap());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Maps.newHashMap());	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
447	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Maps.newHashMap(),  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Maps.newHashMap(),  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Maps.newHashMap(),  propertiesToErrorFor)  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
448	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Maps.  <  T>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Maps.  <  T>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Maps.  <  T>  propertiesToErrorFor)  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
449	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  &&  invalidatingTypes.size()  >  MAX_INVALDIATION_WARNINGS_PER_PROPERTY)  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
450	[BUG]  [BUGGY]  Context.checkState(compiler!=  null  &&  compiler.isConstructor());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler!=  null  &&  compiler.isConstructor());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Context.checkState(compiler!=  null  &&  compiler.isConstructor());	  Context.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
451	[BUG]  [BUGGY]  Context.checkState(compiler!=  null  &&  compiler.isInterface());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Context.checkState(compiler!=  null  &&  compiler.isInterface());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Context.checkState(compiler!=  null  &&  compiler.isInterface());	  Context.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
452	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  1,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  1,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.validatingTypes,  1,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.validatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
453	[BUG]  [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	LinkedHashMultimap.create())  {  this.invalidationMap  =  Lists.newArrayList();	  LinkedHashMultimap.create())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
454	[BUG]  [BUGGY]  Collections.  <  Class  <?>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Class  <?>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Class  <?>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
455	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(),  null;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(),  null;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(),  null;	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
456	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(),  INVALIDATION;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(),  INVALIDATION;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(),  INVALIDATION;	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
457	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(),  invalidatingTypes;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(),  invalidatingTypes;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(),  invalidatingTypes;	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
458	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.newLinkedHashSet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Sets.newLinkedHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Sets.newLinkedHashSet();	  this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
459	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  propertiesToErrorFor);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
460	[BUG]  [BUGGY]  this(compiler,  codingConvention,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  codingConvention,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  codingConvention,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
461	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  null,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  null,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  null,  propertiesToErrorFor);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
462	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
463	[BUG]  [BUGGY]  This.registry  =  compiler.getRegistry(this);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  This.registry  =  compiler.getRegistry(this);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	This.registry  =  compiler.getRegistry(this);	  This.registry    =    compiler.getRegistry();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
464	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    compiler)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
465	[BUG]  [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyMap(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyMap(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    Lists.    <    String>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    }    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
466	[BUG]  [BUGGY]  (AbstractCompiler)compiler.build();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.build();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.build();	  (AbstractCompiler)compiler.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
467	[BUG]  [BUGGY]  (AbstractCompiler)compiler.initialise();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.initialise();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.initialise();	  (AbstractCompiler)compiler.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
468	[BUG]  [BUGGY]  (AbstractCompiler)compiler,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler,  invalidatingTypes);	  (AbstractCompiler)compiler);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
469	[BUG]  [BUGGY]  (AbstractCompiler)compiler,  invalidationMap);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler,  invalidationMap);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler,  invalidationMap);	  (AbstractCompiler)compiler);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
470	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    invalidationMap)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
471	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
472	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  new  ArrayList();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  new  ArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  new  ArrayList();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
473	[BUG]  [BUGGY]  super(compiler,  codingConvention,  INVALIDATION_ON_TYPE);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  codingConvention,  INVALIDATION_ON_TYPE);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  codingConvention,  INVALIDATION_ON_TYPE);	  super(compiler,    codingConvention);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
474	[BUG]  [BUGGY]  super(compiler,  INVALIDATION);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  INVALIDATION);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  INVALIDATION);	  super(compiler,    codingConvention);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
475	[BUG]  [BUGGY]  super(compiler,  codingConvention,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  codingConvention,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  codingConvention,  invalidatingTypes);	  super(compiler,    codingConvention);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
476	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
477	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
478	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
479	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorFor)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorFor)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToErrorFor)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
480	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
481	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.validatingTypesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.validatingTypesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.validatingTypesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
482	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.invalidatingTypesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.invalidatingTypesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.invalidatingTypesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
483	[BUG]  [BUGGY]  Collections.  <  Object>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    Object>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
484	[BUG]  [BUGGY]  Arrays.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    Object>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
485	[BUG]  [BUGGY]  Collections.newHashMap())  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.newHashMap())  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashMap())  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.newHashSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
486	[BUG]  [BUGGY]  this(compiler,  false,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
487	[BUG]  [BUGGY]  this(compiler,  true,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
488	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP,  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP,  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP,  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
489	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP  =  Collections.emptySet();	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
490	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.newHashMap();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Collections.newHashMap();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.newHashMap();	  this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
491	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
492	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map.Entry  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map.Entry  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map.Entry  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
493	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
494	[BUG]  [BUGGY]  this(compiler,  true,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
495	[BUG]  [BUGGY]  this(compiler,  compiler,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
496	[BUG]  [BUGGY]  (AbstractCompiler)compiler.cloneTree(this);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.cloneTree(this);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.cloneTree(this);	  (AbstractCompiler)compiler.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
497	[BUG]  [BUGGY]  this(compiler,  null,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
498	[BUG]  [BUGGY]  this(compiler,  codingConvention,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  codingConvention,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  codingConvention,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
499	[BUG]  [BUGGY]  super(compiler,  null,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  invalidatingTypes);	  super(compiler,    null);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
500	[BUG]  [BUGGY]  Arrays.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
501	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
502	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map.Entry  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map.Entry  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map.Entry  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
503	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  this.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
504	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	130	None	replace
505	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	130	None	replace
506	[BUG]  [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
507	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
508	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
509	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
510	[BUG]  [BUGGY]  this.registry  =  registry.getRegistry(compiler);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  registry.getRegistry(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  registry.getRegistry(compiler);	  this.registry    =    registry.getRegistry();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
511	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	126	None	replace
512	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	126	None	replace
513	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP,  invalidationMap)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP,  invalidationMap)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP,  invalidationMap)  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
514	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Collections.EMPTY_LIST;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Collections.EMPTY_LIST;	  this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
515	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  >  0)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  >  0)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  >  0)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet()    ||    invalidatingTypes.size()    ==    0)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
516	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  T>emptyMap(),  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Maps.  <  T>emptyMap(),  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  T>emptyMap(),  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
517	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  invalidatingTypes);	  System.arraycopy(compiler,    0,    this.typeSystem,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor,  invalidatingTypes);	  System.arraycopy(compiler,    0,    this.typeSystem,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
519	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(this,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(this,  invalidatingTypes);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(this,  invalidatingTypes);	  this.registry    =    compiler.getRegistry(this);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
520	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    String,    CheckLevel>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
521	[BUG]  [BUGGY]  Arrays.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    String,    CheckLevel>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
522	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getParameterTypes();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getParameterTypes();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getParameterTypes();	  AbstractCompiler    compiler    =    compiler.next();    	non-compiled	[CE]  	90	None	replace
523	[BUG]  [BUGGY]  super(compiler,  invalidatingTypes,  typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  invalidatingTypes,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  invalidatingTypes,  typeSystem);	  super(compiler,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
524	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  this.compiler.getCompiler(compiler);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  this.compiler.getCompiler(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  this.compiler.getCompiler(compiler);	  AbstractCompiler    compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  	63	None	replace
525	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  this.compiler.getCompiler();  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  this.compiler.getCompiler();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  this.compiler.getCompiler();	  AbstractCompiler    compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  	63	None	replace
526	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidatingTypes);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newArrayList(invalidatingTypes);	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
527	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidationMap);  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Lists.newArrayList(invalidationMap);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newArrayList(invalidationMap);	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
528	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorFor)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorFor)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToErrorFor)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
529	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
530	[BUG]  [BUGGY]  this(compiler,  false,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
531	[BUG]  [BUGGY]  Arrays.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    Lists.    <    Class    <?>    emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
532	[BUG]  [BUGGY]  super(compiler,  null,  Maps.newHashMap());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Maps.newHashMap());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Maps.newHashMap());	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
533	[BUG]  [BUGGY]  super(compiler,  null,  Maps.  <  T>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Maps.  <  T>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Maps.  <  T>  propertiesToErrorFor)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
534	[BUG]  [BUGGY]  super(compiler,  null,  Maps.newHashMap())  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Maps.newHashMap())  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Maps.newHashMap())  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
535	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  NodeTraversal.traverse(compiler,  this,  invalidatingTypes);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  this,  invalidatingTypes);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
536	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  invalidationMap);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  NodeTraversal.traverse(compiler,  this,  invalidationMap);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  this,  invalidationMap);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
537	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
538	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  compiler)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  compiler)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  compiler)  {  this.invalidationMap  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
539	[BUG]  [BUGGY]  this(compiler,  propertiesToErrorFor,  Maps.newHashMap());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  propertiesToErrorFor,  Maps.newHashMap());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  propertiesToErrorFor,  Maps.newHashMap());	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
540	[BUG]  [BUGGY]  this(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>  entry));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>  entry));  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>  entry));	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
541	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>);	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
542	[BUG]  [BUGGY]  this(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>)  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>)  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  propertiesToErrorFor,  Map.Entry  <  String,  CheckLevel>)	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
543	[BUG]  [BUGGY]  super(compiler,  registry.getNativeType(UNKNOWN_TYPE));  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  registry.getNativeType(UNKNOWN_TYPE));  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry.getNativeType(UNKNOWN_TYPE));	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
544	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isAbstract());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isAbstract());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler!=  null  &&  compiler.isAbstract());	  Preconditions.checkArgument(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	129	None	replace
545	[BUG]  [BUGGY]  Arrays.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
546	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
547	[BUG]  [BUGGY]  super(compiler,  typeSystem,  null,  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  null,  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  null,  propertiesToErrorFor,  boolean  skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
548	[BUG]  [BUGGY]  super(compiler,  typeSystem,  null,  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  null,  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  null,  propertiesToErrorFor,  false)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
549	[BUG]  [BUGGY]  this(compiler,  codingConvention,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  codingConvention,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  codingConvention,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
550	[BUG]  [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
551	[BUG]  [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
552	[BUG]  [BUGGY]  System.arraycopy(this.typeSystem,  0,  propertiesToErrorFor,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(this.typeSystem,  0,  propertiesToErrorFor,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(this.typeSystem,  0,  propertiesToErrorFor,  0,  propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
553	[BUG]  [BUGGY]  Arrays.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
554	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  typesToErrorMap)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
555	[BUG]  [BUGGY]  Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
556	[BUG]  [BUGGY]  Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Lists.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
557	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.validatingTypes  =  Collections.EMPTY_LIST;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.validatingTypes  =  Collections.EMPTY_LIST;	  this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
558	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashMap();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashMap();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashMap();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
559	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashArray();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashArray();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashArray();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
560	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isDeclaration());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isDeclaration());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler!=  null  &&  compiler.isDeclaration());	  Preconditions.checkState(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
561	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler,  codingConvention);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkNotNull(compiler,  codingConvention);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkNotNull(compiler,  codingConvention);	  Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
562	[BUG]  [BUGGY]  Collections.EMPTY_LIST_SET())  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_SET())  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_SET())  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	106	None	replace
563	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
564	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
565	[BUG]  [BUGGY]  this(compiler,  compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
566	[BUG]  [BUGGY]  System.arraycopy(this.typeSystem,  0,  compiler,  0,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(this.typeSystem,  0,  compiler,  0,  this.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(this.typeSystem,  0,  compiler,  0,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.typeSystem);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
567	[BUG]  [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.EMPTY_SET)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
568	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  compiler.typesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  compiler.typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  compiler.typesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
569	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  this.typeSystem);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  this.typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  invalidatingTypesToErrorFor,  0,  this.typeSystem);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
570	[BUG]  [BUGGY]  System.arraycopy(validatingTypesToErrorFor,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(validatingTypesToErrorFor,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(validatingTypesToErrorFor,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
571	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  null,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  null,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  null,  propertiesToErrorFor)  {	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
572	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor  -  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor  -  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor  -  1);	  System.arraycopy(propertiesToErrorFor,    0,    this.propertiesToErrorFor,    0,    compiler.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
573	[BUG]  [BUGGY]  System.arraycopy(compilers,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compilers,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compilers,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.propertiesToErrorFor,    0,    compiler.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
574	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  0);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  0);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  0);	  System.arraycopy(propertiesToErrorFor,    0,    this.propertiesToErrorFor,    0,    compiler.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
575	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashMap();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashMap();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashMap();	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
576	[BUG]  [BUGGY]  Constructor  <  T>  compiler,  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Constructor  <  T>  compiler,  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Constructor  <  T>  compiler,  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  cannot  find  symbol	133	None	replace
577	[BUG]  [BUGGY]  this.compiler,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  invalidatingTypes);	  this.compiler,    compiler);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
578	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(invalidatingTypes);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList(invalidatingTypes);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Lists.newArrayList(invalidatingTypes);	  this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
579	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
580	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Map.  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
581	[BUG]  [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
582	[BUG]  [BUGGY]  Collections.  <  Object>emptyMap())  {  this.invalidationMap  =  Collections.emptyMap();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  Object>emptyMap())  {  this.invalidationMap  =  Collections.emptyMap();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptyMap())  {  this.invalidationMap  =  Collections.emptyMap();  }	  Collections.    <    Object>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
583	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes.  <  String,  CheckLevel>,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes.  <  String,  CheckLevel>,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes.  <  String,  CheckLevel>,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
584	[BUG]  [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
585	[BUG]  [BUGGY]  Predicates.checkArgument(compiler!=  null  &&  compiler.isConstructor());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkArgument(compiler!=  null  &&  compiler.isConstructor());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkArgument(compiler!=  null  &&  compiler.isConstructor());	  Predicates.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
586	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(registry);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(registry);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(registry);	  this.registry    =    compiler.getRegistry(null);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
587	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  Arrays.asList(this.propertiesToErrorFor))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  Arrays.asList(this.propertiesToErrorFor))  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  Arrays.asList(this.propertiesToErrorFor))  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
588	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
589	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  Arrays.asList(propertiesToErrorFor))  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  Arrays.asList(propertiesToErrorFor))  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  Arrays.asList(propertiesToErrorFor))  {	  super(compiler,    this.typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
590	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isConstructor());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isConstructor());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler!=  null  &&  compiler.isConstructor());	  Preconditions.checkArgument(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	129	None	replace
591	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isDeclaredProperties());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isDeclaredProperties());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler!=  null  &&  compiler.isDeclaredProperties());	  Preconditions.checkArgument(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	129	None	replace
592	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.emptySet();  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Sets.emptySet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
593	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(compiler);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayListWithCapacity(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Lists.newArrayListWithCapacity(compiler);	  this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	131	None	replace
594	[BUG]  [BUGGY]  Collection  <  T>  propertiesToErrorFor,  Map  <  String,  CheckLevel>  invalidatingTypes)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collection  <  T>  propertiesToErrorFor,  Map  <  String,  CheckLevel>  invalidatingTypes)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collection  <  T>  propertiesToErrorFor,  Map  <  String,  CheckLevel>  invalidatingTypes)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    invalidatingTypes)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	93	None	replace
595	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Collections.emptyList();	  this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
596	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  typesToErrorFor);	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
597	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typeSystem);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  typeSystem);	  this(compiler,    false,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
598	[BUG]  [BUGGY]  Arrays.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Arrays.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	116	None	replace
599	[BUG]  [BUGGY]  super(compiler,  propertiesToErrorFor,  Map  <  Class  <?>,  CheckLevel>)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  propertiesToErrorFor,  Map  <  Class  <?>,  CheckLevel>)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  propertiesToErrorFor,  Map  <  Class  <?>,  CheckLevel>)  {	  super(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>)    {    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
600	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.EMPTY_SET)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
601	[BUG]  [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor,  boolean  skipRenaming)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor,  boolean  skipRenaming)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	133	None	replace
602	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
603	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();  }	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
604	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  new  HashMap  <  String,  CheckLevel>())  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  new  HashMap  <  String,  CheckLevel>())  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  new  HashMap  <  String,  CheckLevel>())  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    compiler)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
605	[BUG]  [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
606	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
607	[BUG]  [BUGGY]  Collections.unmodifiableSet(this.invalidatingTypes))  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.unmodifiableSet(this.invalidatingTypes))  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.unmodifiableSet(this.invalidatingTypes))  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
608	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Sets.newHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
609	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  typeSystem,  propertiesToErrorFor)  {	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
610	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  this.skipRenaming)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  this.skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  this.skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    boolean    skipRenaming)    {    	non-compiled	[CE]  illegal  start  of  type	125	None	replace
611	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Arrays.asList(invalidatingTypes))  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Arrays.asList(invalidatingTypes))  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Arrays.asList(invalidatingTypes))  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
612	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
613	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  rootTypes);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  rootTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  rootTypes);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    null);    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
614	[BUG]  [BUGGY]  this(compiler,  compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
615	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  propertiesToErrorFor,  null);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
616	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  propertiesToErrorFor,  false);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
617	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  PropertiesToErrorFor,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  PropertiesToErrorFor,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  PropertiesToErrorFor,  propertiesToErrorFor)  {	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
618	[BUG]  [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  0,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  0,  this.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  0,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    this.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
619	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.validatingTypes,  0,  invalidatingTypes);	  System.arraycopy(compiler,    0,    this.validatingTypes,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
620	[BUG]  [BUGGY]  (AbstractCompiler)compiler.resolve();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.resolve();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.resolve();	  (AbstractCompiler)compiler.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
621	[BUG]  [BUGGY]  (AbstractCompiler)compiler.invoke(this,  registry);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler.invoke(this,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.invoke(this,  registry);	  (AbstractCompiler)compiler.clone();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
622	[BUG]  [BUGGY]  logger  =  Logger.getLogger(compiler,  this.typeSystem);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  logger  =  Logger.getLogger(compiler,  this.typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger  =  Logger.getLogger(compiler,  this.typeSystem);	  logger    =    Logger.getLogger(compiler);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
623	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
624	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
625	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	130	None	replace
626	[BUG]  [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
627	[BUG]  [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
628	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
629	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.reportCodeChange();  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.reportCodeChange();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.reportCodeChange();	  AbstractCompiler    compiler    =    compiler.next();    	non-compiled	[CE]  	90	None	replace
630	[BUG]  [BUGGY]  this.compiler,  compiler,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  compiler,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  compiler,  null);	  this.compiler,    compiler);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
631	[BUG]  [BUGGY]  this.compiler,  compiler,  tt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.compiler,  compiler,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  compiler,  tt);	  this.compiler,    compiler);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
632	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>,  typeSystem,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>,  typeSystem,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  String,  CheckLevel>,  typeSystem,  propertiesToErrorFor)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
633	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  typesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  typesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  String,  CheckLevel>  typesToErrorFor)  {	  this(compiler,    null,    Map.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
634	[BUG]  [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor  -  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor  -  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor  -  1);	  System.arraycopy(propertiesToErrorFor,    0,    this.propertiesToErrorFor,    0,    compiler.propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
635	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidatingTypes)  {  this.invalidatingTypes  =  Lists.newArrayList();	  Collections.EMPTY_LIST_ARRAYSet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
636	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(),  registration;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.getRegistry(),  registration;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(),  registration;	  this.registry    =    compiler.getRegistry(),    registry;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
637	[BUG]  [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  1,  compiler);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  1,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  1,  compiler);	  System.arraycopy(compiler,    0,    this.typeSystem,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
638	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  instanceof  AbstractCompiler);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler  instanceof  AbstractCompiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler  instanceof  AbstractCompiler);	  Preconditions.checkState(compiler    instanceof    AbstractCompiler);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
639	[BUG]  [BUGGY]  this.registry  =  compiler.createRegistry(System.identityHashCode(this));  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler.createRegistry(System.identityHashCode(this));  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.createRegistry(System.identityHashCode(this));	  this.registry    =    compiler.createRegistry();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
640	[BUG]  [BUGGY]  this(compiler,  compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
641	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
642	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.validatingTypes  =  Collections.emptyList();	  this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
643	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  renameNodes)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
644	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Arrays.asList(invalidatingTypes))  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Arrays.asList(invalidatingTypes))  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Arrays.asList(invalidatingTypes))  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
645	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  this.validatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  this.validatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  this.validatingTypes)  {  this.validatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
646	[BUG]  [BUGGY]  this(compiler,  registry,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
647	[BUG]  [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  name);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
648	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  typesToErrorFor);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
649	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();	  Collections.    <    String,    CheckLevel>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
650	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.newHashSetWithCapacity(compiler);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidatingTypes  =  Sets.newHashSetWithCapacity(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Sets.newHashSetWithCapacity(compiler);	  this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
651	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
652	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
653	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Sets.newHashSet();	  Collections.    <    T>emptySet())    {    this.validatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
654	[BUG]  [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.EMPTY_LIST;  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.EMPTY_LIST;	  LinkedHashMultimap.create())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
655	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  invalidatingTypes);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  invalidatingTypes);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS,  invalidatingTypes);	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
656	[BUG]  [BUGGY]  This.registry  =  compiler.createRegistry();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  This.registry  =  compiler.createRegistry();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	This.registry  =  compiler.createRegistry();	  This.registry    =    compiler.getRegistry();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
657	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  typesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    typesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
658	[BUG]  [BUGGY]  this.typeSystem  =  System.identityHashCode(compiler);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.typeSystem  =  System.identityHashCode(compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  System.identityHashCode(compiler);	  this.typeSystem    =    compiler;    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
659	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>  typesToErrorFor)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
660	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  Class  <?>,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
661	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  typeSystem)  {  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  typeSystem)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>  typeSystem)  {	  super(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
662	[BUG]  [BUGGY]  this(compiler,  compiler,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    false);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
663	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Sets.newHashSet();	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
664	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newLinkedHashSet();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newLinkedHashSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newLinkedHashSet();  }	  Collections.emptySet())    {    this.invalidatingTypes    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
665	[BUG]  [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
666	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  typesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  typesToErrorFor);	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
667	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);	  this(compiler,    true,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
668	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompilerFor(this);  [CE]  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompilerFor(this);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompilerFor(this);	  AbstractCompiler    compiler    =    compiler.getCompiler(this);    	non-compiled	[CE]  	63	None	replace
669	[BUG]  [BUGGY]  this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  invalidatingTypes,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  typeSystem);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
670	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
671	[BUG]  [BUGGY]  System.arraycopy(invalidatingTypesToErrorFor,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(invalidatingTypesToErrorFor,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(invalidatingTypesToErrorFor,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
672	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  invalidatingTypesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  invalidatingTypesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  invalidatingTypesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    invalidatingTypesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
673	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  tt);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  tt);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
674	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME  ||  compiler.getType()  ==  Token.VAR);	  Preconditions.checkArgument(compiler.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
675	[BUG]  [BUGGY]  this.registry,  compiler);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry,  compiler);	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
676	[BUG]  [BUGGY]  this.registry  =  compiler;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.registry  =  compiler;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler;	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
677	[BUG]  [BUGGY]  super(registry);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(registry);	  super(compiler,    registry);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
678	[BUG]  [BUGGY]  (AbstractCompiler)compiler,  compiler);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  (AbstractCompiler)compiler,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler,  compiler);	  (AbstractCompiler)compiler);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
679	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
680	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  this.invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  this.invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  this.invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
681	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  renameNodes)  {  this.invalidatingTypes  =  Collections.emptySet();	  Collections.    <    T>emptySet(),    invalidatingTypes)    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
682	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToSkip)  {  [CE]  variable  propertiesToErrorFor  might  not  have  been  initialized  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToSkip)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToSkip)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    typesToErrorFor)    {    	non-compiled	[CE]  variable  propertiesToErrorFor  might  not  have  been  initialized	94	None	replace
683	[BUG]  [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  name,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
684	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name,  null);	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    name)    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
685	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  PropertiesToErrorFor,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  PropertiesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  PropertiesToErrorFor,  propertiesToErrorFor);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
686	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);	  this(compiler,    compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
687	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.unmodifiableSet();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.unmodifiableSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.unmodifiableSet();  }	  Collections.EMPTY_LIST_MAP)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	100	None	replace
688	[BUG]  [BUGGY]  this(compiler,  registry,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
689	[BUG]  [BUGGY]  this(compiler,  registry,  typesToErrorFor,  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  typesToErrorFor,  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  typesToErrorFor,  propertiesToErrorFor)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
690	[BUG]  [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  null);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
691	[BUG]  [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
692	[BUG]  [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    registry,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
693	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(compiler);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Lists.newArrayListWithCapacity(compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newArrayListWithCapacity(compiler);	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
694	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this.invalidationMap  =  Lists.newLinkedList();  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newLinkedList();	  this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
695	[BUG]  [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String>emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    }    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
696	[BUG]  [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
697	[BUG]  [BUGGY]  System.arraycopy(typesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(typesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(typesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);	  System.arraycopy(propertiesToErrorFor,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
698	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
699	[BUG]  [BUGGY]  super(compiler,  compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  super(compiler,  compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor,    registry)    {    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
700	[BUG]  [BUGGY]  this(compiler,  compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
701	[BUG]  [BUGGY]  this(compiler,  null,  Map.class,  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  null,  Map.class,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.class,  propertiesToErrorFor);	  this(compiler,    null,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
702	[BUG]  [BUGGY]  JSTypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [CE]  type  JSTypeSystem  does  not  take  parameters  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  JSTypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	JSTypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    tt)    {    	non-compiled	[CE]  type  JSTypeSystem  does  not  take  parameters	71	None	replace
703	[BUG]  [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    tt)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	71	None	replace
704	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  null);	  this(compiler,    typeSystem,    Maps.    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
705	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  Class  <?>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  Class  <?>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  Class  <?>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.    <    T>emptySet(),    Lists.    <    String>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
706	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  String,  CheckLevel>  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>  invalidationMap)  {  this.invalidationMap  =  Collections.emptySet();  }	  Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
707	[BUG]  [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  1,  compiler);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  1,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  1,  compiler);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
708	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  typesToErrorFor);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  typesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    1,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
709	[BUG]  [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {	  Class    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	132	None	replace
710	[BUG]  [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  this.typeSystem);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  this.typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(typeSystem,  0,  this.propertiesToErrorFor,  0,  this.typeSystem);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    this.typeSystem);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
711	[BUG]  [BUGGY]  this(compiler,  compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
712	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>);	  this(compiler,    propertiesToErrorFor,    Map    <    String,    CheckLevel>);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
713	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  this.invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  this.invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  this.invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    invalidationMap)    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
714	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  }	  Collections.    <    T>emptyList(),    Lists.    <    Class    <?>    emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	124	None	replace
715	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  types);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  NodeTraversal.traverse(compiler,  this,  types);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  this,  types);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
716	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS,  null)  {  this.invalidationMap  =  Lists.newArrayList();  }	  Collections.EMPTY_LIST_ARRAYS)    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
717	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null,  compiler);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Predicates.checkState(compiler!=  null,  compiler);  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkState(compiler!=  null,  compiler);	  Predicates.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
718	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.unmodifiableSet();  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.unmodifiableSet();  }  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.unmodifiableSet();  }	  Collections.EMPTY_LIST_ARRAY)    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
719	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isDeclaredProperties());  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,      [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isDeclaredProperties());  [BUGGY]      TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler!=  null  &&  compiler.isDeclaredProperties());	  Preconditions.checkState(compiler!=    null    &&    compiler.isInterface());    	non-compiled	[CE]  <identifier>  expected	135	None	replace
