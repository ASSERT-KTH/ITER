bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  (AbstractCompiler)compiler);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  (AbstractCompiler)compiler);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler);	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  (AbstractCompiler)compiler.clone();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  (AbstractCompiler)compiler.clone();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.clone();	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  super(compiler,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null);	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  super(compiler,  registry);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  registry);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  registry);	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  (AbstractCompiler)compiler.cloneTree();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  (AbstractCompiler)compiler.cloneTree();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	(AbstractCompiler)compiler.cloneTree();	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
6	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.invalidationMap  =  Collections.emptyList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.emptyList();	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  Collections.  <  T>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  compiler)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptyList(),  compiler)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  compiler)  {  this.invalidationMap  =  Collections.emptyList();	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  Predicates.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Predicates.checkState(compiler!=  null);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkState(compiler!=  null);	      Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  Predicates.checkState(compiler  ==  null);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Predicates.checkState(compiler  ==  null);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkState(compiler  ==  null);	      Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  Predicates.checkArgument(compiler!=  null);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Predicates.checkArgument(compiler!=  null);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkArgument(compiler!=  null);	      Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  Predicates.checkNotNull(compiler,  codingConvention);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Predicates.checkNotNull(compiler,  codingConvention);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Predicates.checkNotNull(compiler,  codingConvention);	      Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
16	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
17	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
18	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.typeSystem);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.typeSystem);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  0,  this.typeSystem);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.propertiesToErrorFor,  1,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Lists.newArrayList();  }	      Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
23	[BUG]  [BUGGY]  Collections.newHashSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.newHashSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashSet())  {  this.invalidatingTypes  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
24	[BUG]  [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
25	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS)  {  this.invalidatingTypes  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
26	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  name)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  this.registry  =  registry.getRegistry();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.registry  =  registry.getRegistry();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  registry.getRegistry();	      this.registry    =    compiler.getRegistry();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
31	[BUG]  [BUGGY]  this.registry  =  compiler.createRegistry();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.registry  =  compiler.createRegistry();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.createRegistry();	      this.registry    =    compiler.getRegistry();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
32	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(),  registry;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.registry  =  compiler.getRegistry(),  registry;  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(),  registry;	      this.registry    =    compiler.getRegistry();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
33	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.validatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.validatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.validatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.validatingTypes  =  Collections.emptySet();  }	      Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
36	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  registry)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  registry)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  registry)  {  this.validatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToErrorFor);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  typesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  tt);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  tt);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  propertiesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  1,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	      Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();	      Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
45	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	      Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  String,  CheckLevel>emptySet())  {  this.invalidationMap  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  Object>emptySet())  {  this.invalidationMap  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidationMap  =  Lists.newArrayList();  }	      Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
49	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
50	[BUG]  [BUGGY]  Collections.newHashSet())  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.newHashSet())  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.newHashSet())  {  this.invalidationMap  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
51	[BUG]  [BUGGY]  this.invalidationMap  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidationMap  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  null);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Preconditions.checkState(compiler  >=  null);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  >=  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  Context.checkState(compiler!=  null);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Context.checkState(compiler!=  null);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Context.checkState(compiler!=  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Preconditions.checkState(compiler  instanceof  AbstractCompiler);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler  instanceof  AbstractCompiler);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Preconditions.checkArgument(compiler.getType()  ==  Token.NAME);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler.getType()  ==  Token.NAME);	      Preconditions.checkArgument(compiler    ==    null);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
56	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  }	      Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
57	[BUG]  [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_SET)  {  this.invalidatingTypes  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
59	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  compiler)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  compiler)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  compiler)  {  this.invalidationMap  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
60	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getParent();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  AbstractCompiler  compiler  =  compiler.getParent();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getParent();	      AbstractCompiler    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  	15	None	replace
61	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(null);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(null);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompiler(null);	      AbstractCompiler    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  	15	None	replace
62	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(compiler);  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(compiler);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompiler(compiler);	      AbstractCompiler    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  	15	None	replace
63	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  AbstractCompiler  compiler  =  compiler.getCompiler(this);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getCompiler(this);	      AbstractCompiler    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  	15	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Preconditions.checkNotNull(compiler);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkNotNull(compiler);	      Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
66	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  false)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  registry,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
68	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  registry)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
69	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  true)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
70	[BUG]  [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [CE]  variable  propertiesToErrorFor  might  not  have  been  initialized  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  tt)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  variable  propertiesToErrorFor  might  not  have  been  initialized	10	None	replace
72	[BUG]  [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
73	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  null,  Map.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  Arrays.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Arrays.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Arrays.  <  T>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(null);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.registry  =  compiler.getRegistry(null);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(null);	      this.registry    =    compiler.getRegistry();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
79	[BUG]  [BUGGY]  This.registry  =  compiler.getRegistry();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  This.registry  =  compiler.getRegistry();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	This.registry  =  compiler.getRegistry();	      this.registry    =    compiler.getRegistry();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
80	[BUG]  [BUGGY]  super(compiler,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  invalidatingTypes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  invalidatingTypes);	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
81	[BUG]  [BUGGY]  super(compiler,  codingConvention);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  codingConvention);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  codingConvention);	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
82	[BUG]  [BUGGY]  logger  =  Logger.getLogger(compiler);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  logger  =  Logger.getLogger(compiler);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger  =  Logger.getLogger(compiler);	  super(compiler);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
83	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptySet();  }	      Collections.    <    T>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
84	[BUG]  [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet())  {  this.validatingTypes  =  Sets.newHashSet();	      Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
85	[BUG]  [BUGGY]  this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor,  invalidatingTypes);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
88	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
89	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.getDefaultCompiler();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  AbstractCompiler  compiler  =  compiler.getDefaultCompiler();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.getDefaultCompiler();	      AbstractCompiler    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  	15	None	replace
90	[BUG]  [BUGGY]  AbstractCompiler  compiler  =  compiler.next();  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  AbstractCompiler  compiler  =  compiler.next();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	AbstractCompiler  compiler  =  compiler.next();	      AbstractCompiler    compiler    =    compiler.getCompiler();    	non-compiled	[CE]  	15	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  invalidatingTypesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
92	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_ARRAYS)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYS)  {  this.invalidationMap  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
93	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes)  {  [CE]  variable  propertiesToErrorFor  might  not  have  been  initialized  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  invalidatingTypes)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  variable  propertiesToErrorFor  might  not  have  been  initialized	10	None	replace
94	[BUG]  [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [CE]  variable  propertiesToErrorFor  might  not  have  been  initialized  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	TypeSystem  <  T>  typeSystem,  Map  <  String,  CheckLevel>  typesToErrorFor)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  variable  propertiesToErrorFor  might  not  have  been  initialized	10	None	replace
95	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();	      Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.invalidatingTypes  =  Sets.newHashSet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Sets.newHashSet();	      Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.invalidatingTypes,  0,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.validatingTypes,  0,  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.validatingTypes,  0,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
99	[BUG]  [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	LinkedHashMultimap.create())  {  this.invalidationMap  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
100	[BUG]  [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_MAP)  {  this.invalidationMap  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
101	[BUG]  [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  this.typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
102	[BUG]  [BUGGY]  super(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  propertiesToErrorFor,  Map  <  String,  CheckLevel>)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
103	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Maps.  <  String,  CheckLevel>  propertiesToErrorFor)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
104	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  invalidatingTypes)  {  this.invalidationMap  =  Collections.emptyList();	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
105	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  invalidationMap)  {  this.invalidationMap  =  Collections.emptyList();	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
106	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAYSet())  {  this.invalidatingTypes  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
107	[BUG]  [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  false,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
108	[BUG]  [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  null);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
109	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
110	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
111	[BUG]  [BUGGY]  this.registry  =  compiler.getRegistry(this);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.registry  =  compiler.getRegistry(this);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.registry  =  compiler.getRegistry(this);	      this.registry    =    compiler.getRegistry();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
112	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  NodeTraversal.traverse(compiler,  this);  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	NodeTraversal.traverse(compiler,  this);	      Predicates.checkNotNull(compiler);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  this.compiler,  compiler);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.compiler,  compiler);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.compiler,  compiler);	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
114	[BUG]  [BUGGY]  logger.fine( "Invalidating  type  system: "  +  compiler);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  logger.fine( "Invalidating  type  system: "  +  compiler);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	logger.fine( "Invalidating  type  system: "  +  compiler);	  super(compiler);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
115	[BUG]  [BUGGY]  this.typeSystem  =  compiler;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.typeSystem  =  compiler;  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.typeSystem  =  compiler;	  super(compiler);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
116	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
117	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidationMap  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidationMap    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
118	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  }	      Collections.    <    T>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
119	[BUG]  [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet(),  Lists.  <  String>emptySet())  {  this.invalidationMap  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.invalidationMap    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
120	[BUG]  [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  true,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
121	[BUG]  [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this(compiler,  compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor);	  this(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
122	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  }	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
123	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  Lists.  <  String>emptyList())  {  this.invalidationMap  =  Collections.emptyList();	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
124	[BUG]  [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptyList(),  Lists.  <  Class  <?>  emptyList())  {  this.invalidationMap  =  Collections.emptyList();	      Collections.    <    T>emptyList())    {    this.invalidationMap    =    Collections.emptyList();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
125	[BUG]  [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	super(compiler,  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor,  boolean  skipRenaming)  {	  super(compiler,    typeSystem,    Map    <    String,    CheckLevel>    propertiesToErrorFor)    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
126	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.emptySet();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Collections.emptySet();	      Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
127	[BUG]  [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.emptySet())  {  this.invalidatingTypes  =  Sets.newHashSet();  }	      Collections.emptySet())    {    this.invalidatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(propertiesToErrorFor,  0,  this.propertiesToErrorFor,  0,  compiler.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.propertiesToErrorFor,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
129	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isInterface());  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  compiler.isInterface());  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkArgument(compiler!=  null  &&  compiler.isInterface());	      Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
130	[BUG]  [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.EMPTY_LIST_ARRAY)  {  this.invalidatingTypes  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
131	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	this.invalidatingTypes  =  Lists.newArrayList();	      Collections.emptySet())    {    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
132	[BUG]  [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertiesToErrorFor)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	10	None	replace
133	[BUG]  [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Class  <  T>  typeSystem,  Map  <  String,  CheckLevel>  propertyToErrorFor)  {	  TypeSystem    <    T>    typeSystem,    Map    <    String,    CheckLevel>    propertyToErrorFor)    {    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	10	None	replace
134	[BUG]  [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Collections.  <  T>emptySet()  ||  invalidatingTypes.size()  ==  0)  {  this.validatingTypes  =  Collections.emptySet();	      Collections.    <    T>emptySet())    {    this.validatingTypes    =    Collections.emptySet();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
135	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isInterface());  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  Preconditions.checkState(compiler!=  null  &&  compiler.isInterface());  [BUGGY]    TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	Preconditions.checkState(compiler!=  null  &&  compiler.isInterface());	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(propertiesToErrorFor,  0,  this.typeSystem,  0,  propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,    [BUGGY]  System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	303	303	2	replace	System.arraycopy(compiler,  0,  this.typeSystem,  0,  this.propertiesToErrorFor);	  System.arraycopy(compiler,    0,    this.typeSystem,    0,    propertiesToErrorFor);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
