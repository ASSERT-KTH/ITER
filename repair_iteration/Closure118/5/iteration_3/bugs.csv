bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  registry);  [CE]  cannot  find  symbol  registry  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  registry);	  super(compiler,    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  cannot  find  symbol  registry	7	None	replace
2	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  logger);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  logger);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  logger);	  super(compiler,    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	7	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(typeSystem,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	89	None	replace
4	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(typeSystem,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	89	None	replace
5	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(typeSystem,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
6	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem,  propertiesToErrorFor;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem,  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem,  propertiesToErrorFor;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    typeSystem;    	non-compiled	[CE]  ';'  expected	56	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null,  typesToErrorFor);	  Preconditions.checkState(compiler    >=    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	69	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null,  typesToErrorFor);	  Preconditions.checkState(compiler    >=    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	69	None	replace
9	[BUG]  [BUGGY]  super(compiler,  typeSystem,  renameNodes);  [CE]  cannot  find  symbol  renameNodes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  renameNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  renameNodes);	  super(compiler,    typeSystem,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	105	None	replace
10	[BUG]  [BUGGY]  super(compiler,  typeSystem,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  typesToSkip);	  super(compiler,    typeSystem,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	105	None	replace
11	[BUG]  [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  typesToErrorFor);	  this(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	106	None	replace
12	[BUG]  [BUGGY]  this(compiler,  typesToErrorFor,  typeSystem);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typesToErrorFor,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typesToErrorFor,  typeSystem);	  this(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	106	None	replace
13	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes);  [CE]  cannot  find  symbol  renameNodes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes);	  super(compiler,    typeSystem,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	6	None	replace
14	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  skipRenaming);  [CE]  cannot  find  symbol  skipRenaming  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  skipRenaming);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  skipRenaming);	  super(compiler,    typeSystem,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  find  symbol  skipRenaming	6	None	replace
15	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this.invalidatingTypes);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this.invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  this.invalidatingTypes);	  super(compiler,    typeSystem,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	6	None	replace
16	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  registry,  null);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  registry,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  registry,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    name,    null);    	non-compiled	[CE]  cannot  find  symbol  registry	63	None	replace
17	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  renameNodes);  [CE]  cannot  find  symbol  renameNodes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  renameNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  renameNodes);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	99	None	replace
18	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  renamingNodes);  [CE]  cannot  find  symbol  renamingNodes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  renamingNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  renamingNodes);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renamingNodes	99	None	replace
19	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  typesToSkip);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	99	None	replace
20	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  rootTypes);  [CE]  cannot  find  symbol  rootTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  rootTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  rootTypes);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	99	None	replace
21	[BUG]  [BUGGY]  this(compiler,  typeSystem,  renameNodes,  null);  [CE]  cannot  find  symbol  renameNodes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  renameNodes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  renameNodes,  null);	  this(compiler,    typeSystem,    invalidatingTypes,    null);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	88	None	replace
22	[BUG]  [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor,  null);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  typesToErrorFor,  null);	  this(compiler,    typeSystem,    invalidatingTypes,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	88	None	replace
23	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
24	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
25	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  Abstract  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  Abstract  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  Abstract	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
26	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
27	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractComp  [CE]  ')'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractComp  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractComp	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	73	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(typeSystem!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	73	None	replace
30	[BUG]  [BUGGY]  this.compiler  =  registry  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  cannot  find  symbol  registry  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  registry  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  registry  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    registry;    	non-compiled	[CE]  cannot  find  symbol  registry	1	None	replace
31	[BUG]  [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  name;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  name;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  name;	  constructor    Object    in    class    Object    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	11	None	replace
32	[BUG]  [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertiesToErrorFor);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertiesToErrorFor);	  constructor    Object    in    class    Object    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	11	None	replace
33	[BUG]  [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  name);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  name);	  constructor    Object    in    class    Object    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	11	None	replace
34	[BUG]  [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  names;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  names;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  names;	  constructor    Object    in    class    Object    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	11	None	replace
35	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(1);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(1);	  this.types    =    Lists.newArrayList(0);    	non-compiled	[CE]  cannot  find  symbol  types	86	None	replace
36	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(0);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Collections.newArrayList(0);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Collections.newArrayList(0);	  this.types    =    Lists.newArrayList(0);    	non-compiled	[CE]  cannot  find  symbol  types	86	None	replace
37	[BUG]  [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  this.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  this.compiler  =  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  this.compiler  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
38	[BUG]  [BUGGY]  ||(typeSystem!=  null  &&  propertiesToErrorFor.isEmpty()))  {  this.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||(typeSystem!=  null  &&  propertiesToErrorFor.isEmpty()))  {  this.compiler  =  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||(typeSystem!=  null  &&  propertiesToErrorFor.isEmpty()))  {  this.compiler  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
39	[BUG]  [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
40	[BUG]  [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalStateException( " ");  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalStateException( " ");	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(typeSystem!=  null);  Preconditions.checkState(compiler!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	78	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	78	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	78	None	replace
44	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  registry);  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  registry);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  find  symbol  registry	60	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkNotNull(typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkNotNull(typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkNotNull(typeSystem);	  Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	70	None	replace
46	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToSkip);	  super(compiler,    typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	104	None	replace
47	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertyToSkip);  [CE]  cannot  find  symbol  propertyToSkip  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertyToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertyToSkip);	  super(compiler,    typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertyToSkip	104	None	replace
48	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  skipRenaming);  [CE]  cannot  find  symbol  skipRenaming  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  skipRenaming);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  skipRenaming);	  this(compiler,    typeSystem,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  find  symbol  skipRenaming	3	None	replace
49	[BUG]  [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
50	[BUG]  [BUGGY]  ||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
51	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
52	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes,  null);  [CE]  cannot  find  symbol  renameNodes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    invalidatingTypes,    null);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	95	None	replace
53	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip,  null);  [CE]  cannot  find  symbol  typesToSkip  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    invalidatingTypes,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	95	None	replace
54	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem,  propertiesToErrorFor);	  this.types    =    Lists.newArrayList(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	85	None	replace
55	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(propertiesToErrorFor,  typesToSkip);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(propertiesToErrorFor,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(propertiesToErrorFor,  typesToSkip);	  this.types    =    Lists.newArrayList(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	85	None	replace
56	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(this.typesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(this.typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(this.typesToErrorFor);	  this.types    =    Lists.newArrayList(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	85	None	replace
57	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typeSystem);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Collections.newArrayList(typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Collections.newArrayList(typeSystem);	  this.types    =    Lists.newArrayList(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	85	None	replace
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	72	2	add
59	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	72	2	add
60	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	72	62	add
61	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	72	62	add
62	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	72	62	add
63	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	72	62	add
64	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	72	None	add
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	72	2	add
66	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	72	2	add
67	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	72	None	add
68	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
69	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
70	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
71	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
72	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	74	62	add
73	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	74	62	add
74	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [CE]  variable  propertiesToErrorFor  might  already  have  been  assigned  [FE]          IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.propertiesToErrorFor  =  propertiesToErrorFor;	  	non-compiled	[CE]  variable  propertiesToErrorFor  might  already  have  been  assigned	74	None	add
75	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
76	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [FE]  IllegalStateException  [FE]            IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
77	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]              IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	74	None	add
78	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	79	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	79	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	79	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	79	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	80	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	80	None	replace
84	[BUG]  [BUGGY]  Context.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [CE]  cannot  find  symbol  Context  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Context.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Context.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  cannot  find  symbol  Context	80	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	80	None	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	80	None	replace
87	[BUG]  [BUGGY]  Context.checkState(compiler!=  null);  [CE]  cannot  find  symbol  Context  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Context.checkState(compiler!=  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Context.checkState(compiler!=  null);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  Context	35	None	replace
88	[BUG]  [BUGGY]  Context.checkState(compiler  ==  null);  [CE]  cannot  find  symbol  Context  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Context.checkState(compiler  ==  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Context.checkState(compiler  ==  null);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  Context	35	None	replace
89	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem,  propertiesToErrorFor);  [CE]  no  suitable  method  found  for  checkState(boolean,TypeSystem<T>,Map<String,CheckLevel>)  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null,  typeSystem,  propertiesToErrorFor);	  Preconditions.checkState(compiler!=    null,    typeSystem);    	non-compiled	[CE]  no  suitable  method  found  for  checkState(boolean,TypeSystem<T>,Map<String,CheckLevel>)	116	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null,  typeSystem,  propertiesToErrorFor);  [CE]  no  suitable  method  found  for  checkState(boolean,TypeSystem<T>,Map<String,CheckLevel>)  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null,  typeSystem,  propertiesToErrorFor);	  Preconditions.checkState(compiler!=    null,    typeSystem);    	non-compiled	[CE]  no  suitable  method  found  for  checkState(boolean,TypeSystem<T>,Map<String,CheckLevel>)	116	None	replace
91	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null,  typeSystem,  typesToErrorFor);	  Preconditions.checkState(compiler!=    null,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	116	None	replace
92	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null,  typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null,  typeSystem);	  Preconditions.checkState(compiler!=    null,    typeSystem);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	116	None	replace
93	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [CE]  cannot  find  symbol  This  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  cannot  find  symbol  This	24	None	replace
94	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);  [CE]  cannot  find  symbol  rootTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);	  super(compiler,    typeSystem,    propertiesToErrorFor,    scopes);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	9	None	replace
95	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  null);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    null);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	49	None	replace
96	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true,  null);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  true,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    null);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	49	None	replace
97	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  tt);  [CE]  cannot  find  symbol  tt  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  tt);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    null);    	non-compiled	[CE]  cannot  find  symbol  tt	49	None	replace
98	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  null);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    null);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	49	None	replace
99	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  name,  false,  null);  [CE]  cannot  find  symbol  name  [FE]                                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  name,  false,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  name,  false,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    null);    	non-compiled	[CE]  cannot  find  symbol  name	49	None	replace
100	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  true);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  true);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    false);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	61	None	replace
101	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  false);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  false);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    false);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	61	None	replace
102	[BUG]  [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor,  null,  propertiesToErrorFor,  false);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor,  null,  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  typesToErrorFor,  null,  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    false);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	61	None	replace
103	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToSkip,  null);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToSkip,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToSkip,  null);	  this(compiler,    typeSystem,    propertyToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	67	None	replace
104	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToErrorFor,  null);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToErrorFor,  null);	  this(compiler,    typeSystem,    propertyToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	67	None	replace
105	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToSkip);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typeSystem,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	54	None	replace
106	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  ')'  expected	43	None	replace
107	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  scope);  [CE]  cannot  find  symbol  scope  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  scope);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  scope);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  cannot  find  symbol  scope	59	None	replace
108	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  name,  null);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  name,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  name,  null);	  super(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  name	10	None	replace
109	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  names,  null);  [CE]  cannot  find  symbol  names  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  names,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  names,  null);	  super(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  names	10	None	replace
110	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  this);	  super(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	10	None	replace
111	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  null,  tt);  [CE]  cannot  find  symbol  tt  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  null,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  null,  tt);	  super(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  tt	10	None	replace
112	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.propertiesToErrorFor);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	30	None	replace
113	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.values());  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.values());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.values());	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	30	None	replace
114	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToSkip);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.propertiesToSkip);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	30	None	replace
115	[BUG]  [BUGGY]  super(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor);	  super(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	107	None	replace
116	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor);	  super(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	107	None	replace
117	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrors,  null);  [CE]  cannot  find  symbol  typesToErrors  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrors,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrors,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrors	113	None	replace
118	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorNodes,  null);  [CE]  cannot  find  symbol  typesToErrorNodes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorNodes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorNodes,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorNodes	113	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
122	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
123	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes);  [CE]  cannot  find  symbol  renameNodes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  renameNodes);	  this(compiler,    typeSystem,    propertiesToErrorFor,    names);    	non-compiled	[CE]  cannot  find  symbol  renameNodes	111	None	replace
124	[BUG]  [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor,  true);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  typesToErrorFor,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  typesToErrorFor,  true);	  this(compiler,    typeSystem,    propertiesToErrorFor,    true);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	47	None	replace
125	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  true);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  true);	  this(compiler,    typeSystem,    propertiesToErrorFor,    true);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	47	None	replace
126	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [CE]  variable  compiler  might  already  have  been  assigned  [FE]    ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	121	None	add
127	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [CE]  cannot  find  symbol  This  [FE]      ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  	non-compiled	[CE]  cannot  find  symbol  This	121	None	add
128	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [CE]  ')'  expected  [FE]        ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  	non-compiled	[CE]  ')'  expected	121	None	add
129	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  JSTypeRegistry  registry  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [CE]  incompatible  types  [FE]          ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  JSTypeRegistry  registry  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    JSTypeRegistry  registry  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  	non-compiled	[CE]  incompatible  types	121	None	add
130	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	26	None	replace
131	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	26	None	replace
132	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  Abstract  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  Abstract  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  Abstract	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	26	None	replace
133	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  renamingNodes);  [CE]  cannot  find  symbol  renamingNodes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  renamingNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  renamingNodes);	  super(compiler,    typeSystem,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renamingNodes	100	None	replace
134	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [CE]  cannot  find  symbol  This  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?  compiler  :(AbstractCompiler)compiler;	  This.compiler    =    compiler;    	non-compiled	[CE]  cannot  find  symbol  This	84	None	replace
135	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  cannot  find  symbol  This  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  This.compiler    =    compiler;    	non-compiled	[CE]  cannot  find  symbol  This	84	None	replace
136	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typesToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typesToSkip);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	39	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  tt);  [CE]  cannot  find  symbol  tt  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  tt);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	51	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  name);  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  name);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  name);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  name	51	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  registry);  [CE]  cannot  find  symbol  registry  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  registry);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  registry);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	51	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  compiler);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  compiler);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	51	None	replace
141	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  scopes);  [CE]  cannot  find  symbol  scopes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  scopes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  scopes);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  scopes	51	None	replace
142	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
143	[BUG]  [BUGGY]  ||  compiler.isExtern())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isExtern())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isExtern())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
144	[BUG]  [BUGGY]  ||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
145	[BUG]  [BUGGY]  ||  compiler.isReference())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isReference())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isReference())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
146	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS_PER_PROPERTY);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	65	None	replace
147	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  name);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  name);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  cannot  find  symbol  name	65	None	replace
148	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  names);  [CE]  cannot  find  symbol  names  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  names);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  names);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  cannot  find  symbol  names	65	None	replace
149	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  registry);  [CE]  cannot  find  symbol  registry  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  registry);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  cannot  find  symbol  registry	65	None	replace
150	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALIDATION_WARNINGS_PER_PROPERTY);  [CE]  cannot  find  symbol  MAX_INVALIDATION_WARNINGS_PER_PROPERTY  [FE]                              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALIDATION_WARNINGS_PER_PROPERTY);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALIDATION_WARNINGS_PER_PROPERTY);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  cannot  find  symbol  MAX_INVALIDATION_WARNINGS_PER_PROPERTY	65	None	replace
151	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
152	[BUG]  [BUGGY]  ||  compiler.isExtern())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isExtern())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isExtern())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
153	[BUG]  [BUGGY]  ||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isConstructor())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
154	[BUG]  [BUGGY]  ||  compiler.isReference())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isReference())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isReference())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  ==  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkArgument(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkArgument(compiler  ==  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	71	None	replace
156	[BUG]  [BUGGY]  Preconditions.checkArgument(typeSystem!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkArgument(typeSystem!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkArgument(typeSystem!=  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	71	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkArgument(compiler  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkArgument(compiler  >=  null);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	71	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(typeSystem  ==  null);	  Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	68	None	replace
159	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true,  registry);  [CE]  cannot  find  symbol  registry  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  true,  registry);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    registry);    	non-compiled	[CE]  cannot  find  symbol  registry	50	None	replace
160	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  tt);  [CE]  cannot  find  symbol  tt  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  tt);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    registry);    	non-compiled	[CE]  cannot  find  symbol  tt	50	None	replace
161	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  1);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  1);	  super(compiler,    typeSystem,    propertiesToErrorFor.size());    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	16	None	replace
162	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  2);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  2);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  2);	  super(compiler,    typeSystem,    propertiesToErrorFor.size());    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	16	None	replace
163	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  +  1);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  +  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor.size()  +  1);	  super(compiler,    typeSystem,    propertiesToErrorFor.size());    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	16	None	replace
164	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  tt.size());  [CE]  cannot  find  symbol  tt  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  tt.size());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  tt.size());	  super(compiler,    typeSystem,    propertiesToErrorFor.size());    	non-compiled	[CE]  cannot  find  symbol  tt	16	None	replace
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	76	2	add
166	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	76	2	add
167	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	76	62	add
168	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	76	62	add
169	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	76	62	add
170	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  IllegalStateException  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  IllegalStateException  	76	62	add
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	76	2	add
172	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	76	2	add
173	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	76	2	add
174	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	76	2	add
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	76	2	add
176	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	76	2	add
177	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertyToSkip);  [CE]  cannot  find  symbol  propertyToSkip  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertyToSkip);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertyToSkip);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertyToSkip	55	None	replace
178	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  ';'  expected	42	None	replace
179	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  typeSystem,  propertiesToErrorFor);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  typeSystem,  propertiesToErrorFor);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	115	None	replace
180	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem,  propertiesToErrorFor);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  typeSystem,  propertiesToErrorFor);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	115	None	replace
181	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  typeSystem);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	115	None	replace
182	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  typeSystem,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  typeSystem,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  typeSystem,  typesToErrorFor);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	115	None	replace
183	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  registry.getCompiler()  :((  AbstractCompiler)compiler).getCompiler();  [CE]  cannot  find  symbol  registry  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  registry.getCompiler()  :((  AbstractCompiler)compiler).getCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  registry.getCompiler()  :((  AbstractCompiler)compiler).getCompiler();	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    registry;    	non-compiled	[CE]  cannot  find  symbol  registry	57	None	replace
184	[BUG]  [BUGGY]  this.compiler  =  registry  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [CE]  cannot  find  symbol  registry  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  registry  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  registry  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    registry;    	non-compiled	[CE]  cannot  find  symbol  registry	57	None	replace
185	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  registry.getCompiler((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [CE]  cannot  find  symbol  registry  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?  registry.getCompiler((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?  registry.getCompiler((  AbstractCompiler)compiler).getCompiler()  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    registry;    	non-compiled	[CE]  cannot  find  symbol  registry	57	None	replace
186	[BUG]  [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler  ==  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
187	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  typeSystem;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
188	[BUG]  [BUGGY]  ||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  typeSystem!=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
189	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  Compiler.create();  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  Compiler.create();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  Compiler.create();  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
190	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true,  name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  true,  name);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    name);    	non-compiled	[CE]  cannot  find  symbol  name	48	None	replace
191	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    nu    	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	117	None	replace
192	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    nu    	non-compiled	[CE]  ';'  expected	117	None	replace
193	[BUG]  [BUGGY]  this.types  =  Collections.newHashSet();  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Collections.newHashSet();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Collections.newHashSet();	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	29	None	replace
194	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typesToSkip);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Collections.newArrayList(typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Collections.newArrayList(typesToSkip);	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	29	None	replace
195	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList(typeSystem.size());  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Collections.newArrayList(typeSystem.size());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Collections.newArrayList(typeSystem.size());	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	29	None	replace
196	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler  ||  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashMap    <    String,    CheckLevel>();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
197	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();  [CE]  cannot  find  symbol  This  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashMap    <    String,    CheckLevel>();    	non-compiled	[CE]  cannot  find  symbol  This	87	None	replace
198	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  tt);  [CE]  cannot  find  symbol  tt  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  tt);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	14	None	replace
199	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  registry);  [CE]  cannot  find  symbol  registry  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  registry);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  registry);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	14	None	replace
200	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  name);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  name);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
201	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  scopes);  [CE]  cannot  find  symbol  scopes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  scopes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  scopes);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  scopes	14	None	replace
202	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);  [CE]  cannot  find  symbol  rootTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);	  this(compiler,    typeSystem,    propertiesToErrorFor,    registry);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	5	None	replace
203	[BUG]  [BUGGY]  Constructor  <  T>  this.compiler  =  compiler.getConstructor();  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Constructor  <  T>  this.compiler  =  compiler.getConstructor();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Constructor  <  T>  this.compiler  =  compiler.getConstructor();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
204	[BUG]  [BUGGY]  Constructor  <  T>  this.compiler  =  compiler.createConstructor();  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Constructor  <  T>  this.compiler  =  compiler.createConstructor();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Constructor  <  T>  this.compiler  =  compiler.createConstructor();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  not  a  statement	81	None	replace
205	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	75	None	replace
206	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    true);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	90	None	replace
207	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    true);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	90	None	replace
208	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  incompatible  types	91	None	replace
209	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToSkip);	  this(compiler,    typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	110	None	replace
210	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertyToSkip);  [CE]  cannot  find  symbol  propertyToSkip  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertyToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertyToSkip);	  this(compiler,    typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertyToSkip	110	None	replace
211	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  logger);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  logger);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  logger);	  this(compiler,    typeSystem,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	4	None	replace
212	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Lists.newArrayList();  [CE]  incompatible  types  [FE]    ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Lists.newArrayList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Lists.newArrayList();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    	non-compiled	[CE]  incompatible  types	122	None	replace
213	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Collections.emptySet();  [CE]  cannot  find  symbol  Collections  [FE]      ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Collections.emptySet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Collections.emptySet();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	122	None	replace
214	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Collections.emptyList();  [CE]  cannot  find  symbol  Collections  [FE]        ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Collections.emptyList();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  Collections.emptyList();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    	non-compiled	[CE]  cannot  find  symbol  Collections	122	None	replace
215	[BUG]  [BUGGY]  this.types  =  Lists.newHashSet();  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newHashSet();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newHashSet();	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  types	31	None	replace
216	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet(typeSystem);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Sets.newHashSet(typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Sets.newHashSet(typeSystem);	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  types	31	None	replace
217	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem);  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  incompatible  types	108	None	replace
218	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler,  propertiesToErrorFor);  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler,  propertiesToErrorFor);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  ')'  expected	108	None	replace
219	[BUG]  [BUGGY]  super(compiler,  typeSystem.getName(),  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem.getName(),  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem.getName(),  propertiesToErrorFor);	  super(compiler,    typeSystem.getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
220	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.getName());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.getName());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor.getName());	  super(compiler,    typeSystem.getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
221	[BUG]  [BUGGY]  super(compiler,  typeSystem,  registry.getName());  [CE]  cannot  find  symbol  registry  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  registry.getName());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  registry.getName());	  super(compiler,    typeSystem.getName());    	non-compiled	[CE]  cannot  find  symbol  registry	13	None	replace
222	[BUG]  [BUGGY]  super(compiler,  typeSystem.getName(),  propertyToErrorFor);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem.getName(),  propertyToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem.getName(),  propertyToErrorFor);	  super(compiler,    typeSystem.getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
223	[BUG]  [BUGGY]  super(compiler,  typeSystem,  tt.getName());  [CE]  cannot  find  symbol  tt  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  tt.getName());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  tt.getName());	  super(compiler,    typeSystem.getName());    	non-compiled	[CE]  cannot  find  symbol  tt	13	None	replace
224	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem,  propertiesToErrorFor;  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem,  propertiesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem,  propertiesToErrorFor;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    typeSystem;    	non-compiled	[CE]  ';'  expected	2	None	replace
225	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typesToErrorFor;  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typesToErrorFor;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    typeSystem;    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	2	None	replace
226	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  invalidatingTypes);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	114	None	replace
227	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null,  propertiesToErrorFor);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	114	None	replace
228	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToErrorFor);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToErrorFor);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    propertiesToSkip);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	114	None	replace
229	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  typesToErrorFor);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	114	None	replace
230	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  propertiesToErrorFor);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	114	None	replace
231	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  renamingNodes);  [CE]  cannot  find  symbol  renamingNodes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  renamingNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  renamingNodes);	  this(compiler,    typeSystem,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  renamingNodes	82	None	replace
232	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip);	  this(compiler,    typeSystem,    propertiesToErrorFor,    invalidatingTypes);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	82	None	replace
233	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this.validatingTypes);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this.validatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  this.validatingTypes);	  super(compiler,    typeSystem,    propertiesToErrorFor,    typesToSkip);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	101	None	replace
234	[BUG]  [BUGGY]  Constructor  <  T>  comm  =  compiler.getCompilerConstructor();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Constructor  <  T>  comm  =  compiler.getCompilerConstructor();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Constructor  <  T>  comm  =  compiler.getCompilerConstructor();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
235	[BUG]  [BUGGY]  Constructor  <  T>  comm  =  compiler.getCompiler(typeSystem);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Constructor  <  T>  comm  =  compiler.getCompiler(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Constructor  <  T>  comm  =  compiler.getCompiler(typeSystem);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
236	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  This  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToErrorFor);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  This	53	None	replace
237	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)	98	None	replace
238	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler  &&  compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	98	None	replace
239	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  typesToErrorFor);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	123	None	replace
240	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  1);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  1);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
241	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  2);  [CE]  cannot  find  symbol  types  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  2);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  2);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
242	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size(),  propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size(),  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.size(),  propertiesToErrorFor);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
243	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  +  1);  [CE]  cannot  find  symbol  types  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  +  1);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  +  1);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  name);  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  name);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  name);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  cannot  find  symbol  name	44	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  registry);  [CE]  cannot  find  symbol  registry  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  registry);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  registry);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  cannot  find  symbol  registry	44	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  compiler);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false,  compiler);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	44	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true,  compiler);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true,  compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true,  compiler);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	44	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	77	None	replace
249	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  compiler  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	77	None	replace
250	[BUG]  [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  variable  compiler  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.invalidationMap  =  LinkedHashMultimap.create();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	77	None	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(this.invalidationMap!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]          ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(this.invalidationMap!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(this.invalidationMap!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	77	None	replace
252	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  nameNodes);  [CE]  cannot  find  symbol  nameNodes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  nameNodes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  nameNodes);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    names);    	non-compiled	[CE]  cannot  find  symbol  nameNodes	62	None	replace
253	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	112	None	replace
254	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	112	None	replace
255	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	112	None	replace
256	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	112	None	replace
257	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
258	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
259	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  compiler  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
260	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compil  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compil  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compil	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
261	[BUG]  [BUGGY]  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  cannot  find  symbol  compiler  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    ((    AbstractCompiler)compiler).compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  cannot  find  symbol  compiler	97	None	replace
262	[BUG]  [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler  ==  null)  {  this.compiler  =  compiler;	  ||    compiler!=    null)    {    this.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
263	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  typeSystem;	  ||    compiler!=    null)    {    this.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
264	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem,  propertiesToErrorFor);	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
265	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.propertiesToSkip);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem.propertiesToSkip);	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
266	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem.propertiesToErrorFor);	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
267	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.cloneTree());  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.cloneTree());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem.cloneTree());	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
268	[BUG]  [BUGGY]  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(typeSystem,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	94	None	replace
269	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(typeSystem,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	94	None	replace
270	[BUG]  [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
271	[BUG]  [BUGGY]  ||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
272	[BUG]  [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
273	[BUG]  [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||(typeSystem!=  null  &&  typesToErrorFor.isEmpty()))  {  throw  new  IllegalArgumentException( " ");	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
274	[BUG]  [BUGGY]  super(compiler,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typesToSkip);	  super(compiler,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	12	None	replace
275	[BUG]  [BUGGY]  super(compiler,  typeSystem.propertiesToErrorFor);  [CE]  cannot  find  symbol  propertiesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem.propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem.propertiesToErrorFor);	  super(compiler,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToErrorFor	12	None	replace
276	[BUG]  [BUGGY]  super(compiler,  typeSystem.typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem.typesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem.typesToErrorFor);	  super(compiler,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	12	None	replace
277	[BUG]  [BUGGY]  super(compiler,  propertiesToErrorFor);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  propertiesToErrorFor);	  super(compiler,    typesToErrorFor);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	12	None	replace
278	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  nameNodes,  null);  [CE]  cannot  find  symbol  nameNodes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  nameNodes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  nameNodes,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    names,    null);    	non-compiled	[CE]  cannot  find  symbol  nameNodes	64	None	replace
279	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  3);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  3);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  3);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
280	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  Arrays.asList(propertiesToErrorFor));  [CE]  cannot  find  symbol  Arrays  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  Arrays.asList(propertiesToErrorFor));  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  Arrays.asList(propertiesToErrorFor));	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    tt);    	non-compiled	[CE]  cannot  find  symbol  Arrays	59	None	replace
281	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  ComparisonFailure  	23	2	replace
282	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  ComparisonFailure  	23	2	replace
283	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  IllegalArgumentException  	23	62	replace
284	[BUG]  [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  IllegalArgumentException  	23	62	replace
285	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	23	None	replace
286	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  ComparisonFailure  	23	2	replace
287	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  ComparisonFailure  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	compilable	  [FE]  ComparisonFailure  	23	2	replace
288	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [CE]  :  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    ((    AbstractCompiler)compiler).compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  :  expected	97	None	replace
289	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [CE]  :  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    ((    AbstractCompiler)compiler).compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  :  expected	97	None	replace
290	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypes);	  this(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	106	None	replace
291	[BUG]  [BUGGY]  super(compiler,  typeSystem,  invalidatingTypesToErrorFor,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypesToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  invalidatingTypesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  invalidatingTypesToErrorFor,  propertiesToErrorFor);	  super(compiler,    typeSystem,    propertiesToErrorFor,    typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypesToErrorFor	101	None	replace
292	[BUG]  [BUGGY]  Super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);	  super(compiler,    typeSystem,    propertiesToErrorFor,    typesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	101	None	replace
293	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  null,  propertiesToErrorFor,  false);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  null,  propertiesToErrorFor,  false);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypes,  null,  propertiesToErrorFor,  false);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    false);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	61	None	replace
294	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler  ==  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler  ==  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	74	None	add
295	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkNotNull(compiler);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
296	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  Preconditions.checkState(compiler!=  null);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkNotNull(compiler);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkNotNull(compiler);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
297	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
298	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [FE]  IllegalStateException  [FE]        IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
299	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	74	None	add
300	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  invalidationMap;  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  invalidationMap;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  invalidationMap;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    registry;    	non-compiled	[CE]  incompatible  types	1	None	replace
301	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  ')'  expected	77	None	replace
302	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	77	None	replace
303	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  typeSystem;  [CE]  incompatible  types  [FE]    ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  typeSystem;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    	non-compiled	[CE]  incompatible  types	122	None	replace
304	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
305	[BUG]  [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	20	None	replace
306	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  INVALIDATION_ON_TYPE);  [CE]  cannot  find  symbol  INVALIDATION_ON_TYPE  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  INVALIDATION_ON_TYPE);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  INVALIDATION_ON_TYPE);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  cannot  find  symbol  INVALIDATION_ON_TYPE	65	None	replace
307	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS);  [CE]  cannot  find  symbol  MAX_INVALDIATION_WARNINGS  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  cannot  find  symbol  MAX_INVALDIATION_WARNINGS	65	None	replace
308	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS_PER_TYPE);  [CE]  cannot  find  symbol  MAX_INVALDIATION_WARNINGS_PER_TYPE  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS_PER_TYPE);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  MAX_INVALDIATION_WARNINGS_PER_TYPE);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    tt);    	non-compiled	[CE]  cannot  find  symbol  MAX_INVALDIATION_WARNINGS_PER_TYPE	65	None	replace
309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	compilable	  [FE]  ComparisonFailure  	35	2	replace
310	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	compilable	  [FE]  ComparisonFailure  	35	2	replace
311	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  incompatible  types	35	None	replace
312	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
313	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    nu    	non-compiled	[CE]  ';'  expected	117	None	replace
314	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  ==  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler!=  null)  {  this.compiler  =  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    nu    	non-compiled	[CE]  ';'  expected	117	None	replace
315	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler!=  null)  {  this.compiler  =  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    nu    	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	117	None	replace
316	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isInterface())  {  this.compiler  =  compiler;  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
317	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isInterface())  {  this.compiler  =  compiler;	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
318	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  invalidatingTypes);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    name);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	48	None	replace
319	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	118	None	replace
320	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor,  null);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip,    null);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	113	None	replace
321	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor,  null);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	113	None	replace
322	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor,  invalidatingTypes,  null);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor,  invalidatingTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  typesToErrorFor,  invalidatingTypes,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip,    null);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	113	None	replace
323	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	26	None	replace
324	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	26	None	replace
325	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  ')'  expected	43	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  typeSystem;  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  typeSystem;	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  ')'  expected	115	None	replace
327	[BUG]  [BUGGY]  super(compiler,  typeSystem.getPropertyName());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem.getPropertyName());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem.getPropertyName());	  super(compiler,    typeSystem.getName());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
328	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  3);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  3);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor.size()  -  3);	  super(compiler,    typeSystem,    propertiesToErrorFor.size());    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	16	None	replace
329	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem;  [CE]  :  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    typeSystem;    	non-compiled	[CE]  :  expected	2	None	replace
330	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    typeSystem;    	compilable	  [FE]  ClassCastException  	2	62	replace
331	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  compiler;  [FE]  ClassCastException  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  compiler;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    typeSystem;    	compilable	  [FE]  ClassCastException  	2	62	replace
332	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  new  AbstractCompiler();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  new  AbstractCompiler();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  new  AbstractCompiler();	  ||    compiler!=    null)    {    this.compiler    =    compiler;    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
333	[BUG]  [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertiesToErrorFor;  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertiesToErrorFor;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertiesToErrorFor;	  constructor    Object    in    class    Object    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	11	None	replace
334	[BUG]  [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertyToErrorFor);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertyToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	constructor  Object  in  class  Object  cannot  be  applied  to  given  types,  propertyToErrorFor);	  constructor    Object    in    class    Object    cannot    be    applied    to    given    types;    	non-compiled	[CE]  ';'  expected	11	None	replace
335	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  new  CheckLevel  <  T>();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  new  CheckLevel  <  T>();  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  new  CheckLevel  <  T>();  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
336	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem,  invalidatingTypes);	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
337	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem,  propertyToErrorFor);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem,  propertyToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem,  propertyToErrorFor);	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
338	[BUG]  [BUGGY]  Preconditions.checkState(this.compiler  ==  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(this.compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(this.compiler  ==  null);	  Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	68	None	replace
339	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  validatingTypes,  null);  [CE]  cannot  find  symbol  validatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  validatingTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  validatingTypes,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    rootTypes,    null);    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	96	None	replace
340	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	76	2	add
341	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	76	2	add
342	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)	98	None	replace
343	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [CE]  :  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  :  expected	98	None	replace
344	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [CE]  :  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    	non-compiled	[CE]  :  expected	98	None	replace
345	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ';'  expected	92	None	replace
346	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ';'  expected	92	None	replace
347	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  preconditions.checkState(typeSystem!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  preconditions.checkState(typeSystem!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  preconditions.checkState(typeSystem!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  cannot  find  symbol  preconditions	78	None	replace
348	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	51	None	replace
349	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);  [CE]  cannot  find  symbol  rootTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  rootTypes);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	51	None	replace
350	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  ';'  expected	42	None	replace
351	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  ';'  expected	42	None	replace
352	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [CE]  :  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  :  expected	42	None	replace
353	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  true);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  true);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  true);	  this(compiler,    typeSystem,    propertiesToErrorFor,    true);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	47	None	replace
354	[BUG]  [BUGGY]  Super(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Super(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Super(compiler,  typeSystem,  propertiesToErrorFor);	  super(compiler,    typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
355	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
356	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
357	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typesToErrorFor;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typesToErrorFor;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typesToErrorFor;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    typeSystem;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
358	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes.size());  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes.size());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes.size());	  super(compiler,    typeSystem,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	6	None	replace
359	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   ".       ");    }    	compilable	  [FE]  ComparisonFailure  	38	2	replace
360	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ". ");  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   ".       ");    }    	compilable	  [FE]  ComparisonFailure  	38	2	replace
361	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ".equals(typeSystem);  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ".equals(typeSystem);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ".equals(typeSystem);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   ".       ");    }    	non-compiled	[CE]  	38	None	replace
362	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null);	  super(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	10	None	replace
363	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null);  [CE]  cannot  find  symbol  rootTypes  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null);	  super(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	10	None	replace
364	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(typeSystem,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	89	None	replace
365	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	14	None	replace
366	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  null);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  null);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
367	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [CE]  :  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  :  expected	108	None	replace
368	[BUG]  [BUGGY]  this.compiler  =  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler);    	non-compiled	[CE]  incompatible  types	108	None	replace
369	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem  :  new  HashMap  <  String,  CheckLevel>();  [CE]  :  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem  :  new  HashMap  <  String,  CheckLevel>();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem  :  new  HashMap  <  String,  CheckLevel>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashMap    <    String,    CheckLevel>();    	non-compiled	[CE]  :  expected	87	None	replace
370	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  null);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  null);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	44	None	replace
371	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	73	None	replace
372	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	73	None	replace
373	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler!=  null);  }  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler!=  null);  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler!=  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  ')'  expected	73	None	replace
374	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [CE]  cannot  find  symbol  This  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;	  This.compiler    =    compiler;    	non-compiled	[CE]  cannot  find  symbol  This	84	None	replace
375	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
376	[BUG]  [BUGGY]  super(compiler,  typeSystem,  invalidatingTypes.size(),  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  invalidatingTypes.size(),  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  invalidatingTypes.size(),  propertiesToErrorFor);	  super(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	107	None	replace
377	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler,  typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkNotNull(compiler,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkNotNull(compiler,  typeSystem);	  Preconditions.checkNotNull(compiler);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	70	None	replace
378	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  invalidatingTypes,  null);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  invalidatingTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertyToErrorFor,  invalidatingTypes,  null);	  this(compiler,    typeSystem,    propertyToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	67	None	replace
379	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypesToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  invalidatingTypesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypesToErrorFor);	  this(compiler,    typeSystem,    propertyToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypesToErrorFor	110	None	replace
380	[BUG]  [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(this.typeSystem!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(this.typeSystem!=  null);	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	80	None	replace
381	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
382	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
383	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
384	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler    ==    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  incompatible  types	21	None	replace
385	[BUG]  [BUGGY]  super(compiler,  typesToErrorFor,  propertiesToSkip);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typesToErrorFor,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typesToErrorFor,  propertiesToSkip);	  super(compiler,    typesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	12	None	replace
386	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  }  [CE]  cannot  find  symbol  validatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	112	None	replace
387	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem!=  null);  this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	112	None	replace
388	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(typeSystem  ==  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler    ==    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	75	None	replace
389	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.    	non-compiled	[CE]  ')'  expected	93	None	replace
390	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [CE]  ')'  expected  [FE]    ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  	non-compiled	[CE]  ')'  expected	121	None	add
391	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  }  [CE]  ')'  expected  [FE]      ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  }	  	non-compiled	[CE]  ')'  expected	121	None	add
392	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [CE]  ')'  expected  [FE]        ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  	non-compiled	[CE]  ')'  expected	121	None	add
393	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	72	None	add
394	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler!=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  >=  null);  Preconditions.checkState(compiler!=  null);	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	72	None	add
395	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Context.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [CE]  cannot  find  symbol  Context  [FE]        ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Context.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Context.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	non-compiled	[CE]  cannot  find  symbol  Context	72	None	add
396	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  invalidatingTypes,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  invalidatingTypes,  propertiesToErrorFor);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	123	None	replace
397	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor,  propertiesToErrorFor);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	123	None	replace
398	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  ==  null)  {  this.compiler  =  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compil    	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	120	None	replace
399	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	79	None	replace
400	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  null,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  null,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypes,  null,  propertiesToErrorFor);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	114	None	replace
401	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null,  propertiesToErrorFor);  [CE]  cannot  find  symbol  rootTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null,  propertiesToErrorFor);	  this(compiler,    typeSystem,    propertiesToErrorFor,    null,    propertiesToSkip);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	114	None	replace
402	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  names);  [CE]  cannot  find  symbol  names  [FE]                          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  names);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  names);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    registry);    	non-compiled	[CE]  cannot  find  symbol  names	50	None	replace
403	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  typeSystem;  }  else  {  throw  new  IllegalStateException( " ");  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
404	[BUG]  [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.invalidatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
405	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  ')'  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null;  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  ')'  expected	103	None	replace
406	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler.invalidatingTypes  ==  null);  this.invalidatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.invalidatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	103	None	replace
407	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertyToErrorFor.getName());  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertyToErrorFor.getName());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertyToErrorFor.getName());	  super(compiler,    typeSystem.getName());    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	13	None	replace
408	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  names);  [CE]  cannot  find  symbol  names  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  names);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  names);	  System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  names	51	None	replace
409	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkArgument(compiler!=  null  &&  typeSystem.isUnknownType());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkArgument(compiler!=  null  &&  typeSystem.isUnknownType());	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
410	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null,  typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkArgument(compiler!=  null,  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkArgument(compiler!=  null,  typeSystem);	  Preconditions.checkArgument(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	71	None	replace
411	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size(),  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size(),  typesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor.size(),  typesToSkip);	  super(compiler,    typeSystem,    propertiesToErrorFor.size());    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	16	None	replace
412	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null,  propertiesToSkip);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    null);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	49	None	replace
413	[BUG]  [BUGGY]  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.typeSystem  =  typeSystem;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.typeSystem  =  typeSystem;	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	80	None	replace
414	[BUG]  [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	80	None	replace
415	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.typeSystem    =    typeSystem;    	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	80	None	replace
416	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [CE]  :  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    AbstractCompiler    compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  :  expected	92	None	replace
417	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [CE]  cannot  find  symbol  preconditions  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    this.invalidationMap    =    LinkedHashMultimap.create();    Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	non-compiled	[CE]  cannot  find  symbol  preconditions	76	None	add
418	[BUG]  [BUGGY]  Set  <  String>  propertiesToErrorFor  =  Sets.newHashSet();  [CE]  variable  propertiesToErrorFor  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Set  <  String>  propertiesToErrorFor  =  Sets.newHashSet();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Set  <  String>  propertiesToErrorFor  =  Sets.newHashSet();	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  variable  propertiesToErrorFor  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)	22	None	replace
419	[BUG]  [BUGGY]  Set  <  String>  propertiesToErrorFor  =  Sets.newHashSet(typeSystem);  [CE]  variable  propertiesToErrorFor  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Set  <  String>  propertiesToErrorFor  =  Sets.newHashSet(typeSystem);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Set  <  String>  propertiesToErrorFor  =  Sets.newHashSet(typeSystem);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  variable  propertiesToErrorFor  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)	22	None	replace
420	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  new  HashMap  <  String,  CheckLevel>();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  new  HashMap  <  String,  CheckLevel>();  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  new  HashMap  <  String,  CheckLevel>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    HashMap    <    String,    CheckLevel>();    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
421	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler!=  null);	  	non-compiled	[CE]  cannot  find  symbol	72	None	add
422	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	72	2	add
423	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(compiler!=  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler!=    null);    Preconditions.checkNotNull(typeSystem);  Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	72	2	add
424	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null);  [CE]  incompatible  types  [FE]    ClassCastException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)typeSystem    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null);	  	non-compiled	[CE]  incompatible  types	121	None	add
425	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkArgument(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkArgument(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
426	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkArgument(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.checkArgument(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.checkArgument(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	74	62	add
427	[BUG]  [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);  Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	                Preconditions.checkState(compiler!=        null);        Preconditions.checkState(compiler    ==    null);    Preconditions.check(compiler!=  null);  Preconditions.checkState(compiler  ==  null);	  	non-compiled	[CE]  cannot  find  symbol	74	None	add
428	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this.skipRenaming);  [CE]  cannot  reference  this  before  supertype  constructor  has  been  called  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  this.skipRenaming);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  this.skipRenaming);	  super(compiler,    typeSystem,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  reference  this  before  supertype  constructor  has  been  called	6	None	replace
429	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet(propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Sets.newHashSet(propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Sets.newHashSet(propertiesToErrorFor);	  this.types    =    Sets.newHashSet();    	non-compiled	[CE]  cannot  find  symbol  types	31	None	replace
430	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypes,  propertiesToErrorFor);	  this(compiler,    typeSystem,    invalidatingTypes,    null);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	88	None	replace
431	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor,  invalidatingTypes,  null);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor,  invalidatingTypes,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor,  invalidatingTypes,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip,    null);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	113	None	replace
432	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor,  null);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor,  null);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor,  null);	  this(compiler,    typeSystem,    propertiesToErrorFor,    propertiesToSkip,    null);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	113	None	replace
433	[BUG]  [BUGGY]  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.validatingTypes  =  Lists.newArrayList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	79	None	replace
434	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [CE]  cannot  find  symbol  validatingTypes  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	79	None	replace
435	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem.isUnknownType());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem.isUnknownType());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null,  typeSystem.isUnknownType());	  Preconditions.checkState(compiler    >=    null);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
436	[BUG]  [BUGGY]  this.types  =  Collections.EMPTY_LIST;  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Collections.EMPTY_LIST;  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Collections.EMPTY_LIST;	  this.types    =    Collections.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	29	None	replace
437	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  propertyToSkip);  [CE]  cannot  find  symbol  propertyToSkip  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  propertyToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  propertyToSkip);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  find  symbol  propertyToSkip	60	None	replace
438	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem,  propertyToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null,  typeSystem,  propertyToErrorFor);	  Preconditions.checkState(compiler!=    null,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	116	None	replace
439	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null);  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.    	non-compiled	[CE]  incompatible  types	93	None	replace
440	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    else    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    nu    	non-compiled	[CE]  ';'  expected	117	None	replace
441	[BUG]  [BUGGY]  if(typeSystem  ==  null)  {  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem  ==  null)  {  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem  ==  null)  {  if(compiler!=  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  ';'  expected	20	None	replace
442	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor.size());  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor.size());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor.size());	  this(compiler,    typeSystem);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	106	None	replace
443	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	compilable	  [FE]  IllegalStateException  	35	62	replace
444	[BUG]  [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(       "       ");    }    if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "       ");    }    	compilable	  [FE]  IllegalStateException  	35	62	replace
445	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  4);  [CE]  cannot  find  symbol  types  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size()  -  4);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.size()  -  4);	  this.types    =    Lists.newArrayList(typeSystem.size());    	non-compiled	[CE]  cannot  find  symbol  types	32	None	replace
446	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToErrorFor);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    propertiesToSkip);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	123	None	replace
447	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip);	  this(compiler,    typeSystem,    propertiesToErrorFor,    name);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	3	None	replace
448	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [CE]  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null)    {    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    }    	non-compiled	[CE]  	91	None	replace
449	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToSkip);	  super(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	10	None	replace
450	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  false,  name);  [CE]  cannot  find  symbol  name  [FE]                    ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  false,  name);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  false,  name);	  this(compiler,    typeSystem,    null,    propertiesToErrorFor,    false);    	non-compiled	[CE]  cannot  find  symbol  name	61	None	replace
451	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  propertiesToSkip);	  this(compiler,    typeSystem,    propertiesToErrorFor,    false,    name);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	48	None	replace
452	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	73	None	replace
453	[BUG]  [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(typeSystem!=  null)  {  Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  }	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	73	None	replace
454	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                      ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToErrorFor);	  this(compiler,    typeSystem,    propertyToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	67	None	replace
455	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToSkip);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToSkip);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertyToErrorFor,  propertiesToSkip);	  this(compiler,    typeSystem,    propertyToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	67	None	replace
456	[BUG]  [BUGGY]  Preconditions.checkState(typeSystem!=  typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  Preconditions.checkState(typeSystem!=  typeSystem);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(typeSystem!=  typeSystem);	  Preconditions.checkState(compiler!=    typeSystem);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	115	None	replace
457	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types);  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.types);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.types);	  this.types    =    Lists.newArrayList(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	30	None	replace
458	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.types);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.types);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem.types);	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
459	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.size());  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem.size());  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem.size());	  this.types    =    Lists.newArrayListWithCapacity(typeSystem);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
460	[BUG]  [BUGGY]  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.validatingTypes  =  Collections.emptyList();  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.validatingTypes  =  Collections.emptyList();	          Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=    null);    this.validatingTypes    =    Collections.emptyList();    	non-compiled	[CE]  cannot  find  symbol  validatingTypes	112	None	replace
461	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem  :  registry;  [CE]  :  expected  [FE]        ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem  :  registry;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler,  typeSystem  :  registry;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    registry;    	non-compiled	[CE]  :  expected	1	None	replace
462	[BUG]  [BUGGY]  ||  this.compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  this.compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  this.compiler!=  null)  {  this.compiler  =  compiler;  }	  ||    compiler!=    null)    {    this.compiler    =    compiler;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
463	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem;  [CE]  cannot  find  symbol  This  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    typeSystem;    	non-compiled	[CE]  cannot  find  symbol  This	56	None	replace
464	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	26	None	replace
465	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  compiler);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  compiler);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  compiler);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
466	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  names);  [CE]  cannot  find  symbol  names  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor,  names);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor,  names);	  assemble(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  names	14	None	replace
467	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isInterface())  {  this.compiler  =  typeSystem;  }	  ||    compiler.isInterface())    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
468	[BUG]  [BUGGY]  this.types  =  Sets.newArrayList(propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  this.types  =  Sets.newArrayList(propertiesToErrorFor);  [BUGGY]      this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Sets.newArrayList(propertiesToErrorFor);	  this.types    =    Lists.newArrayList(propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  types	85	None	replace
469	[BUG]  [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).compiler;  [CE]  :  expected  [FE]          ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).compiler;  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).compiler;	  This.compiler    =    compiler;    	non-compiled	[CE]  :  expected	84	None	replace
470	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
471	[BUG]  [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {      [BUGGY]  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  [BUGGY]      this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    else    this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  ')'  expected	28	None	replace
