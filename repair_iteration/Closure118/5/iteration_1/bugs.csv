bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    this(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  recursive  constructor  invocation  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    this(compiler,  typeSystem,  propertiesToErrorFor);		non-compiled	[CE]  recursive  constructor  invocation	10	None	add
2	[BUG]  [BUGGY]    super(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    super(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    super(compiler,  typeSystem,  propertiesToErrorFor);		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	10	None	add
3	[BUG]  [BUGGY]    this(compiler,  typeSystem,  null,  propertiesToErrorFor);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this(compiler,  typeSystem,  null,  propertiesToErrorFor);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    this(compiler,  typeSystem,  null,  propertiesToErrorFor);		non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	10	None	add
4	[BUG]  [BUGGY]    this(compiler,  typeSystem,  propertiesToErrorFor,  null);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this(compiler,  typeSystem,  propertiesToErrorFor,  null);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    this(compiler,  typeSystem,  propertiesToErrorFor,  null);		non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	10	None	add
5	[BUG]  [BUGGY]    this(compiler,  typeSystem,  propertiesToErrorFor,  false);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this(compiler,  typeSystem,  propertiesToErrorFor,  false);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    this(compiler,  typeSystem,  propertiesToErrorFor,  false);		non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	10	None	add
6	[BUG]  [BUGGY]    this(compiler,  typeSystem,  null);  [CE]  recursive  constructor  invocation  [FE]              ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this(compiler,  typeSystem,  null);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    this(compiler,  typeSystem,  null);		non-compiled	[CE]  recursive  constructor  invocation	10	None	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
8	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
10	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
11	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem);  [CE]  AbstractCompiler  is  abstract;  cannot  be  instantiated  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem);  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem);	this.compiler  =  compiler;  	non-compiled	[CE]  AbstractCompiler  is  abstract;  cannot  be  instantiated	9	None	replace
12	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler);  [CE]  AbstractCompiler  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler);  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler);	this.compiler  =  compiler;  	non-compiled	[CE]  AbstractCompiler  is  abstract;  cannot  be  instantiated	9	None	replace
13	[BUG]  [BUGGY]    super(compiler);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    super(compiler);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    super(compiler);		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	10	None	add
14	[BUG]  [BUGGY]    super(compiler,  typeSystem);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    super(compiler,  typeSystem);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    super(compiler,  typeSystem);		non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	10	None	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    Preconditions.checkState(compiler!=  null);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	    Preconditions.checkState(compiler!=  null);		compilable	  [FE]  ComparisonFailure  	10	2	add
16	[BUG]  [BUGGY]    Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    Preconditions.checkState(compiler!=  null);  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    Preconditions.checkState(compiler!=  null);		compilable	  [FE]  ComparisonFailure  	10	2	add
17	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }	this.compiler  =  compiler;  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	9	None	replace
18	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }	this.compiler  =  compiler;  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	9	None	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
20	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
21	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
22	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	this.compiler  =  compiler;  	compilable	  [FE]  ComparisonFailure  	9	2	replace
23	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;  [BUGGY]  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  compiler;	this.compiler  =  compiler;  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
24	[BUG]  [BUGGY]    this.types  =  Lists.newArrayList();  [CE]  cannot  find  symbol  types  [FE]    ComparisonFailure  [CONTEXT]  private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {  [BUGGY]    this.types  =  Lists.newArrayList();  [BUGGY]  this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	    this.types  =  Lists.newArrayList();		non-compiled	[CE]  cannot  find  symbol  types	10	None	add
