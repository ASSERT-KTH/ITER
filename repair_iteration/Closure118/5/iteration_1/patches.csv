bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  registry;  [CE]  cannot  find  symbol  registry  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  registry;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  registry;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  cannot  find  symbol  registry	10	None	replace
2	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem;  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  typeSystem;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  incompatible  types	10	None	replace
3	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  name);  [CE]  cannot  find  symbol  name  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  name);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  name);	      this(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  name	1	None	replace
4	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  tt);  [CE]  cannot  find  symbol  tt  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  tt);	      this(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	1	None	replace
5	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  registry);  [CE]  cannot  find  symbol  registry  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  registry);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  registry);	      this(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  registry	1	None	replace
6	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  name);  [CE]  cannot  find  symbol  name  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  name);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  name);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  name	2	None	replace
7	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  tt);  [CE]  cannot  find  symbol  tt  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  tt);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  tt);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	2	None	replace
8	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  names);  [CE]  cannot  find  symbol  names  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  names);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  names);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  names	2	None	replace
9	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  scopes);  [CE]  cannot  find  symbol  scopes  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  scopes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  scopes);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  scopes	2	None	replace
10	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  null);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  null);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	2	None	replace
11	[BUG]  [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	      super(compiler);    	non-compiled	[CE]  ';'  expected	13	None	replace
12	[BUG]  [BUGGY]  super(compiler,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typesToErrorFor);	      super(compiler);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	13	None	replace
13	[BUG]  [BUGGY]  super(compiler,  typeSystem.getName());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem.getName());  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem.getName());	      super(compiler);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
14	[BUG]  [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  assemble(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	assemble(compiler,  typeSystem,  propertiesToErrorFor);	      super(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
15	[BUG]  [BUGGY]  super(compiler,  typeSystem,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  typesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  typesToErrorFor);	      super(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	14	None	replace
16	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size());  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor.size());  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor.size());	      super(compiler,    typeSystem);    	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	14	None	replace
17	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
18	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
19	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isInterface())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
20	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	21	None	add
21	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	21	None	add
22	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    If(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	21	None	add
23	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	21	None	add
24	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [CE]  variable  compiler  might  already  have  been  assigned  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	9	None	add
25	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [CE]  cannot  find  symbol  This  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	  	non-compiled	[CE]  cannot  find  symbol  This	9	None	add
26	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	  	non-compiled	[CE]  ')'  expected	9	None	add
27	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }	  	non-compiled	[CE]  ')'  expected	9	None	add
28	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  else  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	  	non-compiled	[CE]  ')'  expected	9	None	add
29	[BUG]  [BUGGY]  this.types  =  Collections.newArrayList();  [CE]  cannot  find  symbol  types  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.types  =  Collections.newArrayList();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Collections.newArrayList();	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
30	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem);  [CE]  cannot  find  symbol  types  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.types  =  Lists.newArrayList(typeSystem);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
31	[BUG]  [BUGGY]  this.types  =  Sets.newHashSet();  [CE]  cannot  find  symbol  types  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.types  =  Sets.newHashSet();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Sets.newHashSet();	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
32	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size());  [CE]  cannot  find  symbol  types  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.types  =  Lists.newArrayList(typeSystem.size());  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(typeSystem.size());	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
33	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
34	[BUG]  [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  ||  compiler.isInterface())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler.isInterface())  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
35	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	19	None	add
36	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	19	None	add
37	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  If(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  If(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    If(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  	19	None	add
38	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ".   ");  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalStateException( ".   ");  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	19	None	add
39	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typesToErrorFor);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	12	None	replace
40	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  variable  compiler  might  already  have  been  assigned  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	7	None	add
41	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  cannot  find  symbol  This  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    This.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
42	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);	  	non-compiled	[CE]  ';'  expected	7	None	add
43	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  	non-compiled	[CE]  ')'  expected	7	None	add
44	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	18	None	replace
45	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	18	None	replace
46	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [CE]  variable  compiler  might  not  have  been  initialized  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	18	None	replace
47	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  true);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  true);	      this(compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	5	None	replace
48	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  name);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  name);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  name);	      this(compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
49	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  null);	      this(compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	5	None	replace
50	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  registry);  [CE]  cannot  find  symbol  registry  [FE]                      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  false,  registry);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  false,  registry);	      this(compiler,    typeSystem,    propertiesToErrorFor,    false);    	non-compiled	[CE]  cannot  find  symbol  registry	5	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	replace
52	[BUG]  [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler  ==  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	replace
53	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToErrorFor);  [CE]  AbstractCompiler  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertiesToErrorFor);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typeSystem);    	non-compiled	[CE]  AbstractCompiler  is  abstract;  cannot  be  instantiated	11	None	replace
54	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  typesToErrorFor);  [CE]  cannot  find  symbol  typesToErrorFor  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  typesToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  typesToErrorFor);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  typesToErrorFor	11	None	replace
55	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertyToErrorFor);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  propertyToErrorFor);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	11	None	replace
56	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  typeSystem;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    compiler;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
57	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  registry;  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  registry;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  registry;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    compiler;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
58	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  null;  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?((  AbstractCompiler)compiler).getCompiler()  :  null;	  this.compiler    =    compiler    instanceof    AbstractCompiler?((    AbstractCompiler)compiler).getCompiler()    :    compiler;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
59	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  tt);  [CE]  cannot  find  symbol  tt  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  tt);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  tt);	      this(compiler,    typeSystem,    null,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  tt	3	None	replace
60	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  name);  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  name);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  name);	      this(compiler,    typeSystem,    null,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  name	3	None	replace
61	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  false);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  false);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  false);	      this(compiler,    typeSystem,    null,    propertiesToErrorFor);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	3	None	replace
62	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  names);  [CE]  cannot  find  symbol  names  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  names);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  names);	      this(compiler,    typeSystem,    null,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  names	3	None	replace
63	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  name,  null);  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  name,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  name,  null);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
64	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  names,  null);  [CE]  cannot  find  symbol  names  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  names,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  names,  null);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  names	4	None	replace
65	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  tt);  [CE]  cannot  find  symbol  tt  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  tt);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  tt);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  tt	4	None	replace
66	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  tt,  null);  [CE]  cannot  find  symbol  tt  [FE]                    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  tt,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  tt,  null);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  tt	4	None	replace
67	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  null);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertyToErrorFor,  null);	      this(compiler,    typeSystem,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	6	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(compiler  ==  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  Preconditions.checkState(compiler  ==  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  ==  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	16	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(compiler  >=  null);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  Preconditions.checkState(compiler  >=  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler  >=  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	16	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkNotNull(compiler);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  Preconditions.checkNotNull(compiler);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkNotNull(compiler);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	16	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkArgument(compiler!=  null);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  Preconditions.checkArgument(compiler!=  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkArgument(compiler!=  null);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	16	None	replace
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	15	2	add
73	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);	  	compilable	  [FE]  ComparisonFailure  	15	2	add
74	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	15	62	add
75	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [FE]  IllegalStateException  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler  ==  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler  ==  null);	  	compilable	  [FE]  IllegalStateException  	15	62	add
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	15	2	add
77	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidationMap  =  LinkedHashMultimap.create();	  	compilable	  [FE]  ComparisonFailure  	15	2	add
78	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [CE]  cannot  find  symbol  preconditions  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  preconditions.checkState(compiler!=  null);	  	non-compiled	[CE]  cannot  find  symbol  preconditions	15	None	add
79	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  validatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  validatingTypes	15	None	add
80	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [CE]  variable  typeSystem  might  already  have  been  assigned  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.typeSystem  =  typeSystem;	  	non-compiled	[CE]  variable  typeSystem  might  already  have  been  assigned	15	None	add
81	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	21	None	add
82	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);	      this(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	1	None	replace
83	[BUG]  [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  ||  compiler!=  null)  {  this.compiler  =  compiler;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	||  compiler!=  null)  {  this.compiler  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
84	[BUG]  [BUGGY]  This.compiler  =  compiler;  [CE]  cannot  find  symbol  This  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  This.compiler  =  compiler;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	This.compiler  =  compiler;	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  This	20	None	replace
85	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(propertiesToErrorFor);  [CE]  cannot  find  symbol  types  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.types  =  Lists.newArrayList(propertiesToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(propertiesToErrorFor);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
86	[BUG]  [BUGGY]  this.types  =  Lists.newArrayList(0);  [CE]  cannot  find  symbol  types  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.types  =  Lists.newArrayList(0);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayList(0);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
87	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  HashMap  <  String,  CheckLevel>();	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
88	[BUG]  [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  null);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  invalidatingTypes,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  invalidatingTypes,  null);	      this(compiler,    typeSystem,    null);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	6	None	replace
89	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  false);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	18	None	replace
90	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(compiler,  0,  this.compiler,  typeSystem,  propertiesToErrorFor,  true);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor,    false);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	18	None	replace
91	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }	  	non-compiled	[CE]  incompatible  types	9	None	add
92	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;	  	non-compiled	[CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)	9	None	add
93	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.	  	non-compiled	[CE]  <identifier>  expected	9	None	add
94	[BUG]  [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	if(compiler!=  null)  {  this.compiler  =  compiler;  }  else  {  System.arraycopy(typeSystem,  0,  this.compiler,  typeSystem,  propertiesToErrorFor);  }	  if(compiler!=    null)    {    this.compiler    =    compiler;    }    else    {    System.arraycopy(compiler,    0,    this.compiler,    typeSystem,    propertiesToErrorFor);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	17	None	replace
95	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes,  null);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	4	None	replace
96	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null);  [CE]  cannot  find  symbol  rootTypes  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  rootTypes,  null);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  rootTypes	4	None	replace
97	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  cannot  find  symbol  compiler  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    ((  AbstractCompiler)compiler).compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  	non-compiled	[CE]  cannot  find  symbol  compiler	7	None	add
98	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    AbstractCompiler  compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;	  	non-compiled	[CE]  variable  compiler  is  already  defined  in  constructor  DisambiguateProperties(AbstractCompiler,TypeSystem<T>,Map<String,CheckLevel>)	7	None	add
99	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  invalidatingTypes);	      this(compiler,    typeSystem,    null,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	3	None	replace
100	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  invalidatingTypes);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	2	None	replace
101	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip);  [CE]  cannot  find  symbol  typesToSkip  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  typesToSkip);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  typesToSkip	2	None	replace
102	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  invalidatingTypes);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  new  AbstractCompiler(compiler,  typeSystem,  invalidatingTypes);	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    new    AbstractCompiler(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	11	None	replace
103	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [CE]  cannot  find  symbol  invalidatingTypes  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.invalidatingTypes  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	15	None	add
104	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertyToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertyToErrorFor);	      super(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	14	None	replace
105	[BUG]  [BUGGY]  super(compiler,  typeSystem,  invalidatingTypes);  [CE]  cannot  find  symbol  invalidatingTypes  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  invalidatingTypes);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  invalidatingTypes);	      super(compiler,    typeSystem);    	non-compiled	[CE]  cannot  find  symbol  invalidatingTypes	14	None	replace
106	[BUG]  [BUGGY]  this(compiler,  typeSystem);  [CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem);	      super(compiler);    	non-compiled	[CE]  constructor  DisambiguateProperties  in  class  DisambiguateProperties<T>  cannot  be  applied  to  given  types;	13	None	replace
107	[BUG]  [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  super(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	super(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip);	      super(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	2	None	replace
108	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler;  if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    compiler;    if(compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  compiler);	  	non-compiled	[CE]  incompatible  types	7	None	add
109	[BUG]  [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem);  [CE]  cannot  find  symbol  types  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.types  =  Lists.newArrayListWithCapacity(typeSystem);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.types  =  Lists.newArrayListWithCapacity(typeSystem);	      this.types    =    Lists.newArrayList();    	non-compiled	[CE]  cannot  find  symbol  types	24	None	replace
110	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor);  [CE]  cannot  find  symbol  propertyToErrorFor  [FE]                  ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertyToErrorFor);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertyToErrorFor);	      this(compiler,    typeSystem,    null);    	non-compiled	[CE]  cannot  find  symbol  propertyToErrorFor	6	None	replace
111	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  names);  [CE]  cannot  find  symbol  names  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  names);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  names);	      this(compiler,    typeSystem,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  names	1	None	replace
112	[BUG]  [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  [CE]  cannot  find  symbol  validatingTypes  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]      Preconditions.checkState(compiler!=  null);  Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	        Preconditions.checkState(compiler!=    null);    Preconditions.checkState(compiler!=  null);  this.validatingTypes  =  Collections.emptyList();	  	non-compiled	[CE]  cannot  find  symbol  validatingTypes	15	None	add
113	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip,  null);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]              ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip,  null);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  propertiesToSkip,  null);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	4	None	replace
114	[BUG]  [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]                ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToSkip);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  propertiesToErrorFor,  null,  propertiesToSkip);	      this(compiler,    typeSystem,    propertiesToErrorFor,    null);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	4	None	replace
115	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  Preconditions.checkState(compiler!=  typeSystem);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  typeSystem);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	16	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem);  [CE]  variable  compiler  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  Preconditions.checkState(compiler!=  null,  typeSystem);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	Preconditions.checkState(compiler!=  null,  typeSystem);	      Preconditions.checkState(compiler!=    null);    	non-compiled	[CE]  variable  compiler  might  not  have  been  initialized	16	None	replace
117	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  nu	  	non-compiled	[CE]  ';'  expected	9	None	add
118	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]      ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	9	None	add
119	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [CE]  variable  compiler  might  already  have  been  assigned  [FE]        ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }	  	non-compiled	[CE]  variable  compiler  might  already  have  been  assigned	9	None	add
120	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [CE]  :  expected  [FE]          ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    if(compiler  instanceof  AbstractCompiler)  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compiler  :  null;  }  else  {  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)compil	  	non-compiled	[CE]  :  expected	9	None	add
121	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	add	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	compilable	  [FE]  ClassCastException  	10	62	replace
122	[BUG]  [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [FE]  ClassCastException  [FE]    ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;  [BUGGY]    this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this.compiler  =  compiler  instanceof  AbstractCompiler?(AbstractCompiler)typeSystem  :  null;	  this.compiler    =    compiler    instanceof    AbstractCompiler?(AbstractCompiler)compiler    :    null;    	compilable	  [FE]  ClassCastException  	10	62	replace
123	[BUG]  [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  propertiesToSkip);  [CE]  cannot  find  symbol  propertiesToSkip  [FE]            ComparisonFailure    [CONTEXT]    private  DisambiguateProperties(AbstractCompiler  compiler,  TypeSystem<T>  typeSystem,  Map<String,  CheckLevel>  propertiesToErrorFor)  {    [BUGGY]  this(compiler,  typeSystem,  null,  propertiesToErrorFor,  propertiesToSkip);  [BUGGY]    this.compiler  =  compiler;  this.typeSystem  =  typeSystem;  this.propertiesToErrorFor  =  propertiesToErrorFor;  if  (!this.propertiesToErrorFor.isEmpty())  {  this.invalidationMap  =  LinkedHashMultimap.create();  }  else  {  this.invalidationMap  =  null;  }  }  [CLASS]  DisambiguateProperties  Warnings  Property  AbstractScopingCallback  FindExternProperties  FindRenameableProperties  JSTypeSystem  ConcreteTypeSystem  [METHOD]  <init>  [RETURN_TYPE]  Map)  AbstractCompiler  compiler  TypeSystem<T>  typeSystem  CheckLevel>  propertiesToErrorFor  [VARIABLES]  TypeSystem  typeSystem  Set  invalidatingTypes  renameNodes  typesToSkip  UnionFind  types  String  name  Logger  logger  int  MAX_INVALDIATION_WARNINGS_PER_PROPERTY  nextUniqueId  TightenTypes  tt  Stack  scopes  Multimap  invalidationMap  AbstractCompiler  compiler  JSTypeRegistry  registry  boolean  skipRenaming  DiagnosticType  INVALIDATION  INVALIDATION_ON_TYPE  CodingConvention  codingConvention  JSTypeNative[]  nativeTypes  Map  properties  propertiesToErrorFor  rootTypes  	projects/Closure118/src/com/google/javascript/jscomp/DisambiguateProperties.java	0.1796053020267749	304	304	2	replace	this(compiler,  typeSystem,  null,  propertiesToErrorFor,  propertiesToSkip);	      this(compiler,    typeSystem,    null,    propertiesToErrorFor);    	non-compiled	[CE]  cannot  find  symbol  propertiesToSkip	3	None	replace
