bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  clazz.handleMissingValue(str);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.handleMissingValue(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.handleMissingValue(str);	  aughtExceptionHandler.handleMissingValue(clazz);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
2	[BUG]  [BUGGY]  typeHandler.handleMissingValue(clazz);  [CE]  cannot  find  symbol  typeHandler  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  typeHandler.handleMissingValue(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	typeHandler.handleMissingValue(clazz);	  aughtExceptionHandler.handleMissingValue(clazz);    	non-compiled	[CE]  cannot  find  symbol  typeHandler	1	None	replace
3	[BUG]  [BUGGY]  mandExceptionHandler.handleMissingValue(clazz);  [CE]  cannot  find  symbol  mandExceptionHandler  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  mandExceptionHandler.handleMissingValue(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	mandExceptionHandler.handleMissingValue(clazz);	  aughtExceptionHandler.handleMissingValue(clazz);    	non-compiled	[CE]  cannot  find  symbol  mandExceptionHandler	1	None	replace
4	[BUG]  [BUGGY]  handleMissingValue(clazz);  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  handleMissingValue(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	handleMissingValue(clazz);	  aughtExceptionHandler.handleMissingValue(clazz);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
5	[BUG]  [BUGGY]  return(T)createValue(str,  clazz,  0);  [CE]  no  suitable  method  found  for  createValue(String,Class<T>,int)  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz,  0);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  clazz,  0);	  return(T)createValue(str,    clazz);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String,Class<T>,int)	50	None	replace
6	[BUG]  [BUGGY]  return(T)createValue(str,  clazz,  PatternOptionBuilder.URL_VALUE);  [CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<URL>)  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz,  PatternOptionBuilder.URL_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  clazz,  PatternOptionBuilder.URL_VALUE);	  return(T)createValue(str,    clazz);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<URL>)	50	None	replace
7	[BUG]  [BUGGY]  return(T)createValue(str,  clazz,  null);  [CE]  no  suitable  method  found  for  createValue(String,Class<T>,<null>)  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz,  null);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  clazz,  null);	  return(T)createValue(str,    clazz);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String,Class<T>,<null>)	50	None	replace
8	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    does    not    support    value    '       "    +    str    +       "'       ");    throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'       ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	59	1	replace
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    does    not    support    value    '       "    +    str    +       "'       ");    throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'       ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	59	1	replace
10	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  exception);  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  exception);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  exception);	  Throwables.throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
11	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");  [CE]  <identifier>  expected  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");	  Throwables.throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
12	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");	  Throwables.throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
13	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  throw  new  NullPointerException( "   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  throw  new  NullPointerException( "   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    throw  new  NullPointerException( "   ");	  	non-compiled	[CE]  unreachable  statement	72	None	add
14	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  if(StringUtils.isEmpty(str))  {  throw  new  NullPointerException( " ");  }  [CE]  cannot  find  symbol  StringUtils  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  if(StringUtils.isEmpty(str))  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    if(StringUtils.isEmpty(str))  {  throw  new  NullPointerException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  StringUtils	72	None	add
15	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  NullPointerException( "   ");  }  [CE]  unreachable  statement  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  NullPointerException( "   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  NullPointerException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	72	None	add
16	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  if(!StringUtils.isEmpty(str))  {  throw  new  NullPointerException( " ");  }  [CE]  cannot  find  symbol  StringUtils  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  if(!StringUtils.isEmpty(str))  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    if(!StringUtils.isEmpty(str))  {  throw  new  NullPointerException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  StringUtils	72	None	add
17	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( "   ");  }  [CE]  unreachable  statement  [FE]            java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( "   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	72	None	add
18	[BUG]  [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str,  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler(str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str.substring(0,  str.length()  -  1));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str,  str.substring(0,  str.length()));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
21	[BUG]  [BUGGY]  aughtExceptionHandler(str,  clazz.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str,  clazz.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str,  clazz.substring(0,  str.length()));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  clazz);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  clazz);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  null);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  null);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  null);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  typeHandler);  [CE]  cannot  find  symbol  typeHandler  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  typeHandler);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  typeHandler);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  typeHandler	87	None	replace
25	[BUG]  [BUGGY]  Class  <?>  str  =  PatternOptionBuilder.URL_VALUE.getSimpleName(clazz);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  PatternOptionBuilder.URL_VALUE.getSimpleName(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  PatternOptionBuilder.URL_VALUE.getSimpleName(clazz);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
26	[BUG]  [BUGGY]  Class  <?>  str  =  pattern.getSimpleName(PatternOptionBuilder.URL_VALUE);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  pattern.getSimpleName(PatternOptionBuilder.URL_VALUE);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  pattern.getSimpleName(PatternOptionBuilder.URL_VALUE);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
27	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(String.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(String.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(String.class);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
28	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  String.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  String.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  String.class);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
29	[BUG]  [BUGGY]  clazz.handleMissingValue(str,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.handleMissingValue(str,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.handleMissingValue(str,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
30	[BUG]  [BUGGY]  CharTypes.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  CharTypes  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  CharTypes.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	CharTypes.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  CharTypes	14	None	replace
31	[BUG]  [BUGGY]  parser.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  parser  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parser.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parser.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  parser	14	None	replace
32	[BUG]  [BUGGY]  parseMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parseMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parseMissingValue(clazz,  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
33	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + ",/.* ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName()  + ",/.* ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + ",/.* ";	  String    str    =    clazz.getSimpleName()    +   "/.*   ";    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	18	None	replace
34	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + ".* ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName()  + ".* ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + ".* ";	  String    str    =    clazz.getSimpleName()    +   "/.*   ";    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	18	None	replace
35	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + "/. ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName()  + "/. ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + "/. ";	  String    str    =    clazz.getSimpleName()    +   "/.*   ";    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	18	None	replace
36	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.substring(0,  clazz.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  clazz.length());	  String    str    =    str.substring(0,    clazz.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	83	None	replace
37	[BUG]  [BUGGY]  String  str  =  this.str.substring(0,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  this.str.substring(0,  clazz.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  this.str.substring(0,  clazz.length());	  String    str    =    str.substring(0,    clazz.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	83	None	replace
38	[BUG]  [BUGGY]  String  str  =  string.substring(0,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  string.substring(0,  clazz.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  string.substring(0,  clazz.length());	  String    str    =    str.substring(0,    clazz.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	83	None	replace
39	[BUG]  [BUGGY]  String  str  =  getStringValue().substring(0,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  getStringValue().substring(0,  clazz.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  getStringValue().substring(0,  clazz.length());	  String    str    =    str.substring(0,    clazz.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	83	None	replace
40	[BUG]  [BUGGY]  clazz.handleMissingException( " ");  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.handleMissingException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
41	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName(String.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName(String.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName(String.class);	  String    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	78	None	replace
42	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName(str,  null);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName(str,  null);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName(str,  null);	  String    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	78	None	replace
43	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName(str,  true);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName(str,  true);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName(str,  true);	  String    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	78	None	replace
44	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  2,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  2,  str.length());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  2,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	43	None	replace
45	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toString();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.toString();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.toString();	  return(str    ==    null)?    null    :    str;    	non-compiled	[CE]  incompatible  types	57	None	replace
46	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.type;  [CE]  cannot  find  symbol  type  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.type;  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.type;	  return(str    ==    null)?    null    :    str;    	non-compiled	[CE]  cannot  find  symbol  type	57	None	replace
47	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.newInstance();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.newInstance();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.newInstance();	  return(str    ==    null)?    null    :    str;    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
48	[BUG]  [BUGGY]  clazz.handleMissingName(str,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.handleMissingName(str,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.handleMissingName(str,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
49	[BUG]  [BUGGY]  CharTypes.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  CharTypes  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  CharTypes.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	CharTypes.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  CharTypes	16	None	replace
50	[BUG]  [BUGGY]  clazz.handleMissingName(str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.handleMissingName(str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.handleMissingName(str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
51	[BUG]  [BUGGY]  parser.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  parser  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parser.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parser.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  parser	16	None	replace
52	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.longValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.longValue();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.longValue();	  return(str    ==    null)?    null    :    str.intValue();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
53	[BUG]  [BUGGY]  return(str!=  null)?  null  :  str.intValue();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str!=  null)?  null  :  str.intValue();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str!=  null)?  null  :  str.intValue();	  return(str    ==    null)?    null    :    str.intValue();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
54	[BUG]  [BUGGY]  return(String)createValue(str),  clazz,  PatternOptionBuilder.URL_VALUE);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str),  clazz,  PatternOptionBuilder.URL_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str),  clazz,  PatternOptionBuilder.URL_VALUE);	  return(String)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	39	None	replace
55	[BUG]  [BUGGY]  return(String)createValue(str),  clazz,  ';');  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str),  clazz,  ';');  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str),  clazz,  ';');	  return(String)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	39	None	replace
56	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  missing  return  statement	71	None	replace
57	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  missing  return  statement	71	None	replace
58	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  missing  return  statement	71	None	replace
59	[BUG]  [BUGGY]  return(String)createValue(str,  clazz,  PatternOptionBuilder.URL_VALUE);  [CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<URL>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str,  clazz,  PatternOptionBuilder.URL_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz,  PatternOptionBuilder.URL_VALUE);	  return(String)createValue(str,    clazz);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<URL>)	37	None	replace
60	[BUG]  [BUGGY]  return(String)createValue(str,  clazz,  Object.class);  [CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<Object>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str,  clazz,  Object.class);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz,  Object.class);	  return(String)createValue(str,    clazz);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<Object>)	37	None	replace
61	[BUG]  [BUGGY]  return(String)createValue(str,  clazz,  typeHandler);  [CE]  cannot  find  symbol  typeHandler  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str,  clazz,  typeHandler);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz,  typeHandler);	  return(String)createValue(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  typeHandler	37	None	replace
62	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  clazz);  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ",    clazz);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
63	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz);  [CE]  unclosed  string  literal  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ",    clazz);    	non-compiled	[CE]  unclosed  string  literal	35	None	replace
64	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz);  [CE]  <identifier>  expected  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ",    clazz);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
65	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + ",_ "  +  clazz.getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName()  + ",_ "  +  clazz.getName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + ",_ "  +  clazz.getName();	  String    str    =    clazz.getSimpleName()    +   "_   "    +    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	82	None	replace
66	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + "._ "  +  clazz.getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName()  + "._ "  +  clazz.getName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + "._ "  +  clazz.getName();	  String    str    =    clazz.getSimpleName()    +   "_   "    +    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	82	None	replace
67	[BUG]  [BUGGY]  String  str  =  clazz.getName()  + "_ "  +  clazz.getSimpleName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getName()  + "_ "  +  clazz.getSimpleName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getName()  + "_ "  +  clazz.getSimpleName();	  String    str    =    clazz.getSimpleName()    +   "_   "    +    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	82	None	replace
68	[BUG]  [BUGGY]  return(Value)createValue(str,  clazz);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(Value)createValue(str,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(Value)createValue(str,  clazz);	  return(Value)createValue(str);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
69	[BUG]  [BUGGY]  return(Value)createValue(clazz);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(Value)createValue(clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(Value)createValue(clazz);	  return(Value)createValue(str);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
70	[BUG]  [BUGGY]  return(Value)createValue(String.class,  str);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(Value)createValue(String.class,  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(Value)createValue(String.class,  str);	  return(Value)createValue(str);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
71	[BUG]  [BUGGY]  return(String)createValue(clazz,  str,  Object.class);  [CE]  no  suitable  method  found  for  createValue(Class<T>,String,Class<Object>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(clazz,  str,  Object.class);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(clazz,  str,  Object.class);	  return(String)createValue(clazz,    str);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(Class<T>,String,Class<Object>)	38	None	replace
72	[BUG]  [BUGGY]  clazz.handleMissingClass(str);  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.handleMissingClass(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.handleMissingClass(str);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
73	[BUG]  [BUGGY]  mandExceptionHandler.handleMissingClass(clazz);  [CE]  cannot  find  symbol  mandExceptionHandler  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  mandExceptionHandler.handleMissingClass(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	mandExceptionHandler.handleMissingClass(clazz);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol  mandExceptionHandler	3	None	replace
74	[BUG]  [BUGGY]  typeHandler.handleMissingClass(clazz);  [CE]  cannot  find  symbol  typeHandler  [FE]                            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  typeHandler.handleMissingClass(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	typeHandler.handleMissingClass(clazz);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol  typeHandler	3	None	replace
75	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	27	None	replace
76	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	27	None	replace
77	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length()  +  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	27	None	replace
78	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str.valueOf(clazz));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)createValue(str,  str.valueOf(clazz));	  return(T)createValue(String.valueOf(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	1	replace
79	[BUG]  [BUGGY]  return(T)createValue(str,  str.valueOf(clazz));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str.valueOf(clazz));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  str.valueOf(clazz));	  return(T)createValue(String.valueOf(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	1	replace
80	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(String.valueOf(str),  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)createValue(String.valueOf(str),  clazz);	  return(T)createValue(String.valueOf(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	1	replace
81	[BUG]  [BUGGY]  return(T)createValue(String.valueOf(str),  clazz);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(String.valueOf(str),  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(String.valueOf(str),  clazz);	  return(T)createValue(String.valueOf(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	1	replace
82	[BUG]  [BUGGY]  return(T)createValue(str.toString());  [CE]  no  suitable  method  found  for  createValue(String)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str.toString());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str.toString());	  return(T)createValue(String.valueOf(str));    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String)	51	None	replace
83	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str.valueOf(String.class));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)createValue(str,  str.valueOf(String.class));	  return(T)createValue(String.valueOf(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	1	replace
84	[BUG]  [BUGGY]  return(T)createValue(str,  str.valueOf(String.class));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str.valueOf(String.class));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  str.valueOf(String.class));	  return(T)createValue(String.valueOf(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	51	1	replace
85	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'.   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'.   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'.   ");	  	non-compiled	[CE]  unreachable  statement	33	None	add
86	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  Throwables.MissingException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  [CE]  cannot  find  symbol  Throwables  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  Throwables.MissingException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    Throwables.MissingException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");	  	non-compiled	[CE]  cannot  find  symbol  Throwables	33	None	add
87	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  str.length()));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  str.length()));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	36	None	replace
88	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  substring(int,int,int,int,int)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MIN_VALUE,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MIN_VALUE,  Integer.MAX_VALUE);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int,int)	44	None	replace
89	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Character.toLowerCase(Locale.ENGLISH));  [CE]  cannot  find  symbol  Locale  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Character.toLowerCase(Locale.ENGLISH));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Character.toLowerCase(Locale.ENGLISH));	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length(),    Integer.MAX_VALUE);    	non-compiled	[CE]  cannot  find  symbol  Locale	44	None	replace
90	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  substring(int,int,int,int,int)  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Integer.MIN_VALUE);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int,int)	44	None	replace
91	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  substring(int,int,int,int,int)  [FE]                            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE,  Integer.MAX_VALUE);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int,int)	44	None	replace
92	[BUG]  [BUGGY]  String  str  =  createURL(str),  str.substring(0,  str.length()  -  1));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  createURL(str),  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  createURL(str),  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ';'  expected	86	None	replace
93	[BUG]  [BUGGY]  String  str  =  createURL(str).substring(0,  str.length()  -  1));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  createURL(str).substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  createURL(str).substring(0,  str.length()  -  1));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ';'  expected	86	None	replace
94	[BUG]  [BUGGY]  createExceptionHandler(str,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  createExceptionHandler(str,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	createExceptionHandler(str,  str.substring(0,  str.length()));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
95	[BUG]  [BUGGY]  return(T)createValue(str),  clazz,  str);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str),  clazz,  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str),  clazz,  str);	  return(T)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	74	None	replace
96	[BUG]  [BUGGY]  return(T)createValue(str),  clazz,  PatternOptionBuilder.URL_VALUE);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str),  clazz,  PatternOptionBuilder.URL_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str),  clazz,  PatternOptionBuilder.URL_VALUE);	  return(T)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	74	None	replace
97	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  (T)createValue(str,  clazz);  [CE]  not  a  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  (T)createValue(str,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    (T)createValue(str,  clazz);	  	non-compiled	[CE]  not  a  statement	49	None	add
98	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [CE]  'else'  without  'if'  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)createValue(str,  clazz);  }	  	non-compiled	[CE]  'else'  without  'if'	49	None	add
99	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  return(T)createValue(str,  clazz);  [CE]  unreachable  statement  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  return(T)createValue(str,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    return(T)createValue(str,  clazz);	  	non-compiled	[CE]  unreachable  statement	49	None	add
100	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)createValue(str,  clazz);  }  [CE]  'else'  without  'if'  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)createValue(str,  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)createValue(str,  clazz);  }	  	non-compiled	[CE]  'else'  without  'if'	49	None	add
101	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);	  	non-compiled	[CE]  unreachable  statement	60	None	add
102	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  Throwables.MissingException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);  [CE]  cannot  find  symbol  Throwables  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  Throwables.MissingException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    Throwables.MissingException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);	  	non-compiled	[CE]  cannot  find  symbol  Throwables	60	None	add
103	[BUG]  [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()  -  1)));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()  -  1)));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str,  str.substring(0,  str.length()  -  1)));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  ';'  expected	66	None	replace
104	[BUG]  [BUGGY]  aughtExceptionHandler(str.substring(0,  str.length()  -  1)));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str.substring(0,  str.length()  -  1)));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str.substring(0,  str.length()  -  1)));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  ';'  expected	66	None	replace
105	[BUG]  [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length())));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length())));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str,  str.substring(0,  str.length())));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  ';'  expected	66	None	replace
106	[BUG]  [BUGGY]  return(T)createValue(str.class,  String.class);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str.class,  String.class);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str.class,  String.class);	  return(T)createValue(String.class,    str);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
107	[BUG]  [BUGGY]  return(T)createValue(String.class,  str,  clazz);  [CE]  no  suitable  method  found  for  createValue(Class<String>,String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(String.class,  str,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(String.class,  str,  clazz);	  return(T)createValue(String.class,    str);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(Class<String>,String,Class<T>)	75	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  String.class);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)createValue(str,  String.class);	  return(T)createValue(String.class,    str);    	compilable	  [FE]  AssertionError  	75	1	replace
109	[BUG]  [BUGGY]  return(T)createValue(str,  String.class);  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  String.class);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  String.class);	  return(T)createValue(String.class,    str);    	compilable	  [FE]  AssertionError  	75	1	replace
110	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawValue();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawValue();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawValue();	  Class    <?>    str    =    clazz.getRawKey();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	79	None	replace
111	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawKey(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawKey(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawKey(str);	  Class    <?>    str    =    clazz.getRawKey();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	79	None	replace
112	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	34	1	replace
113	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'. ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	34	1	replace
114	[BUG]  [BUGGY]  Throwable  throwable  =  new  Throwable( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  missing  return  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwable  throwable  =  new  Throwable( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwable  throwable  =  new  Throwable( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    	non-compiled	[CE]  missing  return  statement	29	None	replace
115	[BUG]  [BUGGY]  return(str!=  null)?  null  :  str.toUpperCase();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str!=  null)?  null  :  str.toUpperCase();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str!=  null)?  null  :  str.toUpperCase();	  return(str    ==    null)?    null    :    str.toUpperCase();    	non-compiled	[CE]  incompatible  types	47	None	replace
116	[BUG]  [BUGGY]  return(T)createValue(String,  clazz);  [CE]  cannot  find  symbol  String  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(String,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(String,  clazz);	  return(T)createValue(clazz,    str);    	non-compiled	[CE]  cannot  find  symbol  String	54	None	replace
117	[BUG]  [BUGGY]  return(T)createValue(String.class,  clazz);  [CE]  no  suitable  method  found  for  createValue(Class<String>,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(String.class,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(String.class,  clazz);	  return(T)createValue(clazz,    str);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(Class<String>,Class<T>)	54	None	replace
118	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(0,  0);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(0,  0);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawParameterType(0,  0);	  Class    <    T>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	63	None	replace
119	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType( "URL_VALUE ");  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType( "URL_VALUE ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawParameterType( "URL_VALUE ");	  Class    <    T>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	63	None	replace
120	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(1);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(1);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawParameterType(1);	  Class    <    T>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	63	None	replace
121	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");  [CE]  not  a  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    does    not    support    value    '       "    +    str    +       "'       ");    Throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +       "'   ");    	non-compiled	[CE]  not  a  statement	96	None	replace
122	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",' ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    does    not    support    value    '       "    +    str    +       "'       ");    Throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +       "'   ");    	non-compiled	[CE]  not  a  statement	96	None	replace
123	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	10	None	replace
124	[BUG]  [BUGGY]  Throwables.wrap(new  IllegalArgumentException( " "));  [CE]  cannot  find  symbol  Throwables  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.wrap(new  IllegalArgumentException( " "));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.wrap(new  IllegalArgumentException( " "));	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	10	None	replace
125	[BUG]  [BUGGY]  String  str  =  createURL(str),  str.substring(0,  str.length()));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  createURL(str),  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  createURL(str),  str.substring(0,  str.length()));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	89	None	replace
126	[BUG]  [BUGGY]  String  str  =  createURL(str).substring(0,  str.length()));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  createURL(str).substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  createURL(str).substring(0,  str.length()));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	89	None	replace
127	[BUG]  [BUGGY]  String  str  =  createURL(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  createURL(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  createURL(str);	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()));    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	89	None	replace
128	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    Throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    	non-compiled	[CE]  not  a  statement	30	None	replace
129	[BUG]  [BUGGY]  Throwables.wrap( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  cannot  find  symbol  Throwables  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.wrap( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.wrap( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    Throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	30	None	replace
130	[BUG]  [BUGGY]  return(T)super.createValue(str);  [CE]  non-static  variable  super  cannot  be  referenced  from  a  static  context  [FE]    AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)super.createValue(str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)super.createValue(str);	  return(T)null;    	non-compiled	[CE]  non-static  variable  super  cannot  be  referenced  from  a  static  context	65	None	replace
131	[BUG]  [BUGGY]  return(T)this;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)this;  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)this;	  return(T)null;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	65	None	replace
132	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [CE]  missing  return  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");	  Throwable    t    =    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	68	None	replace
133	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [CE]  missing  return  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");	  Throwable    t    =    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	68	None	replace
134	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");  [CE]  missing  return  statement  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");	  Throwable    t    =    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	68	None	replace
135	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(String.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(String.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass(String.class);	  Class    <    T>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	95	None	replace
136	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(type);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(type);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass(type);	  Class    <    T>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	95	None	replace
137	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  null);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  null);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass(str,  null);	  Class    <    T>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	95	None	replace
138	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getQualifiedName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getQualifiedName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getQualifiedName();	  Class    <?>    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	21	None	replace
139	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");	  	non-compiled	[CE]  unreachable  statement	25	None	add
140	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.. ");  [CE]  unreachable  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.. ");	  	non-compiled	[CE]  unreachable  statement	25	None	add
141	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  Throwables.MissingException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  [CE]  cannot  find  symbol  Throwables  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  Throwables.MissingException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    Throwables.MissingException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");	  	non-compiled	[CE]  cannot  find  symbol  Throwables	25	None	add
142	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    shouldn't    be    null.   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");	  	non-compiled	[CE]  unreachable  statement	92	None	add
143	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.. ");  [CE]  unreachable  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    shouldn't    be    null.   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.. ");	  	non-compiled	[CE]  unreachable  statement	92	None	add
144	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(0,  0);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(0,  0);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawParameterType(0,  0);	  Class    <?>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	80	None	replace
145	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(1);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(1);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawParameterType(1);	  Class    <?>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	80	None	replace
146	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType( "URL_VALUE ");  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType( "URL_VALUE ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawParameterType( "URL_VALUE ");	  Class    <?>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	80	None	replace
147	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawValue();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawValue();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawValue();	  Class    <    T>    str    =    clazz.getRawKey();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	62	None	replace
148	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawKey(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawKey(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawKey(str);	  Class    <    T>    str    =    clazz.getRawKey();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	62	None	replace
149	[BUG]  [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    clazz);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
150	[BUG]  [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz,  str);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz,  str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz,  str);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    clazz);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
151	[BUG]  [BUGGY]  aughtExceptionHandler(str.substring(0,  str.length())));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str.substring(0,  str.length())));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str.substring(0,  str.length())));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()    -    1)));    	non-compiled	[CE]  ';'  expected	67	None	replace
152	[BUG]  [BUGGY]  String  str  =  clazz.getQualifiedName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getQualifiedName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getQualifiedName();	  String    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	17	None	replace
153	[BUG]  [BUGGY]  String  str  =  clazz.getName()  + ": "+String.valueOf(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getName()  + ": "+String.valueOf(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getName()  + ": "+String.valueOf(str);	  String    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	17	None	replace
154	[BUG]  [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");  [CE]  missing  return  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");	  new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	69	None	replace
155	[BUG]  [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [CE]  missing  return  statement  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");	  new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	69	None	replace
156	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(String.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(String.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(String.class);	  Class    <    T>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	46	None	replace
157	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  null);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  null);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(str,  null);	  Class    <    T>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	46	None	replace
158	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(name);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(name);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(name);	  Class    <    T>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	46	None	replace
159	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  1);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  1);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  clazz.length()  -  1);	  String    str    =    clazz.substring(0,    str.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
160	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  2);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  2);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  clazz.length()  -  2);	  String    str    =    clazz.substring(0,    str.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
161	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  4);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  4);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  clazz.length()  -  4);	  String    str    =    clazz.substring(0,    str.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
162	[BUG]  [BUGGY]  return(T)null;  return(T)null;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  return(T)null;  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    return(T)null;	  	non-compiled	[CE]  unreachable  statement	64	None	add
163	[BUG]  [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)null;  }  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)null;  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)null;  }	  	non-compiled	[CE]  'else'  without  'if'	64	None	add
164	[BUG]  [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  str)  {  return(T)null;  }  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  str)  {  return(T)null;  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    else  if(PatternOptionBuilder.URL_VALUE  ==  str)  {  return(T)null;  }	  	non-compiled	[CE]  'else'  without  'if'	64	None	add
165	[BUG]  [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)null;  }  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)null;  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)null;  }	  	non-compiled	[CE]  'else'  without  'if'	64	None	add
166	[BUG]  [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  String  str)  {  return(T)null;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  String  str)  {  return(T)null;  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    else  if(PatternOptionBuilder.URL_VALUE  ==  String  str)  {  return(T)null;  }	  	non-compiled	[CE]  'else'  without  'if'	64	None	add
167	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( " ");  }  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( " ");  }	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  missing  return  statement	73	None	replace
168	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  NullPointerException( " ");  }  [CE]  missing  return  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  NullPointerException( " ");  }	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  missing  return  statement	73	None	replace
169	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + ",/.html ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName()  + ",/.html ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + ",/.html ";	  String    str    =    clazz.getSimpleName()    +   "/.html   ";    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	19	None	replace
170	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + ".html ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName()  + ".html ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + ".html ";	  String    str    =    clazz.getSimpleName()    +   "/.html   ";    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	19	None	replace
171	[BUG]  [BUGGY]  String  str  =  clazz.getName()  + "/.html ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getName()  + "/.html ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getName()  + "/.html ";	  String    str    =    clazz.getSimpleName()    +   "/.html   ";    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	19	None	replace
172	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(name);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(name);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(name);	  Class    <?>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	22	None	replace
173	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  null);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  null);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(str,  null);	  Class    <?>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	22	None	replace
174	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  unreachable  statement	70	None	add
175	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [CE]  unreachable  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalStateException(   "   ");    if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	70	None	add
176	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalStateException( "   ");  }  [CE]  unreachable  statement  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalStateException(   "   ");    if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	70	None	add
177	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalStateException( "   ");  }  [CE]  unreachable  statement  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalStateException(   "   ");    if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	70	None	add
178	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  [Delete]    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	85	None	replace
179	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length(),  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length(),  str.length());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length(),  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    +    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	42	None	replace
180	[BUG]  [BUGGY]  return(str!=  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str!=  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str!=  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    +    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	42	None	replace
181	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  *  1,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  *  1,  str.length());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  *  1,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    +    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	42	None	replace
182	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);  [CE]  <identifier>  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
183	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'  for  path: "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'  for  path: "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	61	1	replace
184	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'  for  path: "  +  clazz);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'  for  path: "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ",'  for  path: "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	61	1	replace
185	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz,  exception);  [CE]  cannot  find  symbol  exception  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz,  exception);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz,  exception);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    	non-compiled	[CE]  cannot  find  symbol  exception	61	None	replace
186	[BUG]  [BUGGY]  new  IllegalArgumentException( " ");  [CE]  missing  return  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  missing  return  statement	84	None	replace
187	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(str));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( " ".equals(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( " ".equals(str));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	84	None	replace
188	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equalsIgnoreCase(str));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( " ".equalsIgnoreCase(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( " ".equalsIgnoreCase(str));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	84	None	replace
189	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  null);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)createValue(str,  null);	  return(T)createValue(str,    str);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	53	1	replace
190	[BUG]  [BUGGY]  return(T)createValue(str,  null);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  null);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  null);	  return(T)createValue(str,    str);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	53	1	replace
191	[BUG]  [BUGGY]  return(T)createStringValue(str,  clazz);  [CE]  cannot  find  symbol  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createStringValue(str,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createStringValue(str,  clazz);	  return(T)createValue(str,    str);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
192	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [CE]  <identifier>  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
193	[BUG]  [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [CE]  missing  return  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	26	None	replace
194	[BUG]  [BUGGY]  return(T)createValue(str,  str);  (T)createValue(str,  str);  [CE]  not  a  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  (T)createValue(str,  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    (T)createValue(str,  str);	  	non-compiled	[CE]  not  a  statement	52	None	add
195	[BUG]  [BUGGY]  return(T)createValue(str,  str);  return(T)createValue(str,  str);  [CE]  unreachable  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  return(T)createValue(str,  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    return(T)createValue(str,  str);	  	non-compiled	[CE]  unreachable  statement	52	None	add
196	[BUG]  [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)createValue(str,  str);  }  [CE]  'else'  without  'if'  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  'else'  without  'if'	52	None	add
197	[BUG]  [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)createValue(str,  str);  }  [CE]  'else'  without  'if'  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    else  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  'else'  without  'if'	52	None	add
198	[BUG]  [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [CE]  cannot  find  symbol  Throwables  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.warning( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");	  Throwables.warning(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	24	None	replace
199	[BUG]  [BUGGY]  Throwables.warning( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [CE]  cannot  find  symbol  Throwables  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.warning( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.warning( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");	  Throwables.warning(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	24	None	replace
200	[BUG]  [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null ".);  [CE]  <identifier>  expected  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null ".);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null ".);	  Throwables.warning(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
201	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getSimpleName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getSimpleName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass().getSimpleName();	  Class    <    T>    str    =    clazz.getRawClass().getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	41	None	replace
202	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getQualifiedName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getQualifiedName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass().getQualifiedName();	  Class    <    T>    str    =    clazz.getRawClass().getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	41	None	replace
203	[BUG]  [BUGGY]  Class  <  T>  str  =  PatternOptionBuilder.URL_VALUE.getSimpleName(clazz);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  PatternOptionBuilder.URL_VALUE.getSimpleName(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  PatternOptionBuilder.URL_VALUE.getSimpleName(clazz);	  Class    <    T>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	81	None	replace
204	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  String.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  String.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  String.class);	  Class    <    T>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	81	None	replace
205	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [CE]  <identifier>  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    shouldn't    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	93	None	replace
206	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(String.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(String.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(String.class);	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
207	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str.toString());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str.toString());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(str.toString());	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
208	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(type);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(type);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(type);	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
209	[BUG]  [BUGGY]  clazz.handleException( " ");  [CE]  cannot  find  symbol  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.handleException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.handleException( " ");	  aughtExceptionHandler.handleException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
210	[BUG]  [BUGGY]  String.valueOf(str).handleException( " ");  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String.valueOf(str).handleException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String.valueOf(str).handleException( " ");	  aughtExceptionHandler.handleException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
211	[BUG]  [BUGGY]  CharTypes.handleMissingValue(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  CharTypes  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  CharTypes.handleMissingValue(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	CharTypes.handleMissingValue(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()));    	non-compiled	[CE]  cannot  find  symbol  CharTypes	20	None	replace
212	[BUG]  [BUGGY]  parser.handleMissingValue(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  parser  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parser.handleMissingValue(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parser.handleMissingValue(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()));    	non-compiled	[CE]  cannot  find  symbol  parser	20	None	replace
213	[BUG]  [BUGGY]  parseMissingValue(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parseMissingValue(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parseMissingValue(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()));    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
214	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getQualifiedName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getQualifiedName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getQualifiedName();	  Class    <    T>    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	45	None	replace
215	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(str.getMessage());  [CE]  cannot  find  symbol  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(str.getMessage());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException(str.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
216	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(String.valueOf(str),  clazz.getMessage());  [CE]  cannot  find  symbol  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(String.valueOf(str),  clazz.getMessage());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException(String.valueOf(str),  clazz.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
217	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  must  not  be  null. ");	  Throwables.throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
218	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(str));  [CE]  <identifier>  expected  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(str));	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
219	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  str.equals(clazz));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( " "  +  str.equals(clazz));	  throw    new    IllegalArgumentException(   "   ".equals(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	6	1	replace
220	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  str.equals(clazz));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  str.equals(clazz));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( " "  +  str.equals(clazz));	  throw    new    IllegalArgumentException(   "   ".equals(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	6	1	replace
221	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(str));  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(str));	  throw    new    IllegalArgumentException(   "   ".equals(str));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
222	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(str);  [CE]  incompatible  types  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( " ").equals(str);	  throw    new    IllegalArgumentException(   "   ".equals(str));    	non-compiled	[CE]  incompatible  types	6	None	replace
223	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalStateException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
224	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
225	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
226	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "': "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "': "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ",    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	35	1	replace
227	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "': "  +  clazz);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "': "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "': "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ",    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	35	1	replace
228	[BUG]  [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  str);  [CE]  cannot  find  symbol  Throwables  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  str);	  Throwables.warning(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	24	None	replace
229	[BUG]  [BUGGY]  aughtExceptionHandler(str,  clazz.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(str,  clazz.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(str,  clazz.substring(0,  str.length()  -  1));	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
230	[BUG]  [BUGGY]  clazz.append(createURL(str),  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.append(createURL(str),  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.append(createURL(str),  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
231	[BUG]  [BUGGY]  Object  str  =  createURL(str),  str.substring(0,  str.length()  -  1));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Object  str  =  createURL(str),  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Object  str  =  createURL(str),  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ';'  expected	86	None	replace
232	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  3);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  3);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  clazz.length()  -  3);	  String    str    =    clazz.substring(0,    str.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
233	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getName()  + "/.* ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getName()  + "/.* ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass().getName()  + "/.* ";	  Class    <    T>    str    =    clazz.getRawClass().getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	41	None	replace
234	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length()  -  1,  str.length());	  [Delete]    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	85	None	replace
235	[BUG]  [BUGGY]  String  str  =  clazz.getName()  + "/.* ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getName()  + "/.* ";  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getName()  + "/.* ";	  String    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	17	None	replace
236	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);  }  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value' "  +  str  +   "'  for  path: "  +  clazz);  }	  	non-compiled	[CE]  unreachable  statement	60	None	add
237	[BUG]  [BUGGY]  StaxUtil.handleMissingException( " ");  [CE]  cannot  find  symbol  StaxUtil  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  StaxUtil.handleMissingException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	StaxUtil.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	2	None	replace
238	[BUG]  [BUGGY]  objectHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  objectHandler  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  objectHandler.handleMissingException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	objectHandler.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  objectHandler	2	None	replace
239	[BUG]  [BUGGY]  return(String)createValue(str),  clazz,  '[');  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str),  clazz,  '[');  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str),  clazz,  '[');	  return(String)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	39	None	replace
240	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(String.valueOf(str).getMessage());  [CE]  cannot  find  symbol  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(String.valueOf(str).getMessage());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException(String.valueOf(str).getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
241	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  str);  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  str);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
242	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(-1);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(-1);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawParameterType(-1);	  Class    <?>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	80	None	replace
243	[BUG]  [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URI_VALUE  should  not  be  null. ");  [CE]  missing  return  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URI_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( "PatternOptionBuilder.URI_VALUE  should  not  be  null. ");	  new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	69	None	replace
244	[BUG]  [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. "  +  clazz);  [CE]  missing  return  statement  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. "  +  clazz);	  new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	69	None	replace
245	[BUG]  [BUGGY]  String  str  =  getStringValue(clazz.substring(0,  clazz.length()));  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  getStringValue(clazz.substring(0,  clazz.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  getStringValue(clazz.substring(0,  clazz.length()));	  String    str    =    str.substring(0,    clazz.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	83	None	replace
246	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }	  	non-compiled	[CE]  unreachable  statement	33	None	add
247	[BUG]  [BUGGY]  clazz.append(createURL(str),  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.append(createURL(str),  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.append(createURL(str),  str.substring(0,  str.length()));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()));    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
248	[BUG]  [BUGGY]  Object  str  =  createURL(str),  str.substring(0,  str.length()));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Object  str  =  createURL(str),  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Object  str  =  createURL(str),  str.substring(0,  str.length()));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()));    	non-compiled	[CE]  ';'  expected	89	None	replace
249	[BUG]  [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  return(T)null;  }  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  else  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  return(T)null;  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    else  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  return(T)null;  }	  	non-compiled	[CE]  'else'  without  'if'	64	None	add
250	[BUG]  [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }  [CE]  cannot  find  symbol  VALUE_STRING  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	52	None	add
251	[BUG]  [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	52	None	add
252	[BUG]  [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  str);  }  [CE]  cannot  find  symbol  VALUE_STRING  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	52	None	add
253	[BUG]  [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]          java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  str);  }  else  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	52	None	add
254	[BUG]  [BUGGY]  StaxUtil.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  StaxUtil  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  StaxUtil.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	StaxUtil.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	16	None	replace
255	[BUG]  [BUGGY]  handleMissingName(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  handleMissingName(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	handleMissingName(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
256	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  clazz);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  clazz);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
257	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  url);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  url);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  url);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
258	[BUG]  [BUGGY]  return(String)createValue(str,  clazz,  args);  [CE]  cannot  find  symbol  args  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str,  clazz,  args);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz,  args);	  return(String)createValue(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  args	37	None	replace
259	[BUG]  [BUGGY]  return(String)createValue(str,  clazz,  spec);  [CE]  cannot  find  symbol  spec  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str,  clazz,  spec);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz,  spec);	  return(String)createValue(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  spec	37	None	replace
260	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URI_VALUE  should  not  be  null. ");  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URI_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URI_VALUE  should  not  be  null. ");	  Throwables.throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
261	[BUG]  [BUGGY]  clazz.exceptionHandler(PatternOptionBuilder.URL_VALUE,  str);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.exceptionHandler(PatternOptionBuilder.URL_VALUE,  str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.exceptionHandler(PatternOptionBuilder.URL_VALUE,  str);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    clazz);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
262	[BUG]  [BUGGY]  return(T)createValue(str,  clazz.valueOf(str));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz.valueOf(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  clazz.valueOf(str));	  return(T)createValue(String.valueOf(str));    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
263	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getReferenceName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getReferenceName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getReferenceName();	  Class    <    T>    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	45	None	replace
264	[BUG]  [BUGGY]  StaxUtil.handleMissingClass(clazz);  [CE]  cannot  find  symbol  StaxUtil  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  StaxUtil.handleMissingClass(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	StaxUtil.handleMissingClass(clazz);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	3	None	replace
265	[BUG]  [BUGGY]  parser.handleMissingClass(clazz);  [CE]  cannot  find  symbol  parser  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parser.handleMissingClass(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parser.handleMissingClass(clazz);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol  parser	3	None	replace
266	[BUG]  [BUGGY]  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalStateException( " ");  }  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  missing  return  statement	71	None	replace
267	[BUG]  [BUGGY]  return(T)createURL(str,  clazz);  [CE]  method  createURL  in  class  TypeHandler  cannot  be  applied  to  given  types;  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createURL(str,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createURL(str,  clazz);	  return(T)createValue(str,    str);    	non-compiled	[CE]  method  createURL  in  class  TypeHandler  cannot  be  applied  to  given  types;	53	None	replace
268	[BUG]  [BUGGY]  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  NullPointerException( " ");  }  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  NullPointerException( " ");  }	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  missing  return  statement	73	None	replace
269	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MIN_VALUE);  [CE]  no  suitable  method  found  for  substring(int,int,int,int)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MIN_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MIN_VALUE);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int)	44	None	replace
270	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  true);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  true);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(str,  true);	  Class    <?>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	22	None	replace
271	[BUG]  [BUGGY]  Throwable  t  =  new  Throwable( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  missing  return  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwable  t  =  new  Throwable( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwable  t  =  new  Throwable( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    	non-compiled	[CE]  missing  return  statement	29	None	replace
272	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [CE]  cannot  find  symbol  VALUE_STRING  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    if(PatternOptionBuilder.VALUE_STRING  ==  clazz)  {  return(T)createValue(str,  clazz);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	49	None	add
273	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  if(PatternOptionBuilder.VALUE_STRING!=  clazz)  {  return(T)createValue(str,  clazz);  }  [CE]  cannot  find  symbol  VALUE_STRING  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  if(PatternOptionBuilder.VALUE_STRING!=  clazz)  {  return(T)createValue(str,  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    if(PatternOptionBuilder.VALUE_STRING!=  clazz)  {  return(T)createValue(str,  clazz);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_STRING	49	None	add
274	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [CE]  cannot  find  symbol  VALUE_NUMBER  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  clazz);  }	  	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER	49	None	add
275	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  null);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  null);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(str,  null);	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
276	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  true);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  true);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(str,  true);	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
277	[BUG]  [BUGGY]  return(String)createValue(clazz,  str,  _objectIdReader);  [CE]  cannot  find  symbol  _objectIdReader  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(clazz,  str,  _objectIdReader);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(clazz,  str,  _objectIdReader);	  return(String)createValue(clazz,    str);    	non-compiled	[CE]  cannot  find  symbol  _objectIdReader	38	None	replace
278	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  clazz);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  clazz);	  Class    <    T>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	81	None	replace
279	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  url);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  url);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  url);	  Class    <    T>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	81	None	replace
280	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".);  [CE]  <identifier>  expected  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  new  IllegalArgumentException( " ".);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( " ".);	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	84	None	replace
281	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getReferenceName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getReferenceName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getReferenceName();	  Class    <?>    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	21	None	replace
282	[BUG]  [BUGGY]  parsingExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  parsingExceptionHandler  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parsingExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parsingExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  parsingExceptionHandler	14	None	replace
283	[BUG]  [BUGGY]  if(StringUtil.isEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(StringUtil.isEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(StringUtil.isEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }	  aughtExceptionHandler(clazz,    str.substring(0,    str.length()    -    1)));    	non-compiled	[CE]  ';'  expected	67	None	replace
284	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	34	1	replace
285	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'. ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	34	1	replace
286	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  NullPointerException( "   ");  }  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  NullPointerException( "   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    if(!PatternOptionBuilder.URL_VALUE.equals(str))  {  throw  new  NullPointerException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	72	None	add
287	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.stringValue();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.stringValue();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.stringValue();	  return(str    ==    null)?    null    :    str.intValue();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
288	[BUG]  [BUGGY]  return(T)createValue(str),  clazz,  ';');  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str),  clazz,  ';');  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str),  clazz,  ';');	  return(T)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	74	None	replace
289	[BUG]  [BUGGY]  return(T)createValue(str),  clazz  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str),  clazz  +  1);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str),  clazz  +  1);	  return(T)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	74	None	replace
290	[BUG]  [BUGGY]  clazz.exceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.exceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.exceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
291	[BUG]  [BUGGY]  Object  value  =  PatternOptionBuilder.URL_VALUE.apply(str);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Object  value  =  PatternOptionBuilder.URL_VALUE.apply(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Object  value  =  PatternOptionBuilder.URL_VALUE.apply(str);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
292	[BUG]  [BUGGY]  return(T)createValue(Str.class,  str);  [CE]  cannot  find  symbol  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(Str.class,  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(Str.class,  str);	  return(T)createValue(clazz,    str);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
293	[BUG]  [BUGGY]  return(Value)createValue(clazz,  str);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(Value)createValue(clazz,  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(Value)createValue(clazz,  str);	  return(Value)createValue(str);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
294	[BUG]  [BUGGY]  return(Value)createURL(str);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(Value)createURL(str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(Value)createURL(str);	  return(Value)createValue(str);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
295	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  4,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  4,  str.length());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  4,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()),    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	43	None	replace
296	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  }  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    shouldn't    be    null.   ");    if(PatternOptionBuilder.URL_VALUE  ==  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  }	  	non-compiled	[CE]  unreachable  statement	92	None	add
297	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  }  [CE]  unreachable  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    shouldn't    be    null.   ");    if(PatternOptionBuilder.URL_VALUE!=  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null.   ");  }	  	non-compiled	[CE]  unreachable  statement	92	None	add
298	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  }  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  }	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    shouldn't    be    null.   ");    	non-compiled	[CE]  missing  return  statement	93	None	replace
299	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toCharArray();  [CE]  incompatible  types  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.toCharArray();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.toCharArray();	  return(str    ==    null)?    null    :    str;    	non-compiled	[CE]  incompatible  types	57	None	replace
300	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(-1);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(-1);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawParameterType(-1);	  Class    <    T>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	63	None	replace
301	[BUG]  [BUGGY]  StaxUtil.handleMissingValue(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  StaxUtil  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  StaxUtil.handleMissingValue(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	StaxUtil.handleMissingValue(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingValue(clazz,    str.substring(0,    str.length()));    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	20	None	replace
302	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: ",  clazz);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,Class<T>)  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: ",  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: ",  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,Class<T>)	61	None	replace
303	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  throw  new  IllegalStateException( "   ");  }  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalStateException(   "   ");    if(PatternOptionBuilder.URL_VALUE!=  clazz)  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	70	None	add
304	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null ".   ");  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null ".   ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null ".   ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    Throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    	non-compiled	[CE]  not  a  statement	30	None	replace
305	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  true);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  true);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(str,  true);	  Class    <    T>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	46	None	replace
306	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  if(PatternOptionBuilder.url_VALUE  ==  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  }  [CE]  cannot  find  symbol  url_VALUE  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  if(PatternOptionBuilder.url_VALUE  ==  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    if(PatternOptionBuilder.url_VALUE  ==  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  }	  	non-compiled	[CE]  cannot  find  symbol  url_VALUE	25	None	add
307	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  if(PatternOptionBuilder.url_VALUE!=  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  }  [CE]  cannot  find  symbol  url_VALUE  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  if(PatternOptionBuilder.url_VALUE!=  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    if(PatternOptionBuilder.url_VALUE!=  null)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null.   ");  }	  	non-compiled	[CE]  cannot  find  symbol  url_VALUE	25	None	add
308	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName(name);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName(name);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName(name);	  String    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	78	None	replace
309	[BUG]  [BUGGY]  if(StringUtils.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(StringUtils.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(StringUtils.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  ';'  expected	66	None	replace
310	[BUG]  [BUGGY]  if(StringUtil.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(StringUtil.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(StringUtil.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  ';'  expected	66	None	replace
311	[BUG]  [BUGGY]  return(T)createValue(str,  clazz,  Object.class);  [CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<Object>)  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz,  Object.class);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  clazz,  Object.class);	  return(T)createValue(str,    clazz);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String,Class<T>,Class<Object>)	50	None	replace
312	[BUG]  [BUGGY]  return(T)createValue(str,  clazz,  _objectIdReader);  [CE]  cannot  find  symbol  _objectIdReader  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz,  _objectIdReader);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  clazz,  _objectIdReader);	  return(T)createValue(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  _objectIdReader	50	None	replace
313	[BUG]  [BUGGY]  parser.handleMissingValue(clazz);  [CE]  cannot  find  symbol  parser  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parser.handleMissingValue(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parser.handleMissingValue(clazz);	  aughtExceptionHandler.handleMissingValue(clazz);    	non-compiled	[CE]  cannot  find  symbol  parser	1	None	replace
314	[BUG]  [BUGGY]  String  aughtExceptionHandler.handleException( " ");  [CE]  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  aughtExceptionHandler.handleException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  aughtExceptionHandler.handleException( " ");	  aughtExceptionHandler.handleException(   "   ");    	non-compiled	[CE]  	4	None	replace
315	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(String.valueOf(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException(String.valueOf(str));	  throw    new    IllegalArgumentException(   "   ".equals(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	6	1	replace
316	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(String.valueOf(str));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(String.valueOf(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException(String.valueOf(str));	  throw    new    IllegalArgumentException(   "   ".equals(str));    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	6	1	replace
317	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(str));  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(str));  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( " ").equals(str));	  throw    new    IllegalArgumentException(   "   ".equals(str));    	non-compiled	[CE]  	6	None	replace
318	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  true);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  true);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass(str,  true);	  Class    <    T>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	95	None	replace
319	[BUG]  [BUGGY]  return(T)createValue(str),  clazz,  '[');  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str),  clazz,  '[');  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str),  clazz,  '[');	  return(T)createValue(str),    clazz);    	non-compiled	[CE]  ';'  expected	74	None	replace
320	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");	  throw    new    IllegalArgumentException(       "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    Throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.       ");    	non-compiled	[CE]  not  a  statement	30	None	replace
321	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  	8	None	replace
322	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  if(!(clazz  instanceof  String))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'  for  path: "  +  clazz);  }  [CE]  inconvertible  types  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'  for  path:   "  +  clazz);  if(!(clazz  instanceof  String))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'  for  path: "  +  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    if(!(clazz  instanceof  String))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'  for  path: "  +  clazz);  }	  	non-compiled	[CE]  inconvertible  types	60	None	add
323	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str,  clazz.intValue();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str,  clazz.intValue();  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str,  clazz.intValue();	  return(str    ==    null)?    null    :    str.intValue();    	non-compiled	[CE]  ';'  expected	58	None	replace
324	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);	  return(str    ==    null)?    null    :    str.intValue();    	non-compiled	[CE]  incompatible  types	58	None	replace
325	[BUG]  [BUGGY]  mockExceptionHandler.handleMissingClass(clazz);  [CE]  cannot  find  symbol  mockExceptionHandler  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  mockExceptionHandler.handleMissingClass(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	mockExceptionHandler.handleMissingClass(clazz);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol  mockExceptionHandler	3	None	replace
326	[BUG]  [BUGGY]  Mockito.handleMissingClass(clazz);  [CE]  cannot  find  symbol  Mockito  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Mockito.handleMissingClass(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Mockito.handleMissingClass(clazz);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol  Mockito	3	None	replace
327	[BUG]  [BUGGY]  handleMissingClass(clazz);  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  handleMissingClass(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	handleMissingClass(clazz);	  aughtExceptionHandler.handleMissingClass(clazz);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
328	[BUG]  [BUGGY]  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  VALUE_NUMBER_INT  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  VALUE_NUMBER_INT	71	None	replace
329	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  if(!(clazz  instanceof  String))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }  [CE]  inconvertible  types  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  if(!(clazz  instanceof  String))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    if(!(clazz  instanceof  String))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }	  	non-compiled	[CE]  inconvertible  types	33	None	add
330	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  if(StringUtils.isNotEmpty(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }  [CE]  cannot  find  symbol  StringUtils  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'.   ");  if(StringUtils.isNotEmpty(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'.   ");    if(StringUtils.isNotEmpty(str))  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "'.   ");  }	  	non-compiled	[CE]  cannot  find  symbol  StringUtils	33	None	add
331	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  str);	  Class    <    T>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	81	None	replace
332	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  Object.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  Object.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  Object.class);	  Class    <    T>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	81	None	replace
333	[BUG]  [BUGGY]  return(T)createValue(Str,  clazz);  [CE]  cannot  find  symbol  Str  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(Str,  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(Str,  clazz);	  return(T)createValue(clazz,    str);    	non-compiled	[CE]  cannot  find  symbol  Str	54	None	replace
334	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  str);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
335	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  Object.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  Object.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE,  Object.class);	  Class    <?>    str    =    clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	77	None	replace
336	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  Object.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  Object.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(str,  Object.class);	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
337	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  clazz);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str,  clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(str,  clazz);	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
338	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str)+  1;  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str)+  1;  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(str)+  1;	  Class    <?>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	90	None	replace
339	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  str);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  str);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  str);	  Throwable    t    =    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,String)	68	None	replace
340	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  Object.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  Object.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass(str,  Object.class);	  Class    <    T>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	95	None	replace
341	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  clazz);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str,  clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass(str,  clazz);	  Class    <    T>    str    =    clazz.getRawClass(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	95	None	replace
342	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  1,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.substring(0,  clazz.length()  -  1,  clazz.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  clazz.length()  -  1,  clazz.length());	  String    str    =    clazz.substring(0,    str.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
343	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz, ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz, ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ",    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	35	1	replace
344	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz, ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz, ");  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "',  clazz, ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ",    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	35	1	replace
345	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [CE]  'else'  without  'if'  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  clazz);  }	  	non-compiled	[CE]  'else'  without  'if'	49	None	add
346	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [CE]  'else'  without  'if'  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  clazz);  else  if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  clazz);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    clazz);    else  if(PatternOptionBuilder.VALUE_NUMBER  ==  clazz)  {  return(T)createValue(str,  clazz);  }	  	non-compiled	[CE]  'else'  without  'if'	49	None	add
347	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.STRING_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  else  if(PatternOptionBuilder.STRING_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	else  if(PatternOptionBuilder.STRING_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  	9	None	replace
348	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  ';'  expected	66	None	replace
349	[BUG]  [BUGGY]  if(StringUtils.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(StringUtils.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(StringUtils.isNotEmpty(str))  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  	66	None	replace
350	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler(clazz,    str.substring(0,    str.length())));    	non-compiled	[CE]  	66	None	replace
351	[BUG]  [BUGGY]  clazz  =  clazz.getComponentType();  [CE]  incompatible  types  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz  =  clazz.getComponentType();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz  =  clazz.getComponentType();	  [Delete]    	non-compiled	[CE]  incompatible  types	85	None	replace
352	[BUG]  [BUGGY]  clazz  =  clazz.getRawClass();  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz  =  clazz.getRawClass();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz  =  clazz.getRawClass();	  [Delete]    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
353	[BUG]  [BUGGY]  clazz  =  clazz.getSuperclass();  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz  =  clazz.getSuperclass();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz  =  clazz.getSuperclass();	  [Delete]    	non-compiled	[CE]  incompatible  types	85	None	replace
354	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getStr();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getStr();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getStr();	  Class    <?>    str    =    clazz.getValue();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	56	None	replace
355	[BUG]  [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  }  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  }	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.url_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	26	None	replace
356	[BUG]  [BUGGY]  return(T)null;  else  {  return(T)null;  }  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  else  {  return(T)null;  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    else  {  return(T)null;  }	  	non-compiled	[CE]  'else'  without  'if'	64	None	add
357	[BUG]  [BUGGY]  return(T)null;  if(null!=  str)  {  return(T)null;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)null;  if(null!=  str)  {  return(T)null;  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;    if(null!=  str)  {  return(T)null;  }	  	non-compiled	[CE]  unreachable  statement	64	None	add
358	[BUG]  [BUGGY]  clazz.exceptionHandler(createURL(str),  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  clazz.exceptionHandler(createURL(str),  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	clazz.exceptionHandler(createURL(str),  str.substring(0,  str.length()));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
359	[BUG]  [BUGGY]  aughtExceptionHandler(createURL(str),  str,  clazz.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  aughtExceptionHandler(createURL(str),  str,  clazz.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(createURL(str),  str,  clazz.substring(0,  str.length()));	  aughtExceptionHandler(createURL(str),    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
360	[BUG]  [BUGGY]  parsingExceptionHandler.handleMissingName(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  parsingExceptionHandler  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parsingExceptionHandler.handleMissingName(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parsingExceptionHandler.handleMissingName(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  parsingExceptionHandler	16	None	replace
361	[BUG]  [BUGGY]  parser.handleMissingName(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  parser  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parser.handleMissingName(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parser.handleMissingName(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol  parser	16	None	replace
362	[BUG]  [BUGGY]  parseMissingName(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  parseMissingName(clazz,  str.substring(0,  str.length()));  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	parseMissingName(clazz,  str.substring(0,  str.length()));	  aughtExceptionHandler.handleMissingName(clazz,    str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
363	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length(),  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  substring(int,int,int,int)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length(),  Integer.MAX_VALUE);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length(),  Integer.MAX_VALUE);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length(),    Integer.MAX_VALUE);    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int)	44	None	replace
364	[BUG]  [BUGGY]  return(String)createValue(str,  clazz,  _type);  [CE]  cannot  find  symbol  _type  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str,  clazz,  _type);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz,  _type);	  return(String)createValue(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  _type	37	None	replace
365	[BUG]  [BUGGY]  return(String)createValue(str,  clazz,  Object_class);  [CE]  cannot  find  symbol  Object_class  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(String)createValue(str,  clazz,  Object_class);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz,  Object_class);	  return(String)createValue(str,    clazz);    	non-compiled	[CE]  cannot  find  symbol  Object_class	37	None	replace
366	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  [CE]  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }	  	non-compiled	[CE]  	72	None	add
367	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  [CE]  incompatible  types  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  NullPointerException(   "   ");  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    NullPointerException(   "   ");    if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }	  	non-compiled	[CE]  incompatible  types	72	None	add
368	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  	84	None	replace
369	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawParameterType(str);	  Class    <?>    str    =    clazz.getRawParameterType(0);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	80	None	replace
370	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( " ");  }  [CE]  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  throw  new  NullPointerException( " ");  }	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  	73	None	replace
371	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  throw  new  NullPointerException( " ");  }  [CE]  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  throw  new  NullPointerException( " ");  }	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  	73	None	replace
372	[BUG]  [BUGGY]  Mockito.handleMissingValue(clazz);  [CE]  cannot  find  symbol  Mockito  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Mockito.handleMissingValue(clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Mockito.handleMissingValue(clazz);	  aughtExceptionHandler.handleMissingValue(clazz);    	non-compiled	[CE]  cannot  find  symbol  Mockito	1	None	replace
373	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  _valueClass);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  _valueClass);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(str,  _valueClass);	  Class    <?>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	22	None	replace
374	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  Object.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str,  Object.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(str,  Object.class);	  Class    <?>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	22	None	replace
375	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.URL_VALUE!=  str)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  else  if(PatternOptionBuilder.URL_VALUE!=  str)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	else  if(PatternOptionBuilder.URL_VALUE!=  str)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  	10	None	replace
376	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName(str,  Object.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName(str,  Object.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName(str,  Object.class);	  String    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	78	None	replace
377	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName(str,  _valueClass);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getSimpleName(str,  _valueClass);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName(str,  _valueClass);	  String    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	78	None	replace
378	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  _valueClass);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  _valueClass);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(str,  _valueClass);	  Class    <    T>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	46	None	replace
379	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  Object.class);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str,  Object.class);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(str,  Object.class);	  Class    <    T>    str    =    clazz.getSimpleName(str);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	46	None	replace
380	[BUG]  [BUGGY]  return(T)createValue(str,  JsonStringEncoder.getInstance());  [CE]  cannot  find  symbol  JsonStringEncoder  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  JsonStringEncoder.getInstance());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  JsonStringEncoder.getInstance());	  return(T)createValue(str,    str);    	non-compiled	[CE]  cannot  find  symbol  JsonStringEncoder	53	None	replace
381	[BUG]  [BUGGY]  return(T)createValue(str,  PatternOptionBuilder.VALUE_NULL);  [CE]  cannot  find  symbol  VALUE_NULL  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  PatternOptionBuilder.VALUE_NULL);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  PatternOptionBuilder.VALUE_NULL);	  return(T)createValue(str,    str);    	non-compiled	[CE]  cannot  find  symbol  VALUE_NULL	53	None	replace
382	[BUG]  [BUGGY]  Object  value  =  PatternOptionBuilder.URL_VALUE.append(str);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Object  value  =  PatternOptionBuilder.URL_VALUE.append(str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Object  value  =  PatternOptionBuilder.URL_VALUE.append(str);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
383	[BUG]  [BUGGY]  ExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  ExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	ExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
384	[BUG]  [BUGGY]  ExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  null);  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  ExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  null);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	ExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz,  null);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    str,    clazz);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
385	[BUG]  [BUGGY]  ExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz,  str);  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  ExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz,  str);  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	ExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz,  str);	  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,    clazz);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
386	[BUG]  [BUGGY]  exceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  exceptionHandler  [FE]                      AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  exceptionHandler.handleMissingException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	exceptionHandler.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  exceptionHandler	2	None	replace
387	[BUG]  [BUGGY]  handleMissingException( " ");  [CE]  cannot  find  symbol  [FE]                        AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  handleMissingException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
388	[BUG]  [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  clazz);  [CE]  cannot  find  symbol  Throwables  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ",  clazz);	  Throwables.warning(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	24	None	replace
389	[BUG]  [BUGGY]  exceptionHandler.handleException( " ");  [CE]  cannot  find  symbol  exceptionHandler  [FE]                          AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  exceptionHandler.handleException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	exceptionHandler.handleException( " ");	  aughtExceptionHandler.handleException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  exceptionHandler	4	None	replace
390	[BUG]  [BUGGY]  handleException( " ");  [CE]  cannot  find  symbol  [FE]                            AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  handleException( " ");  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	handleException( " ");	  aughtExceptionHandler.handleException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
391	[BUG]  [BUGGY]  String  str  =  clazz.getName()  + ": "  +  clazz.getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  clazz.getName()  + ": "  +  clazz.getName();  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getName()  + ": "  +  clazz.getName();	  String    str    =    clazz.getName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	17	None	replace
392	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  [CE]  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalStateException(   "   ");    else  if(PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  createURL(str);  }	  	non-compiled	[CE]  	70	None	add
393	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'  for  path: "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'  for  path: "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	61	1	replace
394	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'  for  path: "  +  clazz);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'  for  path: "  +  clazz);  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + ".'  for  path: "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'    for    path:   "    +    clazz);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	61	1	replace
395	[BUG]  [BUGGY]  String  str  =  path.substring(0,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  path.substring(0,  clazz.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  path.substring(0,  clazz.length());	  String    str    =    str.substring(0,    clazz.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	83	None	replace
396	[BUG]  [BUGGY]  String  str  =  parser.substring(0,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  String  str  =  parser.substring(0,  clazz.length());  [BUGGY]      return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  parser.substring(0,  clazz.length());	  String    str    =    str.substring(0,    clazz.length());    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	83	None	replace
397	[BUG]  [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.VALUE_NULL  ==  clazz)  {  return(T)createValue(str,  str);  }  [CE]  'else'  without  'if'  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.VALUE_NULL  ==  clazz)  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    else  if(PatternOptionBuilder.VALUE_NULL  ==  clazz)  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  'else'  without  'if'	52	None	add
398	[BUG]  [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  str);  }  [CE]  'else'  without  'if'  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  return(T)createValue(str,  str);  else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  str);  }  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,    str);    else  if(PatternOptionBuilder.VALUE_NUMBER_INT  ==  clazz)  {  return(T)createValue(str,  str);  }	  	non-compiled	[CE]  'else'  without  'if'	52	None	add
399	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "),  clazz.getMessage());  [CE]  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException( " "),  clazz.getMessage());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( " "),  clazz.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  	7	None	replace
400	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(str,  clazz.getMessage());  [CE]  cannot  find  symbol  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {      [BUGGY]  throw  new  IllegalArgumentException(str,  clazz.getMessage());  [BUGGY]      }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException(str,  clazz.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
