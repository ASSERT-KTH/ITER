bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Class  <  T>  str  =  clazz.getRawClass();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]    AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    Class  <  T>  str  =  clazz.getRawClass();  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    Class  <  T>  str  =  clazz.getRawClass();		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
2	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]      AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    String  str  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
3	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  2);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    String  str  =  str.substring(0,  str.length()  -  2);		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
4	[BUG]  [BUGGY]    Class  <  T>  str  =  clazz.getSimpleName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    Class  <  T>  str  =  clazz.getSimpleName();  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    Class  <  T>  str  =  clazz.getSimpleName();		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
5	[BUG]  [BUGGY]    String  str  =  clazz.getSimpleName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    String  str  =  clazz.getSimpleName();  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    String  str  =  clazz.getSimpleName();		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
6	[BUG]  [BUGGY]  return  this;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  return  this;  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return  this;	return  null;  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	1	None	replace
7	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase();  [CE]  incompatible  types  [FE]      AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  return(str  ==  null)?  null  :  str.toLowerCase();  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.toLowerCase();	return  null;  	non-compiled	[CE]  incompatible  types	1	None	replace
8	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( " ");	return  null;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( " ");	return  null;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
10	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]          AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length());  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length());	return  null;  	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	1	None	replace
11	[BUG]  [BUGGY]  return(String)createValue(str);  [CE]  no  suitable  method  found  for  createValue(String)  [FE]    AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  return(String)createValue(str);  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str);	return  null;  	non-compiled	[CE]  no  suitable  method  found  for  createValue(String)	1	None	replace
12	[BUG]  [BUGGY]  return(T)createValue(str);  [CE]  no  suitable  method  found  for  createValue(String)  [FE]      AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  return(T)createValue(str);  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str);	return  null;  	non-compiled	[CE]  no  suitable  method  found  for  createValue(String)	1	None	replace
13	[BUG]  [BUGGY]    Class  <?>  str  =  clazz.getRawClass();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]    AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    Class  <?>  str  =  clazz.getRawClass();  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    Class  <?>  str  =  clazz.getRawClass();		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
14	[BUG]  [BUGGY]    Class  <?>  str  =  clazz.getSimpleName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]      AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    Class  <?>  str  =  clazz.getSimpleName();  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    Class  <?>  str  =  clazz.getSimpleName();		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
15	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  4);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    String  str  =  str.substring(0,  str.length()  -  4);		non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	add
16	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	return  null;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
17	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	return  null;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
18	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");	return  null;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
19	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");  [BUGGY]  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");	return  null;  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
20	[BUG]  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str))  {  return  createValue(str);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str))  {  return  createValue(str);  }  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str))  {  return  createValue(str);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
21	[BUG]  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  return  createValue(str);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  return  createValue(str);  }  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  return  createValue(str);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
22	[BUG]  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(!StringUtils.isEmpty(str))  {  return  createValue(str);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(!StringUtils.isEmpty(str))  {  return  createValue(str);  }  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(!StringUtils.isEmpty(str))  {  return  createValue(str);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
23	[BUG]  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  return  createURL(str);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  return  createURL(str);  }  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  return  createURL(str);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
24	[BUG]  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isNotEmpty(str))  {  return  createValue(str);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  [BUGGY]    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isNotEmpty(str))  {  return  createValue(str);  }  [BUGGY]  return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	    if(str  ==  null)  {  String  str  =  str.substring(0,  str.length()  -  1);  if(StringUtils.isNotEmpty(str))  {  return  createValue(str);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
