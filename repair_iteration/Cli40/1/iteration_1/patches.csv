bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(clazz);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingValue(clazz);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler.handleMissingValue(clazz);	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isNotEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	24	None	replace
2	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isNotEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	24	None	replace
3	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingClass(clazz);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                    AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingClass(clazz);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler.handleMissingClass(clazz);	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isNotEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	24	None	replace
4	[BUG]  [BUGGY]  aughtExceptionHandler.handleException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                      AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler.handleException( " ");  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler.handleException( " ");	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isNotEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	24	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(str));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(str));  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( " ".equals(str));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	9	None	replace
7	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [CE]  cannot  find  symbol  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
8	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	8	None	add
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [CE]  <identifier>  expected  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  <identifier>  expected	8	None	add
10	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	8	None	add
11	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	3	None	replace
12	[BUG]  [BUGGY]  String  str  =  string.substring(0,  str.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  string.substring(0,  str.length());  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  string.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	3	None	replace
13	[BUG]  [BUGGY]  String  str  =  clazz.substring(0,  str.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  clazz.substring(0,  str.length());  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	3	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()  -  1));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	21	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(clazz,  str.substring(0,  str.length()  -  1));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler.handleMissingName(clazz,  str.substring(0,  str.length()  -  1));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	21	None	replace
17	[BUG]  [BUGGY]  String  str  =  clazz.getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  clazz.getName();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getName();	      String    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	5	None	replace
18	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + "/.* ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                  AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  clazz.getSimpleName()  + "/.* ";  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + "/.* ";	      String    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	5	None	replace
19	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + "/.html ";  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                    AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  clazz.getSimpleName()  + "/.html ";  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + "/.html ";	      String    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	5	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler.handleMissingValue(clazz,  str.substring(0,  str.length()));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	20	None	replace
21	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getName();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getName();	      Class    <?>    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	14	None	replace
22	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(str);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(str);	      Class    <?>    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	14	None	replace
23	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  <identifier>  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
24	[BUG]  [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  cannot  find  symbol  Throwables  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.warning( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	17	None	replace
25	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	17	1	replace
26	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.url_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	17	1	replace
27	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()));  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  str.substring(0,  str.length()));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length()));	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	2	None	replace
28	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	2	None	replace
29	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");	  	non-compiled	[CE]  unreachable  statement	16	None	add
30	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  [CE]  not  a  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");	  	non-compiled	[CE]  not  a  statement	16	None	add
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.. ");  [CE]  unreachable  statement  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  should  not  be  null.   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null.. ");	  	non-compiled	[CE]  unreachable  statement	16	None	add
32	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");  [CE]  <identifier>  expected  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwables.throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
33	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	19	1	replace
34	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	19	1	replace
35	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  clazz);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,Class<T>)  [FE]        java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "' ",  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(String,Class<T>)	19	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length()));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(clazz,  str.substring(0,  str.length()));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    return    createURL(str);    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
37	[BUG]  [BUGGY]  return(String)createValue(str,  clazz);  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(String)createValue(str,  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str,  clazz);	  return(String)createValue(str);    	non-compiled	[CE]  incompatible  types	11	None	replace
38	[BUG]  [BUGGY]  return(String)createValue(clazz,  str);  [CE]  no  suitable  method  found  for  createValue(Class<T>,String)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(String)createValue(clazz,  str);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(clazz,  str);	  return(String)createValue(str);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(Class<T>,String)	11	None	replace
39	[BUG]  [BUGGY]  return(String)createValue(str),  clazz);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(String)createValue(str),  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(String)createValue(str),  clazz);	  return(String)createValue(str);    	non-compiled	[CE]  ';'  expected	11	None	replace
40	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawType();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getRawType();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawType();	      Class    <    T>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	1	None	replace
41	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getRawClass().getName();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass().getName();	      Class    <    T>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	1	None	replace
42	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length());  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length());  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	10	None	replace
43	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()),  str.length());  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()),  str.length());  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()),  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  ';'  expected	10	None	replace
44	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE);  [CE]  no  suitable  method  found  for  substring(int,int,int,int)  [FE]                  AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length(),  Integer.MAX_VALUE);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int,int)	10	None	replace
45	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getName();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getName();	      Class    <    T>    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	4	None	replace
46	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(str);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(str);	      Class    <    T>    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	4	None	replace
47	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toUpperCase();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str  ==  null)?  null  :  str.toUpperCase();  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.toUpperCase();	  return(str    ==    null)?    null    :    str.toLowerCase();    	non-compiled	[CE]  incompatible  types	7	None	replace
48	[BUG]  [BUGGY]  return(str!=  null)?  null  :  str.toLowerCase();  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str!=  null)?  null  :  str.toLowerCase();  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str!=  null)?  null  :  str.toLowerCase();	  return(str    ==    null)?    null    :    str.toLowerCase();    	non-compiled	[CE]  incompatible  types	7	None	replace
49	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(str,  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)createValue(str,  clazz);	  return(T)createValue(str);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	12	1	replace
50	[BUG]  [BUGGY]  return(T)createValue(str,  clazz);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(str,  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  clazz);	  return(T)createValue(str);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	12	1	replace
51	[BUG]  [BUGGY]  return(T)createValue(String.valueOf(str));  [CE]  no  suitable  method  found  for  createValue(String)  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(String.valueOf(str));  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(String.valueOf(str));	  return(T)createValue(str);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(String)	12	None	replace
52	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(str,  str);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)createValue(str,  str);	  return(T)createValue(str);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	12	1	replace
53	[BUG]  [BUGGY]  return(T)createValue(str,  str);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(str,  str);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str,  str);	  return(T)createValue(str);    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	12	1	replace
54	[BUG]  [BUGGY]  return(T)createValue(clazz,  str);  [CE]  no  suitable  method  found  for  createValue(Class<T>,String)  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(clazz,  str);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(clazz,  str);	  return(T)createValue(str);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(Class<T>,String)	12	None	replace
55	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawType();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getRawType();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawType();	      Class    <?>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
56	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getValue();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getValue();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getValue();	      Class    <?>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
57	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str  ==  null)?  null  :  str;  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str;	  return    this;    	non-compiled	[CE]  incompatible  types	6	None	replace
58	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.intValue();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str  ==  null)?  null  :  str.intValue();  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.intValue();	  return    this;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
59	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'   ");  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'   ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'   ");	  	non-compiled	[CE]  unreachable  statement	18	None	add
60	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	19	1	replace
61	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  + "'  for  path: "  +  clazz);	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	19	1	replace
62	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawKey();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getRawKey();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawKey();	      Class    <    T>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	1	None	replace
63	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(0);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getRawParameterType(0);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawParameterType(0);	      Class    <    T>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	1	None	replace
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)null;  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	return(T)null;	  return    this;    	compilable	  [FE]  AssertionError  	6	1	replace
65	[BUG]  [BUGGY]  return(T)null;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)null;  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)null;	  return    this;    	compilable	  [FE]  AssertionError  	6	1	replace
66	[BUG]  [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  [CE]  ';'  expected  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length())));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(clazz,  str.substring(0,  str.length())));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isNotEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
67	[BUG]  [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length()  -  1)));  [CE]  ';'  expected  [FE]                  AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(clazz,  str.substring(0,  str.length()  -  1)));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(clazz,  str.substring(0,  str.length()  -  1)));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isNotEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
68	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  missing  return  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Throwable  t  =  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	17	None	replace
69	[BUG]  [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [CE]  missing  return  statement  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  should  not  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	non-compiled	[CE]  missing  return  statement	17	None	replace
70	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	9	1	replace
71	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	9	1	replace
72	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  NullPointerException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	9	1	replace
73	[BUG]  [BUGGY]  throw  new  NullPointerException( " ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  NullPointerException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	9	1	replace
74	[BUG]  [BUGGY]  return(T)createValue(str),  clazz);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(str),  clazz);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(str),  clazz);	  return(T)createValue(str);    	non-compiled	[CE]  ';'  expected	12	None	replace
75	[BUG]  [BUGGY]  return(T)createValue(String.class,  str);  [CE]  no  suitable  method  found  for  createValue(Class<String>,String)  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(T)createValue(String.class,  str);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(T)createValue(String.class,  str);	  return(T)createValue(str);    	non-compiled	[CE]  no  suitable  method  found  for  createValue(Class<String>,String)	12	None	replace
76	[BUG]  [BUGGY]  return(Value)createValue(str);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(Value)createValue(str);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(Value)createValue(str);	  return(String)createValue(str);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
77	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);	      Class    <?>    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	14	None	replace
78	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  clazz.getSimpleName(str);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName(str);	      String    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	5	None	replace
79	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawKey();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getRawKey();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawKey();	      Class    <?>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
80	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(0);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getRawParameterType(0);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawParameterType(0);	      Class    <?>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
81	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getSimpleName(PatternOptionBuilder.URL_VALUE);	      Class    <    T>    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	4	None	replace
82	[BUG]  [BUGGY]  String  str  =  clazz.getSimpleName()  + "_ "  +  clazz.getName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]                AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  clazz.getSimpleName()  + "_ "  +  clazz.getName();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  clazz.getSimpleName()  + "_ "  +  clazz.getName();	      String    str    =    clazz.getSimpleName();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	5	None	replace
83	[BUG]  [BUGGY]  String  str  =  str.substring(0,  clazz.length());  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  String  str  =  str.substring(0,  clazz.length());  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	String  str  =  str.substring(0,  clazz.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	3	None	replace
84	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  new  IllegalArgumentException( "   ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "   ");    new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	8	None	add
85	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  [Delete]  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	[Delete]	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
86	[BUG]  [BUGGY]  aughtExceptionHandler(createURL(str),  str.substring(0,  str.length()  -  1));  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(createURL(str),  str.substring(0,  str.length()  -  1));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(createURL(str),  str.substring(0,  str.length()  -  1));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
87	[BUG]  [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  str,  clazz);	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
88	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [CE]  no  suitable  method  found  for  substring(int,int,int)  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length()  -  1);  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1,  str.length()  -  1);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1,    str.length());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,int,int)	10	None	replace
89	[BUG]  [BUGGY]  aughtExceptionHandler(createURL(str),  str.substring(0,  str.length()));  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(createURL(str),  str.substring(0,  str.length()));  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(createURL(str),  str.substring(0,  str.length()));	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(!StringUtils.isEmpty(str))    {    return    createValue(str);    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
90	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getRawClass(str);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawClass(str);	      Class    <?>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
91	[BUG]  [BUGGY]  Class  <?>  str  =  clazz.getRawName();  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]          AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <?>  str  =  clazz.getRawName();  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <?>  str  =  clazz.getRawName();	      Class    <?>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	13	None	replace
92	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	add	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	17	1	replace
93	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  shouldn't  be  null. ");	  throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    should    not    be    null.   ");    	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	17	1	replace
94	[BUG]  [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz);  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	aughtExceptionHandler(PatternOptionBuilder.URL_VALUE,  clazz);	      if(str    ==    null)    {    String    str    =    str.substring(0,    str.length()    -    1);    if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    return    createURL(str);    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
95	[BUG]  [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str);  [CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)  [FE]        AssertionError    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  Class  <  T>  str  =  clazz.getRawClass(str);  [BUGGY]    return  null;  }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	Class  <  T>  str  =  clazz.getRawClass(str);	      Class    <    T>    str    =    clazz.getRawClass();    	non-compiled	[CE]  variable  str  is  already  defined  in  method  <T>createValue(String,Class<T>)	1	None	replace
96	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'   ");  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "' ");  [CE]  not  a  statement  [FE]    java.lang.Exception:  Unexpected  exception    [CONTEXT]    else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {    [BUGGY]  throw  new  IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE  does  not  support  value  '   "  +  str  +   "'   ");  Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "' ");  [BUGGY]    }  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	1.0	103	103	1	replace	throw    new    IllegalArgumentException(   "PatternOptionBuilder.URL_VALUE    does    not    support    value    '   "    +    str    +   "'   ");    Throw  new  IllegalArgumentException( "PatternOptionBuilder.URL_VALUE  does  not  support  value  ' "  +  str  +   "' ");	  	non-compiled	[CE]  not  a  statement	18	None	add
