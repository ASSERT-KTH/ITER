bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }	  }    else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  else    if(PatternOptionBuilder.EXISTING_FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFiles(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
5	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  createFiles(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFiles(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
6	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
9	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
10	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
11	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
12	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]        ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
13	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
14	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
15	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.LINE_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  else    if(PatternOptionBuilder.LINE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
16	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createNull(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
17	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createNull(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
18	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILES_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILES_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_FILES_VALUE  ==  clazz)  {  return  (T)createNull(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createNull(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
19	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
20	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
21	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]      ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
22	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
23	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
24	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
25	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
26	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_ValUE  ==  clazz)  {  [CE]  cannot  find  symbol  FILES_ValUE  [FE]        UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_ValUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_ValUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else    if(PatternOptionBuilder.FILES_ValUE!=    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FILES_ValUE	50	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	33	2	add
28	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	33	2	add
29	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	33	None	add
30	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return	  	non-compiled	[CE]  illegal  start  of  type	33	None	add
31	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
32	[BUG]  [BUGGY]  [FE]  ParseException  [FE]    ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
33	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [FE]  ParseException  [FE]    ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
34	[BUG]  [BUGGY]  [FE]  ParseException  [FE]      ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
35	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  ParseException  [FE]      ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
36	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(  [CE]  illegal  start  of  expression  [FE]        ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
37	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(  [CE]  illegal  start  of  type  [FE]          ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(	  	non-compiled	[CE]  illegal  start  of  type	23	None	add
38	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FUNCTION_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FUNCTION_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FUNCTION_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  else    if(PatternOptionBuilder.NUMBER_FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
39	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  else    if(PatternOptionBuilder.NUMBER_FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
40	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALIASING_FILE_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  ALIASING_FILE_VALUE  [FE]              UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.ALIASING_FILE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.ALIASING_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else    if(PatternOptionBuilder.FILES_VALUE    >>    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  ALIASING_FILE_VALUE	14	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	compilable	  [FE]  AssertionError  	3	1	replace
42	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	compilable	  [FE]  AssertionError  	3	1	replace
43	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE!=  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]                  AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE!=  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE!=  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	3	None	replace
44	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FiLES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  FiLES_VALUE  [FE]                    AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FiLES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FiLES_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FiLES_VALUE	3	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  	compilable	  [FE]  AssertionError  	20	1	add
46	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  	compilable	  [FE]  AssertionError  	20	1	add
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	20	2	add
48	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	20	2	add
49	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	20	2	add
50	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	20	2	add
51	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createNull(str);  }	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
52	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	35	2	add
54	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	35	2	add
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	35	2	add
56	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	35	2	add
57	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	35	None	add
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	35	2	add
59	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	35	2	add
60	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFiles(str);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE!=  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE!=  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE!=  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	1	None	replace
62	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_ValUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_ValUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_ValUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	1	None	replace
63	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE!=  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE!=  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE!=  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	1	None	replace
64	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	27	2	add
66	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	27	2	add
67	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	27	None	add
68	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return	  	non-compiled	[CE]  illegal  start  of  type	27	None	add
69	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
70	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
71	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
72	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  [CE]  'else'  without  'if'  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
73	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
74	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    else  if(PatternOptionBuilder.Files_VALUE  ==  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
75	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_FILE_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_FILE_VALUE  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_FILE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_ValUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_FILE_VALUE	54	None	replace
76	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_ValUE!=  clazz)  {  [CE]  cannot  find  symbol  Files_ValUE  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_ValUE!=  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_ValUE!=  clazz)  {	  else    if(PatternOptionBuilder.Files_ValUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_ValUE	54	None	replace
77	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FilesValUE  ==  clazz)  {  [CE]  cannot  find  symbol  FilesValUE  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FilesValUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FilesValUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FilesVALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FilesValUE	44	None	replace
78	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FilesVALUE!=  clazz)  {  [CE]  cannot  find  symbol  FilesVALUE  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FilesVALUE!=  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FilesVALUE!=  clazz)  {	  else    if(PatternOptionBuilder.FilesVALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FilesVALUE	44	None	replace
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	45	2	add
80	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	45	2	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	45	2	add
82	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	45	2	add
83	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	45	None	add
84	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(s  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(s  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(s	  	non-compiled	[CE]  ')'  expected	45	None	add
85	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
86	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createLong(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createLong(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createLong(str);  }	  else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
87	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createNumber(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createNumber(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createNumber(str);  }	  else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
88	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createNull(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createNull(str);  }	  else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
89	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	48	2	add
90	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	48	2	add
91	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	48	2	add
92	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	48	2	add
93	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
94	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
95	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(s  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(s  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(s	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
96	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FilesPrefix  ==  clazz)  {  [CE]  cannot  find  symbol  FilesPrefix  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FilesPrefix  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FilesPrefix  ==  clazz)  {	  else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FilesPrefix	10	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	compilable	  [FE]  AssertionError  	15	2	replace
98	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  [FE]  AssertionError  [FE]                UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	compilable	  [FE]  AssertionError  	15	2	replace
99	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [CE]  illegal  start  of  type  [FE]                  UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
100	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  (T)createNull(str);  }	  else    if(PatternOptionBuilder.NULL_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
101	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  createFloat(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  createFloat(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  createFloat(str);  }	  else    if(PatternOptionBuilder.NULL_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
102	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    openFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
103	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FIELD_VALUE!=  clazz)  {  [CE]  cannot  find  symbol  FIELD_VALUE  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FIELD_VALUE!=  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FIELD_VALUE!=  clazz)  {	  else    if(PatternOptionBuilder.FIELD_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_VALUE	41	None	replace
104	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFloat(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
105	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
106	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFiles(str);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
107	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createSignedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
108	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	45	None	add
109	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  }    else    if(PatternOptionBuilder.NUMBER_FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
110	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	3	None	replace
111	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createLine(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createLine(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createLine(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
112	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFiles(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
113	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  ELEMENTS_VALUE  [FE]                UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.ELEMENTS_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  ELEMENTS_VALUE	15	None	replace
114	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.END_FILE_VALUE  ==  clazz)  {  return  (T)createEndFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.END_FILE_VALUE  ==  clazz)  {  return  (T)createEndFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.END_FILE_VALUE  ==  clazz)  {  return  (T)createEndFile(str);  }	  }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
115	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.INTEGER_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.INTEGER_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.INTEGER_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
116	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  {  return  null;  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  {  return  null;  }	  }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
117	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILE_ValUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  else  if(PatternOptionBuilder.FILE_ValUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    else  if(PatternOptionBuilder.FILE_ValUE  ==  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
118	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	20	None	add
119	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  }  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }	  }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
120	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SELECT_FILE_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  SELECT_FILE_VALUE  [FE]        UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.SELECT_FILE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.SELECT_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  SELECT_FILE_VALUE	11	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	48	1	add
122	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	48	1	add
123	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)openFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
124	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NULL_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NULL_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NULL_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  else    if(PatternOptionBuilder.NUMBER_FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
125	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
126	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  ClassCastException  	30	4	add
127	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE!=  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE!=  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NULL_VALUE!=  clazz)  {  return  (T)createFloat(str);  }	  else    if(PatternOptionBuilder.NULL_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	27	2	add
129	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	27	2	add
130	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	33	1	add
131	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	33	1	add
132	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	33	2	add
133	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	33	2	add
134	[BUG]  [BUGGY]  [FE]  ParseException  [FE]    ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
135	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [FE]  ParseException  [FE]    ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
136	[BUG]  [BUGGY]  [FE]  ParseException  [FE]      ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
137	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }  [FE]  ParseException  [FE]      ParseException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.NUMBER_VALUE        ==        clazz)        {        return        (T)createNumber(str);        }        else    if(PatternOptionBuilder.NUMBER_VALUE!=    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFiles(str);  }	  	compilable	  [FE]  ParseException  	23	2	add
138	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
139	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
140	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
141	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  ClassCastException  	38	4	add
142	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NULL_FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.NULL_FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NULL_FILE_VALUE  ==  clazz)  {  return  (T)createNull(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createNull(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
143	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Null_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Null_VALUE  ==  clazz)  {  return  (T)createNull(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Null_VALUE  ==  clazz)  {  return  (T)createNull(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createNull(str);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
144	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.SELECTION_FILE_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  SELECTION_FILE_VALUE  [FE]        UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.SELECTION_FILE_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.SELECTION_FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  SELECTION_FILE_VALUE	11	None	replace
145	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILES_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  ELEMENT_FILES_VALUE  [FE]                UnsupportedOperationException      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.ELEMENT_FILES_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.ELEMENT_FILES_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  ELEMENT_FILES_VALUE	15	None	replace
146	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FiELD_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  FiELD_VALUE  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FiELD_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FiELD_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FIELD_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FiELD_VALUE	41	None	replace
147	[BUG]  [BUGGY]  <  T>  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  <  T>  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	<  T>  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }	  }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
148	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FiLESVALUE  ==  clazz)  {  [CE]  cannot  find  symbol  FiLESVALUE  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.FiLESVALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FiLESVALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FilesVALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FiLESVALUE	44	None	replace
149	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.ALIASING_FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.ALIASING_FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.ALIASING_FILE_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	  else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFiles(str);    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
150	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
151	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILE_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILE_VALUE!=    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	38	None	add
152	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_ValUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_ValUE  [FE]            AssertionError      [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]  else  if(PatternOptionBuilder.Files_ValUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [BUGGY]      {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_ValUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz    ||    PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_ValUE	1	None	replace
153	[BUG]  [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]    ClassCastException    [CONTEXT]      return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }      [BUGGY]          else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]      else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	                else        if(PatternOptionBuilder.FILES_VALUE        ==        clazz)        {        return        (T)createFile(str);        }        else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
