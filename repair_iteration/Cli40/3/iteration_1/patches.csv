bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.Files_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	1	None	replace
2	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE!=  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]          AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE!=  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE!=  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	1	None	replace
3	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_VALUE  [FE]            AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_VALUE  ==  clazz  ||  PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_VALUE	1	None	replace
4	[BUG]  [BUGGY]  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}	      }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFiles(str);  }	      }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	      }    else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)    createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    	compilable	  [FE]  AssertionError  	3	2	replace
10	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  [FE]  AssertionError  [FE]    UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    	compilable	  [FE]  AssertionError  	3	2	replace
11	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	2	None	add
12	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  [CE]  'else'  without  'if'  [FE]      UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	2	None	add
13	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  >=  clazz)  {  [CE]  'else'  without  'if'  [FE]        UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  >=  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else  if(PatternOptionBuilder.FILES_VALUE  >=  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	2	None	add
14	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  >>  clazz)  {  [CE]  'else'  without  'if'  [FE]          UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_VALUE  >>  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else  if(PatternOptionBuilder.FILES_VALUE  >>  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	2	None	add
15	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [CE]  'else'  without  'if'  [FE]            UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	2	None	add
16	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	      else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createNumber(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createNumber(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createNumber(str);  }	      else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFiles(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFiles(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFiles(str);  }	      else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createNull(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createNull(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createNull(str);  }	      else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }	  	compilable	  [FE]  AssertionError  	9	1	add
21	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }	  	compilable	  [FE]  AssertionError  	9	1	add
22	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    }  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }	  	non-compiled	[CE]  illegal  start  of  type	9	None	add
23	[BUG]  [BUGGY]  [FE]  ParseException  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }	  	compilable	  [FE]  ParseException  	9	2	add
24	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  [FE]  ParseException  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  (T)createNumber(str);  }  else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createNumber(str);    }    else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createNumber(str);  }	  	compilable	  [FE]  ParseException  	9	2	add
25	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }	      else    if(PatternOptionBuilder.SIGNATURES_FILE_VALUE    ==    clazz)    {    return    (T)createSignedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createSignedFile(str);  }	      else    if(PatternOptionBuilder.SIGNATURES_FILE_VALUE    ==    clazz)    {    return    (T)createSignedFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	7	2	add
28	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	7	2	add
29	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
30	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	7	4	add
31	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	7	4	add
32	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFloat(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFloat(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFloat(str);  }	      }    else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	5	1	add
34	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	5	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	5	2	add
36	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  AssertionError  	5	2	add
37	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  illegal  start  of  type	5	None	add
38	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	5	4	add
39	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [FE]  ClassCastException  [FE]          AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE!=  clazz)  {  return  (T)createFile(str);  }	  	compilable	  [FE]  ClassCastException  	5	4	add
40	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }	      else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FIELD_VALUE  ==  clazz)  {  [CE]  cannot  find  symbol  FIELD_VALUE  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FIELD_VALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FIELD_VALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.LINE_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FIELD_VALUE	12	None	replace
42	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_VALUE!=  clazz)  {  return  (T)createFloat(str);  }	      else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createFloat(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createFloat(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_VALUE  ==  clazz)  {  return  createFloat(str);  }	      else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FilesVALUE  ==  clazz)  {  [CE]  cannot  find  symbol  FilesVALUE  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FilesVALUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FilesVALUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  FilesVALUE	1	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	7	2	add
46	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	7	2	add
47	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NULL_VALUE  ==  clazz)  {  return  (T)createFloat(str);  }	      else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	add	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	5	1	add
49	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)openFile(str);  }	  	compilable	  [FE]  AssertionError  	5	1	add
50	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_ValUE!=  clazz)  {  [CE]  'else'  without  'if'  [FE]    UnsupportedOperationException    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE!=  clazz)  {  else  if(PatternOptionBuilder.FILES_ValUE!=  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else    if(PatternOptionBuilder.FILES_VALUE!=    clazz)    {    else  if(PatternOptionBuilder.FILES_ValUE!=  clazz)  {	  	non-compiled	[CE]  'else'  without  'if'	2	None	add
51	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.LINE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	      else    if(PatternOptionBuilder.FILES_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  }  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	}  else  if(PatternOptionBuilder.NUMBER_FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
54	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.Files_ValUE  ==  clazz)  {  [CE]  cannot  find  symbol  Files_ValUE  [FE]        AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.Files_ValUE  ==  clazz)  {  [BUGGY]    {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.Files_ValUE  ==  clazz)  {	  else    if(PatternOptionBuilder.Files_VALUE    ==    clazz)    {    	non-compiled	[CE]  cannot  find  symbol  Files_ValUE	1	None	replace
55	[BUG]  [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFloat(str);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]  else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFloat(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	else  if(PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  return  (T)  createFloat(str);  }	      }    else    if(PatternOptionBuilder.NUMBER_VALUE    ==    clazz)    {    return    (T)createFloat(str);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
56	[BUG]  [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.IFILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [CE]  cannot  find  symbol  IFILE_VALUE  [FE]    AssertionError    [CONTEXT]    return  (T)  createClass(str);  }  else  if  (PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)  createFile(str);  }  else  if  (PatternOptionBuilder.EXISTING_FILE_VALUE  ==  clazz)  {  return  (T)  openFile(str);  }    [BUGGY]      else  if(PatternOptionBuilder.FILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  else  if(PatternOptionBuilder.IFILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }  [BUGGY]    else  if  (PatternOptionBuilder.FILES_VALUE  ==  clazz)  {  {  return  (T)  createFiles(str);  }  else  if  (PatternOptionBuilder.URL_VALUE  ==  clazz)  {  return  (T)  createURL(str);  }  else  {  return  null;  [CLASS]  TypeHandler  [METHOD]  createValue  [RETURN_TYPE]  <T>  String  str  Class<T>  clazz  [VARIABLES]  boolean  Class  clazz  String  str  	projects/Cli40/src/main/java/org/apache/commons/cli/TypeHandler.java	0.5	93	94	1	replace	        else    if(PatternOptionBuilder.FILE_VALUE    ==    clazz)    {    return    (T)createFile(str);    }    else  if(PatternOptionBuilder.IFILE_VALUE  ==  clazz)  {  return  (T)createFile(str);  }	  	non-compiled	[CE]  cannot  find  symbol  IFILE_VALUE	5	None	add
