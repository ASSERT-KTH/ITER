projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821reportCodeChange();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821parent.replaceChild(n,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821n.removeChild(parent);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821n.removeChild(newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821parent.replaceChild(newNode,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,this);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,this);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,false);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821if(newNode.getType()==Token.NAME){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821parent.removeChild(newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821if(newNode.getType()==Token.VAR){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821if(newNode.getType()==Token.FUNCTION){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.removeChild(parent);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821parent.replaceChild(newNode,n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821parent.removeChild(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.setType(Token.FUNCTION);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,true);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,parent,false);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,parent,newNode,false);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,false);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,false,parent);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,num,false);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,this);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,this,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,this,parent);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,parent,this);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,this,n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,null);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.setType(Token.NAME);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodenewNode=newNode.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodenewNode=Node.newString(Token.NAME,num);parent.replaceChild(n,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodenewNode=Node.newString(Token.NAME,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodenewNode=Node.newNumber(num);parent.replaceChild(n,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodenewNode=parent.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodenewNode=Node.newNumber(num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.setType(Token.VAR);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821parent.replaceChild(n,newNode,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,parent);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,parent);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,parent,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,parent,this);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,this,parent);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,this,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,parent,newNode,this);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,null);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821parent.replaceChild(newNode,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.setType(Token.FUNCTION){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821n.replaceChild(parent,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821n.addChildToFront(newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821Noden=newNode.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821n.replaceChild(newNode,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeUtil.removeChild(parent,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,false,num);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.setType(Token.NAME){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodenewNode=parent.replaceChild(n,newNode);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821if(newNode.getType()==Token.VAR||newNode.getType()==Token.FUNCTION){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821if(newNode.getType()==Token.VAR||newNode.getType()==Token.CATCH){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821if(newNode.getType()==Token.VAR||newNode.getType()==Token.BLOCK){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821if(newNode.getType()==Token.VAR||newNode.getType()==Token.NAME){reportCodeChange();}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeUtil.removeChild(parent,n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.putBooleanProp(Node.SOURCENAME_PROP,true);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.putProp(Node.SOURCENAME_PROP,parent.getType());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821newNode.putBooleanProp(Node.SYNTHETIC_PROP,true);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,compiler);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,parents);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,parent,newNode,false);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,newNode,this,null);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,this,INVALID_REGULAR_EXPRESSION_FLAGS);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,this,null);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java821NodeTraversal.traverse(compiler,n,newNode,this,parents);
