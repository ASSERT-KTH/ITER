name,outcome,runtime,stacktrace
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testMinimizeExprCondition,PASS,1494218151,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testIssue291,FAIL,1132994422,junit.framework.AssertionFailedError: Expected: if(f)f.onchange() Result: f&&f.onchange() Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [sourcename: expected0] [synthetic: 1] IF 1 [sourcename: expected0] NAME f 1 [sourcename: expected0] BLOCK 1 [sourcename: expected0] EXPR_RESULT 1 [sourcename: expected0] CALL 1 [sourcename: expected0] GETPROP 1 [sourcename: expected0] NAME f 1 [sourcename: expected0] STRING onchange 1 [sourcename: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [sourcename: testcode] [synthetic: 1] EXPR_RESULT 1 [sourcename: testcode] AND 1 [sourcename: testcode] NAME f 1 [sourcename: testcode] CALL 1 [sourcename: testcode] GETPROP 1 [sourcename: testcode] NAME f 1 [sourcename: testcode] STRING onchange 1 [sourcename: testcode]   Subtree1: IF 1 [sourcename: expected0] NAME f 1 [sourcename: expected0] BLOCK 1 [sourcename: expected0] EXPR_RESULT 1 [sourcename: expected0] CALL 1 [sourcename: expected0] GETPROP 1 [sourcename: expected0] NAME f 1 [sourcename: expected0] STRING onchange 1 [sourcename: expected0]   Subtree2: EXPR_RESULT 1 [sourcename: testcode] AND 1 [sourcename: testcode] NAME f 1 [sourcename: testcode] CALL 1 [sourcename: testcode] GETPROP 1 [sourcename: testcode] NAME f 1 [sourcename: testcode] STRING onchange 1 [sourcename: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:818) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:398) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:323) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:292) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:280) at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:512) at com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.foldSame(PeepholeSubstituteAlternateSyntaxTest.java:66) at com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest.testIssue291(PeepholeSubstituteAlternateSyntaxTest.java:568) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldReturns,PASS,869974445,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldNot,PASS,1056874042,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testNotCond,PASS,578665839,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldOneChildBlocks,PASS,849523913,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldAssignments,PASS,478506224,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testRemoveDuplicateStatements,PASS,628625530,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testAndParenthesesCount,PASS,627214871,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldLogicalOpStringCompare,PASS,529422922,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldRegExpConstructor,PASS,520749752,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldRegExpConstructorStringCompare,PASS,925802591,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testContainsUnicodeEscape,PASS,16829175,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldLiteralObjectConstructors,PASS,798276525,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldLiteralArrayConstructors,PASS,1101786721,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testMinimizeWhileCondition,PASS,650624833,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testMinimizeForCondition,PASS,517143142,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testMinimizeCondition_example1,PASS,604398879,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldConditionalVarDeclaration,PASS,450980965,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldReturnResult,PASS,581450818,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testFoldStandardConstructors,PASS,715094130,
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntaxTest#testSubsituteReturn,PASS,667366421,
