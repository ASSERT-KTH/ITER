projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=expr.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=expr.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,COND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),OR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=expr.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=expr.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=expr.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=expr.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranchIsExpressionBlock=n.getFirstChild().getNext().getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_REGULAR_EXPRESSION_FLAGS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_VAR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=cond.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=n.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=expr.removeFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=parent.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=expr.getAssignedValue();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.getFirstChild(),expr.removeFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeLastChild(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.getFirstChild(),expr.getFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond,expr.removeFirstChild(),expr.removeFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond,expr.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_REGULAR_EXPRESSION_FLAGS)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_REGULAR_EXPRESSION_FLAGS)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_REGULAR_EXPRESSION_FLAGS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_REGULAR_EXPRESSION_FLAGS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=cond.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=cond.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=parent.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=expr.nextChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,COND)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.getFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeLastChild(),expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,expr.removeFirstChild(),cond.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeNextChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),OR)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),OR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),OR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),OR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),OR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),OR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,COND)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,OR)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,OR)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.getFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.getNext());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=cond.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=n.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=expr.getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=expr.removeFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=elseBranch.getFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getFirstChild(),OR)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.getFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.getLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n,expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild()),expr.copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=cond.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=n.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=expr.removeFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=expr.getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.getFirstChild(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeLastChild(),expr.removeFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.getLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,n.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(cond);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(n+1);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild()),expr.copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n,expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.cloneTree());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.removeFirstChild(),expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.cloneTree());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,OR_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),OR_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,OR_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getFirstChild(),expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getFirstChild(),expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getFirstChild(),expr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getOwnerChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getLastChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getLastChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,OR)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,COND)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=cond.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=n.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=elseBranch.getLastChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getFirstChild());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeFirstChild());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeLastChild());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getLastChild());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getFirstChild(),expr.removeFirstChild());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranchIsExpressionBlock=expr.getFirstChild().getNext().getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranchIsExpressionBlock=cond.getFirstChild().getNext().getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranchIsExpressionBlock=parent.getFirstChild().getNext().getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranchIsExpressionBlock=expr.getLastChild().getNext().getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n,OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n,COND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getFirstChild()).copyInformationFrom(n);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeLastChild()).copyInformationFrom(n);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.getLastChild()).copyInformationFrom(n);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild()),expr.copyInformationFrom(n);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),OR)||isLowerPrecedenceInExpression(cond.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),OR)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.getFirstChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.getLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild()),expr.copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.getNext()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild(),parent).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,cond)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,OR)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.getFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild(),expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild(),expr.getNext());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_VAR)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_VAR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,AND_VAR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_VAR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),COND)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,COND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,COND)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isConstructorInExpression(cond,OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.cloneTree());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=cond.getfirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond,expr.removeFirstChild(),expr.removeFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)||isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_REGULAR_EXPRESSION_FLAGS)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_VAR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild(),elseOp);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.cloneTree());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isVarPrecedenceInExpression(n,AND_PRECEDENCE)&&isVarPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isVarPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)||isVarPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n.getLastChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),elseOp);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n);parent.replaceChild(n,elseExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.removeFirstChild(),elseBranch);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(expr,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),OR_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeLastChild()),copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond.getFirstChild(),OR)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),OR)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),OR)&&isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,OR)&&isLowerPrecedenceInExpression(expr.getFirstChild(),STANDARD_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.cloneTree()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=expr.nextChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=expr.getAssignedChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.cloneTree()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_OBJECT_CONSTRUCTORS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=cond.removeFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),OR)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(n,STANDARD_OBJECT_CONSTRUCTORS)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild())||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.getFirstChild(),elseBranch);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,STANDARD_OBJECT_CONSTRUCTORS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,OR)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,COND)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),COND)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(pr,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_REGULAR_EXPRESSION_FLAGS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),elseOp);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isVarPrecedenceInExpression(cond,AND_PRECEDENCE)&&isVarPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND)||isPrettyPrinterInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.getLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodevar=expr.cloneTree();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,INVALID_REGULAR_EXPRESSION_FLAGS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranchIsExpressionBlock=expr.removeFirstChild().getNext().getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranchIsExpressionBlock=expr.getFirstChild().getParent().getNext();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=cond.removeFirstChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=expr.cloneTree();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),OR_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,OR_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.cloneTree());parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=expr.nextChild();
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeLastChild()),expr.copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.cloneTree(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.cloneTree()).copyInformationFrom(n);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenAssign=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n,expr);parent.replaceChild(n,newExpr);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getLastChild(),AND_PRECEDENCE)
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(expr,COND)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild(),expr.removeLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.AND,cond,expr.removeFirstChild()).copyInformationFrom(n,expr.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(cond,AND_VAR)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenOp=newNode(Token.AND,cond,expr.removeFirstChild(),expr.getLastChild()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeSecond()).copyInformationFrom(n);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(expr.getFirstChild(),COND)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(!isLowerPrecedenceInExpression(n,AND_PRECEDENCE)&&isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isLowerPrecedenceInExpression(cond,AND_PRECEDENCE)||isLowerPrecedenceInExpression(expr.getFirstChild(),AND_REGULAR_EXPRESSION_FLAGS)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302if(isPrecedenceInExpression(cond,AND_REGULAR_EXPRESSION_FLAGS)&&isLowerPrecedenceInExpression(expr.getFirstChild(),AND_PRECEDENCE)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302NodethenBranch=newNode(Token.AND,cond,expr.removeFirstChild(),expr.cloneTree());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java302Nodeassign=newNode(Token.OR,cond.removeFirstChild(),expr.removeFirstChild(),expr.getLastChild());
