bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  n.getLastChild();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.getLastChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.getLastChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
2	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  n.getLastChild();  [CE]  [FE]      AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  n.getLastChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.getType()  ==  Token.CALL?  n.getLastChild()  :  n.getLastChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
3	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  n.getLastChild();  [CE]  [FE]        AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.getType()  ==  Token.CALL?  n.getFirstChild()  :  n.getLastChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
4	[BUG]  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [CE]  [FE]          AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.getType()  ==  Token.CALL?  null  :  n.getFirstChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
5	[BUG]  [BUGGY]  return  n.getType()  ==  Token.BLOCK;  [CE]  [FE]            AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.getType()  ==  Token.BLOCK;  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.getType()  ==  Token.BLOCK;	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
6	[BUG]  [BUGGY]  return  n.getNext();  [CE]  [FE]              AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.getNext();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.getNext();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
7	[BUG]  [BUGGY]    [CE]  [FE]                AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]    [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	  	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
8	[BUG]  [BUGGY]  return  n!=  null?  null  :  n.getFirstChild();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n!=  null?  null  :  n.getFirstChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n!=  null?  null  :  n.getFirstChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
9	[BUG]  [BUGGY]  return  n  ==  null?  null  :  n.getFirstChild();  [CE]  [FE]      AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n  ==  null?  null  :  n.getFirstChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n  ==  null?  null  :  n.getFirstChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
10	[BUG]  [BUGGY]  return  n!=  null?  null  :  n.getLastChild();  [CE]  [FE]        AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n!=  null?  null  :  n.getLastChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n!=  null?  null  :  n.getLastChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
11	[BUG]  [BUGGY]  return  n.removeFirstChild();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.removeFirstChild();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.removeFirstChild();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
12	[BUG]  [BUGGY]  return  n.cloneTree();  [CE]  [FE]      AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.cloneTree();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.cloneTree();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
13	[BUG]  [BUGGY]  return  n.getFirstChild().getNext();  [CE]  [FE]        AssertionFailedError  [CONTEXT]  private  Node  getBlockExpression(Node  n)  {  Preconditions.checkState(isFoldableExpressBlock(n));  [BUGGY]  return  n.getFirstChild().getNext();  [BUGGY]  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  getBlockExpression  [RETURN_TYPE]  Node  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.35355339059327373	545	545	1	replace	return  n.getFirstChild().getNext();	return  n.getFirstChild();  	non-compiled	[CE]  	53	None	replace
