projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returnnode;
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimize(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeNot(node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimize(node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeNull(node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getExpressionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getConditionExpression(node)+1);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeFor(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getReferenceExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getFunctionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeIf(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimize(NodeUtil.getExpressionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryPredicate(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimize(NodeUtil.getConditionExpression(node)+1);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryEXPR_RESULT(node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getFirstChild(),node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getLastChild(),node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73caseToken.EXPR_RESULT:tryMinimizeCondition(NodeUtil.getConditionExpression(node));returnnode;
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73tryMinimizeCondition(NodeUtil.getConditionExpression(node));returnnode;
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73caseToken.EXPR_RESULT:tryMinimizeCondition(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getType());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getString());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getShortChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getLocalPart());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimize(node.getLastChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimize(node.getFirstChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getShortChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getType());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getLastChild(),NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getLastChild(),false);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getType()==Token.EXPR_RESULT);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getLastChild()+1);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getEXPR_RESULT());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getExpression());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeExpression(node.getEmptyChild());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getType()==Token.EXPR_RESULT);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getExpression());
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getConditionExpr(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeNode(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(node.getFirstChild(),NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getConditionExpression(node)/2);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeEmpty(node);
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMaximizeCondition(NodeUtil.getConditionExpression(node));
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73if(NodeUtil.getConditionExpression(node)!=null){returntryMinimizeNot(node);}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73if(NodeUtil.getConditionExpression(node)==null){returntryMinimizeNot(node);}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73if(NodeUtil.isExpressionNode(node)){tryMinimizeCondition(NodeUtil.getConditionExpression(node));returnnode;}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73if(NodeUtil.isExpressionNode(node)){returntryMinimizeCondition(NodeUtil.getConditionExpression(node));}
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java73returntryMinimizeCondition(NodeUtil.getConditionExpression(node).getFirstChild());
