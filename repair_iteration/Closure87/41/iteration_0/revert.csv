projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,true)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(!NodeUtil.isLiteralValue(cond,true)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(!NodeUtil.isLiteralValue(cond,false)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||NodeUtil.isFunctionDeclaration(parent)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||parent.getType()==Token.FUNCTION){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||parent.getType()==Token.NAME){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(cond==null||NodeUtil.isLiteralValue(cond,true)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(cond!=null||NodeUtil.isLiteralValue(cond,true)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||NodeUtil.isAssignmentOp(parent)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||NodeUtil.isVarDeclaration(cond)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||NodeUtil.isFunction(parent)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||NodeUtil.isFunction(cond)){
projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java267if(NodeUtil.isLiteralValue(cond,false)||parent.getType()==Token.VAR){
