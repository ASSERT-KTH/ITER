bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild();  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Node  maybeExpr  =  n.getFirstChild();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Node  maybeExpr  =  n.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
2	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getLastChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Node  maybeExpr  =  n.getLastChild();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Node  maybeExpr  =  n.getLastChild();	      	non-compiled	[CE]  	6	None	replace
3	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Node  n  =  n.getFirstChild();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Node  n  =  n.getFirstChild();	      	non-compiled	[CE]  	6	None	replace
4	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getNext();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Node  maybeExpr  =  n.getNext();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Node  maybeExpr  =  n.getNext();	      	non-compiled	[CE]  	6	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  	6	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);	      	non-compiled	[CE]  	6	None	replace
7	[BUG]  [BUGGY]  Node  n  =  n.getLastChild();  [CE]  [FE]                              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Node  n  =  n.getLastChild();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Node  n  =  n.getLastChild();	      	non-compiled	[CE]  	6	None	replace
8	[BUG]  [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
9	[BUG]  [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
10	[BUG]  [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.EXPR_RESULT)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
11	[BUG]  [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
12	[BUG]  [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
13	[BUG]  [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.VAR)  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.VAR)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.VAR)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
14	[BUG]  [BUGGY]  if(n.hasChildren()  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  n.getType()  ==  Token.FUNCTION)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
15	[BUG]  [BUGGY]  if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
16	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
17	[BUG]  [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
18	[BUG]  [BUGGY]  if(n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
19	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
20	[BUG]  [BUGGY]  if(n.hasOneChild()  ||  n.getLastChild().getType()  ==  Token.STRING)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  ||  n.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  ||  n.getLastChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
21	[BUG]  [BUGGY]  if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
22	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
23	[BUG]  [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
24	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
25	[BUG]  [BUGGY]  if(n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
26	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
27	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
30	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
31	[BUG]  [BUGGY]  if(n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
32	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
33	[BUG]  [BUGGY]  if(n.hasNext())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasNext())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasNext())  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
34	[BUG]  [BUGGY]  if(n.getType()  ==  Token.CALL  &&  n.hasFirstChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.CALL  &&  n.hasFirstChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.CALL  &&  n.hasFirstChild())  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
35	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.EXPR_RESULT)  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
36	[BUG]  [BUGGY]  if(n.hasLastChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasLastChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasLastChild())  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
37	[BUG]  [BUGGY]  if(n.getType()  ==  Token.VAR  &&  n.hasFirstChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.VAR  &&  n.hasFirstChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.VAR  &&  n.hasFirstChild())  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
38	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.hasFirstChild())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.hasFirstChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.hasFirstChild())  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
39	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  &&  n.hasOneChild())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  &&  n.hasOneChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  &&  n.hasOneChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
40	[BUG]  [BUGGY]  if(n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.BLOCK  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
41	[BUG]  [BUGGY]  if(n.getLastChild()!=  null  &&  n.hasOneChild())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getLastChild()!=  null  &&  n.hasOneChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getLastChild()!=  null  &&  n.hasOneChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
42	[BUG]  [BUGGY]  if(n.getType()  ==  Token.CALL  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.CALL  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.CALL  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
43	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  ||  n.hasOneChild())  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  ||  n.hasOneChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  ||  n.hasOneChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
44	[BUG]  [BUGGY]  if(n.getType()  ==  Token.VAR  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.VAR  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.VAR  &&  n.getFirstChild()!=  null  &&  n.hasOneChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  if(n.hasOneChild()  ||  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  ||  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  ||  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
46	[BUG]  [BUGGY]  if(maybeExpr.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(maybeExpr.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(maybeExpr.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
47	[BUG]  [BUGGY]  if(n.hasChildren()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
48	[BUG]  [BUGGY]  if(maybeExpr.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(maybeExpr.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(maybeExpr.hasChildren()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
49	[BUG]  [BUGGY]  if(maybeExpr.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(maybeExpr.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(maybeExpr.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
50	[BUG]  [BUGGY]  if(n.hasOneChild()  &&  maybeExpr.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  &&  maybeExpr.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  &&  maybeExpr.getLastChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
51	[BUG]  [BUGGY]  if  (n.getType()  ==  Token.BLOCK  &&  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if  (n.getType()  ==  Token.BLOCK  &&  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if  (n.getType()  ==  Token.BLOCK  &&  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if    (n.hasOneChild()    &&    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  if  (n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if  (n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if  (n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if    (n.hasOneChild()    &&    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
54	[BUG]  [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasFirstChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
55	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
56	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
57	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.hasChildren())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.hasChildren())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.hasChildren())  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
58	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.hasFirstChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.hasFirstChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.hasFirstChild())  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
59	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.getType()  ==  Token.BLOCK)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.getType()  ==  Token.BLOCK)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
60	[BUG]  [BUGGY]  if(n.hasChildren()  &&  NodeUtil.isExpressionNode(n))  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  &&  NodeUtil.isExpressionNode(n))  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  &&  NodeUtil.isExpressionNode(n))  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
61	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
62	[BUG]  [BUGGY]  if  (n.getFirstChild()!=  null  &&  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if  (n.getFirstChild()!=  null  &&  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if  (n.getFirstChild()!=  null  &&  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if    (n.hasOneChild()    &&    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	8	None	replace
63	[BUG]  [BUGGY]  if  (n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if  (n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if  (n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if    (n.hasOneChild()    &&    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	8	None	replace
64	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasLastChild())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasLastChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.hasLastChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
65	[BUG]  [BUGGY]  if(n.getType()  ==  Token.BLOCK)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.BLOCK)  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
66	[BUG]  [BUGGY]  if(n.getLastChild()!=  null  &&  n.hasChildCount())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getLastChild()!=  null  &&  n.hasChildCount())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getLastChild()!=  null  &&  n.hasChildCount())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
67	[BUG]  [BUGGY]  if(n.getLastChild()!=  null  &&  n.hasFirstChild())  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getLastChild()!=  null  &&  n.hasFirstChild())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getLastChild()!=  null  &&  n.hasFirstChild())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
68	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null)  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
69	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getType()  ==  Token.NAME)  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
70	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null)  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
71	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
72	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
73	[BUG]  [BUGGY]  if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
74	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
75	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
76	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
77	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
78	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
79	[BUG]  [BUGGY]  if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK);  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.BLOCK);	      	non-compiled	[CE]  	6	None	replace
81	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.BLOCK);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Predicates.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Predicates.checkState(n.getType()  ==  Token.BLOCK);	      	non-compiled	[CE]  	6	None	replace
82	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getNext();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getNext();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Node  maybeExpr  =  n.getFirstChild().getNext();	      	non-compiled	[CE]  	6	None	replace
83	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.hasOneChild()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
84	[BUG]  [BUGGY]  if(n.hasChildCount()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildCount()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildCount()  &&  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
85	[BUG]  [BUGGY]  if(n.hasChildren()  ||  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
86	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
87	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
88	[BUG]  [BUGGY]  if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildCount()  ||  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
89	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.NAME)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  	10	None	replace
90	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.hasOneChild()  &&  n.getFirstChild().getType()  ==  Token.BLOCK)  {	  if    (n.hasOneChild()    &&    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	8	None	replace
91	[BUG]  [BUGGY]  if(n.hasFirstChild()  ||  n.getLastChild().getString().equals( " "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasFirstChild()  ||  n.getLastChild().getString().equals( " "))  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasFirstChild()  ||  n.getLastChild().getString().equals( " "))  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
92	[BUG]  [BUGGY]  if(n.hasFirstChild()  ||  n.getLastChild().getString().endsWith( "__ "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasFirstChild()  ||  n.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasFirstChild()  ||  n.getLastChild().getString().endsWith( "__ "))  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
93	[BUG]  [BUGGY]  if(n.hasFirstChild()  ||  n.getLastChild().getString().equals( "xmlns "))  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasFirstChild()  ||  n.getLastChild().getString().equals( "xmlns "))  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasFirstChild()  ||  n.getLastChild().getString().equals( "xmlns "))  {	  if(n.hasFirstChild())    {    	non-compiled	[CE]  	1	None	replace
94	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasChildren())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.hasChildren())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.hasChildren())  {	  if(n.getFirstChild()!=    null    &&    n.hasOneChild())    {    	non-compiled	[CE]  	7	None	replace
95	[BUG]  [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()  ==  null  ||  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
96	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
97	[BUG]  [BUGGY]  if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.STRING)  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.STRING)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  	9	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME);	      	non-compiled	[CE]  	6	None	replace
99	[BUG]  [BUGGY]  n  =  n.getLastChild();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  n  =  n.getLastChild();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	n  =  n.getLastChild();	      	non-compiled	[CE]  	6	None	replace
100	[BUG]  [BUGGY]  int  AND_PRECEDENCE  =  n.getFirstChild().getType();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  int  AND_PRECEDENCE  =  n.getFirstChild().getType();  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	int  AND_PRECEDENCE  =  n.getFirstChild().getType();	      	non-compiled	[CE]  	6	None	replace
101	[BUG]  [BUGGY]  if(maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(maybeExpr.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    &&    maybeExpr.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	5	None	replace
102	[BUG]  [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  [FE]              AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.getFirstChild()!=  null  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
103	[BUG]  [BUGGY]  if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  	4	None	replace
104	[BUG]  [BUGGY]  if(n.hasChildren()  ||  n.hasNext())  {  [CE]  [FE]            AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasChildren()  ||  n.hasNext())  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasChildren()  ||  n.hasNext())  {	  if(n.hasChildren())    {    	non-compiled	[CE]  	3	None	replace
105	[BUG]  [BUGGY]  if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.BLOCK)  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    private  boolean  isFoldableExpressBlock(Node  n)  {  if  (n.getType()  ==  Token.BLOCK)  {    [BUGGY]  if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.BLOCK)  {  [BUGGY]    Node  maybeExpr  =  n.getFirstChild();          [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.2886751345948129	521	521	1	replace	if(n.hasOneChild()  ||  n.getFirstChild().getType()!=  Token.BLOCK)  {	  if(n.hasOneChild()    ||    n.getFirstChild().getType()    ==    Token.BLOCK)    {    	non-compiled	[CE]  	2	None	replace
