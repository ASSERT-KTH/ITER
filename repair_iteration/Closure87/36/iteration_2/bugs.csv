bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n);  [CE]  [FE]                AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpressionBlock(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n);	  return    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	5	None	replace
2	[BUG]  [BUGGY]  return  NodeUtil.isExpressBlock(n);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpressBlock(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressBlock(n);	  return    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	5	None	replace
3	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressBlock(n);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldExpressBlock(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressBlock(n);	  return    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	5	None	replace
4	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldBlock(n);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldBlock(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	5	None	replace
5	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	5	None	replace
6	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
7	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionOp(n);  [CE]  [FE]                AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionOp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
8	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpressionOp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
9	[BUG]  [BUGGY]  return  NodeUtil.isFoldArrayOperator(n);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldArrayOperator(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldArrayOperator(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
10	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
11	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
12	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  maybeExpr);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  maybeExpr);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
14	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  false);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  false);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  false);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
15	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this);  [CE]  [FE]                AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  this);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
16	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock());  [CE]  [FE]                  AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock());  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock());	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
17	[BUG]  [BUGGY]  ||  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  ||  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	3	None	replace
18	[BUG]  [BUGGY]  return  NodeUtil.isFoldArrayExpressionNode(n);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldArrayExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldArrayExpressionNode(n);	  return    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	3	None	replace
19	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  maybeExpr);  [CE]  [FE]                AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  maybeExpr);	  return    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	3	None	replace
20	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n,  maybeExpr);  [CE]  [FE]        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExprBlock(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n,  maybeExpr);	  return    NodeUtil.isExprBlock(n);    	non-compiled	[CE]  	11	None	replace
21	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n);	  return    NodeUtil.isExprBlock(n);    	non-compiled	[CE]  	11	None	replace
22	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
23	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
24	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
25	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock);  [CE]  [FE]                AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
27	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	1	None	replace
28	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  maybeExpr);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpressionNode(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  maybeExpr);	  return    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	1	None	replace
29	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	1	None	replace
30	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	10	None	replace
31	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  maybeExpr);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  maybeExpr);	  return    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	10	None	replace
32	[BUG]  [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild();  [CE]  [FE]                      AssertionFailedError    [CONTEXT]              [BUGGY]  Node  maybeExpr  =  n.getFirstChild();  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild();	      	non-compiled	[CE]  	8	None	replace
34	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getNext();  [CE]  [FE]                        AssertionFailedError    [CONTEXT]              [BUGGY]  Node  maybeExpr  =  n.getNext();  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getNext();	      	non-compiled	[CE]  	8	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                          AssertionFailedError    [CONTEXT]              [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  	8	None	replace
36	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getParent();  [CE]  [FE]                            AssertionFailedError    [CONTEXT]              [BUGGY]  Node  maybeExpr  =  n.getParent();  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getParent();	      	non-compiled	[CE]  	8	None	replace
37	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.clone();  [CE]  [FE]                              AssertionFailedError    [CONTEXT]              [BUGGY]  Node  maybeExpr  =(Node)n.clone();  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.clone();	      	non-compiled	[CE]  	8	None	replace
38	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.getFirstChild();  [CE]  [FE]                                AssertionFailedError    [CONTEXT]              [BUGGY]  Node  maybeExpr  =(Node)n.getFirstChild();  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.getFirstChild();	      	non-compiled	[CE]  	8	None	replace
39	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                  AssertionFailedError    [CONTEXT]              [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  	8	None	replace
40	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFold(n);    	non-compiled	[CE]  	6	None	replace
41	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFold(n);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFold(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFold(n);	  return    NodeUtil.isFold(n);    	non-compiled	[CE]  	6	None	replace
42	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFold(n);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFold(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFold(n);	  return    NodeUtil.isFold(n);    	non-compiled	[CE]  	6	None	replace
43	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isFold(n);    	non-compiled	[CE]  	6	None	replace
44	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n,  maybeExpr);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpr(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n,  maybeExpr);	  return    NodeUtil.isExpr(n);    	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  return  NodeUtil.isExpr(maybeExpr);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpr(maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(maybeExpr);	  return    NodeUtil.isExpr(n);    	non-compiled	[CE]  	7	None	replace
46	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n);  [CE]  [FE]                    AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isGetProp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n);	  return    NodeUtil.isExpr(n);    	non-compiled	[CE]  	7	None	replace
47	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n);    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
49	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
50	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]              [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION);	      	non-compiled	[CE]  	8	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction());  [CE]  [FE]                        AssertionFailedError    [CONTEXT]              [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction());  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction());	      	non-compiled	[CE]  	8	None	replace
53	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getNext();  [CE]  [FE]                          AssertionFailedError    [CONTEXT]              [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getNext();  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild().getNext();	      	non-compiled	[CE]  	8	None	replace
54	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isAssignmentOp(n);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isAssignmentOp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
55	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	3	None	replace
56	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	3	None	replace
57	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressionNode(n);  [CE]  [FE]        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	1	None	replace
58	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.getFoldExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	10	None	replace
59	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
60	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
61	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldBlock(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	5	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]              [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  	8	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]              [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK);	      	non-compiled	[CE]  	8	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK);  [CE]  [FE]                          AssertionFailedError    [CONTEXT]              [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.BLOCK);	      	non-compiled	[CE]  	8	None	replace
65	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [CE]  [FE]        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
66	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
67	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.mayEffectMutableState(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n);	  return    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	9	None	replace
68	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this);  [CE]  [FE]          AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this);	  return    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	2	None	replace
69	[BUG]  [BUGGY]  return  NodeUtil.isFunction(n);  [CE]  [FE]              AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFunction(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFunction(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
70	[BUG]  [BUGGY]  return  NodeUtil.isImmutableAssignmentOp(n);  [CE]  [FE]                AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isImmutableAssignmentOp(n);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	4	None	replace
71	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock);  [CE]  [FE]            AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock);	  return    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	3	None	replace
72	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  maybeExpr);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isFold(n,  maybeExpr);  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  maybeExpr);	  return    NodeUtil.isFold(n);    	non-compiled	[CE]  	6	None	replace
73	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n.getFirstChild());  [CE]  [FE]        AssertionFailedError    [CONTEXT]              [BUGGY]  return  NodeUtil.isExpressionNode(n.getFirstChild());  [BUGGY]    }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n.getFirstChild());	  return    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	1	None	replace
