bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n);  [CE]  [FE]    AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isExpressionNode(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
2	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]      AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
3	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]        AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
4	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n);  [CE]  [FE]          AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isAssignmentOp(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
5	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n);  [CE]  [FE]            AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isFoldBlock(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
6	[BUG]  [BUGGY]  return  NodeUtil.isFold(n);  [CE]  [FE]              AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isFold(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
7	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n);  [CE]  [FE]                AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isExpr(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
8	[BUG]  [BUGGY]    [CE]  [FE]                  AssertionFailedError  [CONTEXT]            [BUGGY]    [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	  	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
9	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]    AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.mayHaveSideEffects(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
10	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]      AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isFoldExpressionNode(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
11	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n);  [CE]  [FE]    AssertionFailedError  [CONTEXT]            [BUGGY]  return  NodeUtil.isExprBlock(n);  [BUGGY]  }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n);	return  NodeUtil.isExpressionNode(maybeExpr);  	non-compiled	[CE]  	71	None	replace
