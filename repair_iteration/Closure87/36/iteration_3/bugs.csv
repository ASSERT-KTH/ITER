bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  NOT_SAFE_TO_FOLD_WITHOUT_ARGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  NOT_SAFE_TO_FOLD_WITHOUT_ARGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  NOT_SAFE_TO_FOLD_WITHOUT_ARGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
2	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
3	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  ImmutableSet);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  ImmutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  ImmutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
4	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  FOLD_TO_FOLD_WITHOUT_ARGS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  FOLD_TO_FOLD_WITHOUT_ARGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  FOLD_TO_FOLD_WITHOUT_ARGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
5	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  immutableSet);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  immutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  immutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
6	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
7	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
8	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  PROPERTY);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  PROPERTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  PROPERTY);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
9	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
10	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.EXPR_RESULT);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  n.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
16	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n)||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	30	None	replace
17	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)&&  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)&&  NodeUtil.isFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n)&&  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n)||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	30	None	replace
18	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n)||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	30	None	replace
19	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n)||  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n)||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	30	None	replace
20	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n)||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	30	None	replace
21	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.isFoldExpressionNode(n)||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	30	None	replace
22	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  maybeExpr);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n,  maybeExpr);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
23	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  this.maybeExpr);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n,  this.maybeExpr);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
24	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  0);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  0);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n,  0);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
25	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(this.maybeExpr);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(this.maybeExpr);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
26	[BUG]  [BUGGY]  n  =  NodeUtil.getFoldExpressionNode(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  n  =  NodeUtil.getFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	n  =  NodeUtil.getFoldExpressionNode(n);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
27	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  this);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  this);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n,  this);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
28	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getLastChild();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getLastChild();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getLastChild();	  Node    maybeExpr    =    n.getNext();    	non-compiled	[CE]  	34	None	replace
29	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getInitializingChild();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getInitializingChild();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getInitializingChild();	  Node    maybeExpr    =    n.getNext();    	non-compiled	[CE]  	34	None	replace
30	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getAncestor(1);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getAncestor(1);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getAncestor(1);	  Node    maybeExpr    =    n.getNext();    	non-compiled	[CE]  	34	None	replace
31	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFolder();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getFolder();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFolder();	  Node    maybeExpr    =    n.getNext();    	non-compiled	[CE]  	34	None	replace
32	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isImmutableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	19	None	replace
33	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.isImmutableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	19	None	replace
34	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  this.maybeExpr);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  this.maybeExpr);	  return    NodeUtil.isImmutableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	19	None	replace
35	[BUG]  [BUGGY]  return  NodeUtil.isFoldArrayExpressionNode(n,  maybeExpr);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldArrayExpressionNode(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldArrayExpressionNode(n,  maybeExpr);	  return    NodeUtil.isImmutableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	19	None	replace
36	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  n);	  return    NodeUtil.isImmutableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	19	None	replace
37	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isFold(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isFold(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)||  NodeUtil.isFold(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFold(n);    	non-compiled	[CE]  	42	None	replace
38	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpr(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpr(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpr(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFold(n);    	non-compiled	[CE]  	42	None	replace
39	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExported(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExported(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExported(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFold(n);    	non-compiled	[CE]  	42	None	replace
40	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isExpressionNode(n);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
41	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
42	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
43	[BUG]  [BUGGY]  return  NodeUtil.isFoldArray(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldArray(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldArray(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
44	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldArrayOperator(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldArrayOperator(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldArrayOperator(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
45	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldArrayAction(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldArrayAction(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldArrayAction(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
46	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	57	None	replace
47	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayNode(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	57	None	replace
48	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayOperator(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayOperator(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayOperator(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	57	None	replace
49	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldBlock(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldBlock(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	57	None	replace
50	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayAlternate(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayAlternate(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayAlternate(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	57	None	replace
51	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  false);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  false);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
52	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  ImmutableSet);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  ImmutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  ImmutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
53	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  immutableSet);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  immutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  immutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
54	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isExpressBlock());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isExpressBlock());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isExpressBlock());	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
55	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  true);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  true);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
56	[BUG]  [BUGGY]  return  NodeUtil.shouldHaveSideEffects(n,  isFoldableExpressBlock());  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.shouldHaveSideEffects(n,  isFoldableExpressBlock());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.shouldHaveSideEffects(n,  isFoldableExpressBlock());	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
57	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	55	None	replace
58	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	55	None	replace
59	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayExpressionNode(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayExpressionNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	55	None	replace
60	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getLastChild().getNext();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getLastChild().getNext();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getLastChild().getNext();	  Node    maybeExpr    =    n.getFirstChild().getNext();    	non-compiled	[CE]  	53	None	replace
61	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getParent();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getParent();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild().getParent();	  Node    maybeExpr    =    n.getFirstChild().getNext();    	non-compiled	[CE]  	53	None	replace
62	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getLastChild();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getLastChild();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild().getLastChild();	  Node    maybeExpr    =    n.getFirstChild().getNext();    	non-compiled	[CE]  	53	None	replace
63	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getInitializingChild();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getInitializingChild();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild().getInitializingChild();	  Node    maybeExpr    =    n.getFirstChild().getNext();    	non-compiled	[CE]  	53	None	replace
64	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isExpressionNode(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFoldBlock(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	5	None	replace
65	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isFoldBlock(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	5	None	replace
66	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionBlock(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFoldBlock(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	5	None	replace
67	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionNode(n,  maybeExpr);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionNode(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionNode(n,  maybeExpr);	  return    NodeUtil.isFoldBlock(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	5	None	replace
68	[BUG]  [BUGGY]  return  NodeUtil.isFoldArrayAssignmentOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldArrayAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldArrayAssignmentOp(n);	  return    NodeUtil.isImmutableAssignmentOp(n);    	non-compiled	[CE]  	70	None	replace
69	[BUG]  [BUGGY]  return  NodeUtil.isImmutableAssignmentOp(n)||  NodeUtil.isImmutableAssignmentOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableAssignmentOp(n)||  NodeUtil.isImmutableAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableAssignmentOp(n)||  NodeUtil.isImmutableAssignmentOp(n);	  return    NodeUtil.isImmutableAssignmentOp(n);    	non-compiled	[CE]  	70	None	replace
70	[BUG]  [BUGGY]  return  NodeUtil.isExpressionAssignmentOp(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionAssignmentOp(n);	  return    NodeUtil.isImmutableAssignmentOp(n);    	non-compiled	[CE]  	70	None	replace
71	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  true);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  true);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
72	[BUG]  [BUGGY]  return  NodeUtil.shouldHaveSideEffects(n,  true);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.shouldHaveSideEffects(n,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.shouldHaveSideEffects(n,  true);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
73	[BUG]  [BUGGY]  return  NodeUtil.canHaveSideEffects(n,  true);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.canHaveSideEffects(n,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.canHaveSideEffects(n,  true);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
74	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(n,  true);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  NodeUtil.mayHaveSideEffects(n,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeUtil.mayHaveSideEffects(n,  true);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
75	[BUG]  [BUGGY]  return  NodeUtil.mayEffectSideEffects(n,  true);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectSideEffects(n,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectSideEffects(n,  true);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
82	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);	  return    NodeUtil.mayHaveSideEffects(n,    maybeExpr);    	non-compiled	[CE]  	13	None	replace
83	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    maybeExpr);    	non-compiled	[CE]  	13	None	replace
84	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this.maybeExpr);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  this.maybeExpr);	  return    NodeUtil.mayHaveSideEffects(n,    maybeExpr);    	non-compiled	[CE]  	13	None	replace
85	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
86	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
87	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
88	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressionNode(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
89	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
90	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldArrayExpressionNode(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldArrayExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFoldArrayExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
91	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionBlock(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionBlock(n);	  return    NodeUtil.isExpressionBlock(n);    	non-compiled	[CE]  	1	None	replace
92	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n)||  NodeUtil.isExpressionBlock(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionBlock(n)||  NodeUtil.isExpressionBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n)||  NodeUtil.isExpressionBlock(n);	  return    NodeUtil.isExpressionBlock(n);    	non-compiled	[CE]  	1	None	replace
93	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionBlock(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionBlock(n);    	non-compiled	[CE]  	1	None	replace
94	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n,  maybeExpr);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionBlock(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n,  maybeExpr);	  return    NodeUtil.isExpressionBlock(n);    	non-compiled	[CE]  	1	None	replace
95	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpression(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpression(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpression(n);	  return    NodeUtil.isExpr(maybeExpr);    	non-compiled	[CE]  	45	None	replace
96	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFoldableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	22	None	replace
97	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.isFoldableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	22	None	replace
98	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  n);	  return    NodeUtil.isFoldableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	22	None	replace
99	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);	  return    NodeUtil.isFoldableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	22	None	replace
100	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isFoldBlock(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
101	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
102	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressionOp(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
103	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
104	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isFoldBlock(n);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
105	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
106	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
107	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
108	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
109	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
110	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
111	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  isFoldableExpressBlock);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  isFoldableExpressBlock);	  return    NodeUtil.isFoldableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	25	None	replace
112	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock,  maybeExpr);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock,  maybeExpr);	  return    NodeUtil.isFoldableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	25	None	replace
113	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock,  false);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  isFoldableExpressBlock,  false);	  return    NodeUtil.isFoldableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	25	None	replace
114	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
115	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  maybeExpr);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  maybeExpr);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
116	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS,  maybeExpr);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS,  maybeExpr);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
117	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  REGEXP_FLAGS_RE);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  REGEXP_FLAGS_RE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  REGEXP_FLAGS_RE);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
118	[BUG]  [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
119	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlockExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlockExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlockExpressionNode(n);	  return    NodeUtil.isFoldArrayExpressionNode(n);    	non-compiled	[CE]  	18	None	replace
120	[BUG]  [BUGGY]  ||  NodeUtil.isFoldArrayExpressionNode(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldArrayExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldArrayExpressionNode(n);	  return    NodeUtil.isFoldArrayExpressionNode(n);    	non-compiled	[CE]  	18	None	replace
121	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n.getLastChild());  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n.getLastChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n.getLastChild());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
122	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n.getFirstChild());  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n.getFirstChild());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
123	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n.getNext());  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n.getNext());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n.getNext());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
124	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n.getFirstChild());  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n.getFirstChild());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
125	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n.getParent());  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n.getParent());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n.getParent());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
126	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n.getType());  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n.getType());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n.getType());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
127	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
128	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
129	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  this.maybeExpr);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  this.maybeExpr);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
130	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  OR_PRECEDENCE);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  OR_PRECEDENCE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  OR_PRECEDENCE);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
131	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  n);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
132	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
133	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  STANDARD_OBJECT_CONSTRUCTORS);	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
134	[BUG]  [BUGGY]  Predicates.checkState(n.getType()!=  Token.EXPR_RESULT);  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()!=  Token.EXPR_RESULT);	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
135	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                          AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
136	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);  [CE]  [FE]                                            AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  REGEXP_FLAGS_RE);	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
137	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [CE]  [FE]                                              AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
138	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                                AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
139	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getOwner();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getOwner();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getOwner();	  Node    maybeExpr    =    n.getParent();    	non-compiled	[CE]  	36	None	replace
140	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isExpressionNode(n);	  ||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	17	None	replace
141	[BUG]  [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.mayHaveSideEffects(n);	  ||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	17	None	replace
142	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isAssignmentOp(n);	  ||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	17	None	replace
143	[BUG]  [BUGGY]  ||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldBlock(n);	  ||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	17	None	replace
144	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.BLOCK);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.BLOCK);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()!=  Token.BLOCK);	  Preconditions.checkArgument(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	64	None	replace
145	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	64	None	replace
146	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	64	None	replace
147	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPRESSION);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPRESSION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPRESSION);	  Preconditions.checkArgument(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	64	None	replace
148	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EMPTY);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EMPTY);	  Preconditions.checkArgument(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	64	None	replace
149	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExprBlock(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
150	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n,  this.maybeExpr);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionBlock(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n,  this.maybeExpr);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
151	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  maybeExpr);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n,  maybeExpr);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
152	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n,  maybeExpr);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n,  maybeExpr);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
153	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n,  n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionBlock(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n,  n);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
154	[BUG]  [BUGGY]  return  NodeUtil.isExpressionBlock(n,  isFoldableExpressBlock);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionBlock(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionBlock(n,  isFoldableExpressBlock);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
155	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
156	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  this.maybeExpr);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  this.maybeExpr);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
157	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(this.maybeExpr,  n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(this.maybeExpr,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(this.maybeExpr,  n);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
158	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
159	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  false);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  false);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
160	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  n.cloneTree());  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  n.cloneTree());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr,  n.cloneTree());	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
161	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  false);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  false);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
162	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this.isFoldableExpressBlock);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this.isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  this.isFoldableExpressBlock);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
163	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  isExpr);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  isExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  isExpr);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
164	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
165	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  true);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  true);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
166	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
167	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
168	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  false);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  false);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
169	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
170	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
171	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
172	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
173	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
174	[BUG]  [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isName(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
175	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
176	[BUG]  [BUGGY]  return  NodeUtil.isAssign(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssign(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssign(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
177	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOperator(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOperator(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOperator(n);	  return    NodeUtil.isFoldArrayOperator(n);    	non-compiled	[CE]  	9	None	replace
178	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlockOperator(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlockOperator(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlockOperator(n);	  return    NodeUtil.isFoldArrayOperator(n);    	non-compiled	[CE]  	9	None	replace
179	[BUG]  [BUGGY]  return  NodeUtil.isFoldArrayOperator(n,  complementOperator);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldArrayOperator(n,  complementOperator);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldArrayOperator(n,  complementOperator);	  return    NodeUtil.isFoldArrayOperator(n);    	non-compiled	[CE]  	9	None	replace
180	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.isExpr(n,    maybeExpr);    	non-compiled	[CE]  	44	None	replace
181	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isExpr(n,    maybeExpr);    	non-compiled	[CE]  	44	None	replace
182	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  n);	  return    NodeUtil.isExpr(n,    maybeExpr);    	non-compiled	[CE]  	44	None	replace
183	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  n);	  return    NodeUtil.isExpr(n,    maybeExpr);    	non-compiled	[CE]  	44	None	replace
184	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.BLOCK);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()!=  Token.BLOCK);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()!=  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
185	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPRESSION);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPRESSION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPRESSION);	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
187	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
188	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EMPTY);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.EMPTY);	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
189	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
190	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	54	None	replace
191	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressionOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressionOp(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	54	None	replace
192	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldArrayOp(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	54	None	replace
193	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.getNext();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.getNext();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.getNext();	  Node    maybeExpr    =(Node)n.clone();    	non-compiled	[CE]  	37	None	replace
194	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.getParent();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.getParent();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.getParent();	  Node    maybeExpr    =(Node)n.clone();    	non-compiled	[CE]  	37	None	replace
195	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.cloneTree();  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.cloneTree();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.cloneTree();	  Node    maybeExpr    =(Node)n.clone();    	non-compiled	[CE]  	37	None	replace
196	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.getLastChild();  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.getLastChild();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.getLastChild();	  Node    maybeExpr    =(Node)n.clone();    	non-compiled	[CE]  	37	None	replace
197	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.cloneChildren();  [CE]  [FE]                                          AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.cloneChildren();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.cloneChildren();	  Node    maybeExpr    =(Node)n.clone();    	non-compiled	[CE]  	37	None	replace
198	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n);	  ||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	24	None	replace
199	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);	  ||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	24	None	replace
200	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
201	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
202	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  this.maybeExpr);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  this.maybeExpr);	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
203	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  OR_PRECEDENCE);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  OR_PRECEDENCE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  OR_PRECEDENCE);	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
204	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
205	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  immutableSet);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  immutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  immutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    this);    	non-compiled	[CE]  	15	None	replace
206	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  this)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    this);    	non-compiled	[CE]  	15	None	replace
207	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  this)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    this);    	non-compiled	[CE]  	15	None	replace
208	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
209	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
210	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
211	[BUG]  [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isName(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
212	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isAssignmentOp(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isAssignmentOp(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isAssignmentOp(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
213	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
214	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
215	[BUG]  [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
216	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
217	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.UNKNOWN);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.UNKNOWN);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.UNKNOWN);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
218	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.BLOCK);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.BLOCK);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.BLOCK);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
219	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  isFoldableExpressBlock);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n,  isFoldableExpressBlock);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
220	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
221	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.mayEffectMutableState(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.mayEffectMutableState(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.mayEffectMutableState(n);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
222	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffectsBlock(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffectsBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffectsBlock(n);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
223	[BUG]  [BUGGY]  ||  NodeUtil.mayEffectMutableState(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.mayEffectMutableState(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.mayEffectMutableState(n);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
224	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  REGEXP_FLAGS_RE);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  REGEXP_FLAGS_RE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  REGEXP_FLAGS_RE);	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
225	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  STANDARD_OBJECT_CONSTRUCTORS);	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
226	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  DONT_TRAVERSE_FUNCTIONS_PREDICATE);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  DONT_TRAVERSE_FUNCTIONS_PREDICATE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  DONT_TRAVERSE_FUNCTIONS_PREDICATE);	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
227	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  n,  new  FoldArrayAction());  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  AssertionFailedError.traverse(compiler,  n,  new  FoldArrayAction());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	AssertionFailedError.traverse(compiler,  n,  new  FoldArrayAction());	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
228	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  this);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  this);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  this);	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
229	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldBlockAction());  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldBlockAction());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  FoldBlockAction());	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
230	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)&&  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)&&  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)&&  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	43	None	replace
231	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isExpressionOp(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)||  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	43	None	replace
232	[BUG]  [BUGGY]  return  NodeUtil.isAssign(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssign(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssign(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	43	None	replace
233	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.isFoldableExpressBlock(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.isFoldableExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.isFoldableExpressBlock(n);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
234	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressBlock(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressBlock(n);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
235	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)&&  NodeUtil.isFoldableExpressBlock(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)&&  NodeUtil.isFoldableExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n)&&  NodeUtil.isFoldableExpressBlock(n);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
236	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  false);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n,  false);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
237	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  this.maybeExpr);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n,  this.maybeExpr);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
238	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)||  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	61	None	replace
239	[BUG]  [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n)||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n)||  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldAssignmentOp(n)||  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	61	None	replace
240	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock,  maybeExpr);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock,  maybeExpr);	  return    NodeUtil.isImmutableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	71	None	replace
241	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock,  false);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  isFoldableExpressBlock,  false);	  return    NodeUtil.isImmutableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	71	None	replace
242	[BUG]  [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n  +  1);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n  +  1);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldExpressionNode(n  +  1);	  ||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	32	None	replace
243	[BUG]  [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n,  false);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldExpressionNode(n,  false);	  ||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	32	None	replace
244	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPRESSION);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPRESSION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()!=  Token.EXPRESSION);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
245	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  STANDARD_OBJECT_CONSTRUCTORS);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
246	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.EXPRESSION);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.EXPRESSION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.EXPRESSION);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.EMPTY);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.EMPTY);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
249	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.BLOCK);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.BLOCK);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.BLOCK);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
250	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.removeFirstChild();  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.removeFirstChild();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.removeFirstChild();	  Node    maybeExpr    =(Node)n.getFirstChild();    	non-compiled	[CE]  	38	None	replace
251	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  ImmutableSet);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  ImmutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  ImmutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_CONSTRUCTORS);    	non-compiled	[CE]  	11	None	replace
252	[BUG]  [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_CONSTRUCTORS);    	non-compiled	[CE]  	11	None	replace
253	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  immutableSet);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  immutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  immutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_CONSTRUCTORS);    	non-compiled	[CE]  	11	None	replace
254	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isStatementOp(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isStatementOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
255	[BUG]  [BUGGY]  return  NodeUtil.isStatementOp(n)||  NodeUtil.isStatementOp(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isStatementOp(n)||  NodeUtil.isStatementOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isStatementOp(n)||  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
256	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isStatementOp(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isStatementOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)||  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
257	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
258	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n,  maybeExpr);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isStatementOp(n,  maybeExpr);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
259	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isExpressionOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)||  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	8	None	replace
260	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	8	None	replace
261	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
262	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  maybeExpr.getType()!=  Token.EXPR_RESULT;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  maybeExpr.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  maybeExpr.getType()!=  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
263	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  n.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  n.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  n.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
264	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
265	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
266	[BUG]  [BUGGY]  return  NodeUtil.isName(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isName(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isName(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
267	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)&&  NodeUtil.isExpressionNode(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)&&  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)&&  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	40	None	replace
268	[BUG]  [BUGGY]  return  NodeUtil.isAssign(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssign(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssign(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	40	None	replace
269	[BUG]  [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	40	None	replace
270	[BUG]  [BUGGY]  Node  maybeExpr  =  n.removeFirstChild();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.removeFirstChild();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.removeFirstChild();	  Node    maybeExpr    =    n.getFirstChild();    	non-compiled	[CE]  	33	None	replace
271	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isExpressionOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	7	None	replace
272	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldArrayOperator(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldArrayOperator(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldArrayOperator(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	7	None	replace
273	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionOp(n,  maybeExpr);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionOp(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressionOp(n,  maybeExpr);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	7	None	replace
274	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	59	None	replace
275	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	59	None	replace
276	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	59	None	replace
277	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	59	None	replace
278	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isFold(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isFold(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)&&  NodeUtil.isFold(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFold(n);    	non-compiled	[CE]  	41	None	replace
279	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFold(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFold(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFold(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFold(n);    	non-compiled	[CE]  	41	None	replace
280	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isFold(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isFold(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)||  NodeUtil.isFold(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFold(n);    	non-compiled	[CE]  	41	None	replace
281	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	60	None	replace
282	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	60	None	replace
283	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isSyntheticBlock(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isSyntheticBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isSyntheticBlock(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	60	None	replace
284	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n,  maybeExpr);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n,  maybeExpr);	  return    NodeUtil.isGetProp(n);    	non-compiled	[CE]  	46	None	replace
285	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isGetProp(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isGetProp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isGetProp(n);	  return    NodeUtil.isGetProp(n);    	non-compiled	[CE]  	46	None	replace
286	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isGetProp(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isGetProp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isGetProp(n);	  return    NodeUtil.isGetProp(n);    	non-compiled	[CE]  	46	None	replace
287	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isGetProp(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isGetProp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)||  NodeUtil.isGetProp(n);	  return    NodeUtil.isGetProp(n);    	non-compiled	[CE]  	46	None	replace
288	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpress(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpress(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpress(n);	  return    NodeUtil.isExpressBlock(n);    	non-compiled	[CE]  	2	None	replace
289	[BUG]  [BUGGY]  return  NodeUtil.isExpressBlock(n)||  NodeUtil.isFoldableExpressBlock(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressBlock(n)||  NodeUtil.isFoldableExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressBlock(n)||  NodeUtil.isFoldableExpressBlock(n);	  return    NodeUtil.isExpressBlock(n);    	non-compiled	[CE]  	2	None	replace
290	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressBlock(n)||  NodeUtil.isFoldExpressBlock(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressBlock(n)||  NodeUtil.isFoldExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressBlock(n)||  NodeUtil.isFoldExpressBlock(n);	  return    NodeUtil.isFoldExpressBlock(n);    	non-compiled	[CE]  	3	None	replace
291	[BUG]  [BUGGY]  ||  NodeUtil.isFoldExpressBlock(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldExpressBlock(n);	  return    NodeUtil.isFoldExpressBlock(n);    	non-compiled	[CE]  	3	None	replace
292	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressBlock(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressBlock(n);	  return    NodeUtil.isFoldExpressBlock(n);    	non-compiled	[CE]  	3	None	replace
293	[BUG]  [BUGGY]  return  NodeUtil.isFunction(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFunction(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFunction(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFunction(n);    	non-compiled	[CE]  	69	None	replace
294	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFunction(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFunction(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFunction(n);	  return    NodeUtil.isFunction(n);    	non-compiled	[CE]  	69	None	replace
295	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFunction(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFunction(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isFunction(n);	  return    NodeUtil.isFunction(n);    	non-compiled	[CE]  	69	None	replace
296	[BUG]  [BUGGY]  return  NodeUtil.isFunction(n)||  NodeUtil.isFunction(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFunction(n)||  NodeUtil.isFunction(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFunction(n)||  NodeUtil.isFunction(n);	  return    NodeUtil.isFunction(n);    	non-compiled	[CE]  	69	None	replace
297	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.isExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	28	None	replace
298	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.isExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	28	None	replace
299	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  OR_PRECEDENCE);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  OR_PRECEDENCE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  OR_PRECEDENCE);	  return    NodeUtil.isExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	28	None	replace
300	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);	  return    NodeUtil.isExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	28	None	replace
301	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  false);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  false);	  return    NodeUtil.isFoldableExpressionNode(n,    this);    	non-compiled	[CE]  	68	None	replace
302	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  null);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  null);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  null);	  return    NodeUtil.isFoldableExpressionNode(n,    this);    	non-compiled	[CE]  	68	None	replace
303	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  this);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  this);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  this);	  return    NodeUtil.isFoldableExpressionNode(n,    this);    	non-compiled	[CE]  	68	None	replace
304	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this)||  NodeUtil.isFoldableExpressionNode(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this)||  NodeUtil.isFoldableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this)||  NodeUtil.isFoldableExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n,    this);    	non-compiled	[CE]  	68	None	replace
305	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EMPTY);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EMPTY);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
307	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_CONSTRUCTORS);    	non-compiled	[CE]  	11	None	replace
308	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_CONSTRUCTORS);    	non-compiled	[CE]  	11	None	replace
309	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_CONSTRUCTORS)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_CONSTRUCTORS);    	non-compiled	[CE]  	11	None	replace
310	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isFold(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isFold(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)||  NodeUtil.isFold(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFold(n);    	non-compiled	[CE]  	42	None	replace
311	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldExpressionNode(n)||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	30	None	replace
312	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_FIELD_EXPRESSION_FLAGS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_FIELD_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  STANDARD_OBJECT_FIELD_EXPRESSION_FLAGS);	  return    NodeUtil.isFoldableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	22	None	replace
313	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getPrevious();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getPrevious();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getPrevious();	  Node    maybeExpr    =    n.getParent();    	non-compiled	[CE]  	36	None	replace
314	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getAncestor(2);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getAncestor(2);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getAncestor(2);	  Node    maybeExpr    =    n.getParent();    	non-compiled	[CE]  	36	None	replace
315	[BUG]  [BUGGY]  return  NodeUtil.isFold(parent)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(parent)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(parent)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	43	None	replace
316	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	40	None	replace
317	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  IS_FOLDABLE_EXPRESSION_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  IS_FOLDABLE_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  IS_FOLDABLE_EXPRESSION_FLAGS);	  return    NodeUtil.isImmutableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	71	None	replace
318	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  IS_FOLDABLE_EXPRESSION_FLAGS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  IS_FOLDABLE_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  IS_FOLDABLE_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
319	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
320	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldBlock(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	5	None	replace
321	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpr(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpr(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpr(n);	  return    NodeUtil.isFoldBlock(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	5	None	replace
322	[BUG]  [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n);	  ||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	32	None	replace
323	[BUG]  [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);	  ||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	32	None	replace
324	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldExpressionNode(n);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldExpressionNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	57	None	replace
325	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
326	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
327	[BUG]  [BUGGY]  AssertionFailedError.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  AssertionFailedError.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	AssertionFailedError.checkState(n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
329	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n)&&  NodeUtil.mayHaveSideEffects(n);	  ||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	24	None	replace
330	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n  -  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n  -  1);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n  -  1);	  ||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	24	None	replace
331	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isExpressionOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)||  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	7	None	replace
332	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldExpressionOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFoldExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	7	None	replace
333	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)?  NodeUtil.mayHaveSideEffects(n):  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)?  NodeUtil.mayHaveSideEffects(n):  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)?  NodeUtil.mayHaveSideEffects(n):  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
334	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)?  true  :  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)?  true  :  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)?  true  :  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
335	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressBlock(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isExpressBlock(n);	  return    NodeUtil.isExpressBlock(n);    	non-compiled	[CE]  	2	None	replace
336	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressBlock(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)&&  NodeUtil.isExpressBlock(n);	  return    NodeUtil.isExpressBlock(n);    	non-compiled	[CE]  	2	None	replace
337	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressBlock(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isExpressBlock(n);	  return    NodeUtil.isExpressBlock(n);    	non-compiled	[CE]  	2	None	replace
338	[BUG]  [BUGGY]  AssertionFailedError.checkState(NodeUtil.mayHaveSideEffects(n,  false));  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  AssertionFailedError.checkState(NodeUtil.mayHaveSideEffects(n,  false));  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	AssertionFailedError.checkState(NodeUtil.mayHaveSideEffects(n,  false));	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
339	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  false)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  false)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  false)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
340	[BUG]  [BUGGY]  AssertionFailedError.checkState(NodeUtil.mayHaveSideEffects(n,  true);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  AssertionFailedError.checkState(NodeUtil.mayHaveSideEffects(n,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	AssertionFailedError.checkState(NodeUtil.mayHaveSideEffects(n,  true);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
341	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  false)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  false)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  false)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
342	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
343	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STRICT_OBJECT_CONSTRUCTORS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STRICT_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STRICT_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    maybeExpr);    	non-compiled	[CE]  	13	None	replace
344	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExprBlock(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
345	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n,  n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n,  n);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
346	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExprBlock(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n,  STANDARD_OBJECT_EXPRESSION_FLAGS);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
347	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n,  STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
348	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  false);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n,  false);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
349	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
350	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)||  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
351	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS)&&  NodeUtil.mayHaveSideEffects	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
352	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  FALSE_OBJECT_CONSTRUCTORS);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  FALSE_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  FALSE_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
353	[BUG]  [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n)&&  NodeUtil.isFoldBlock(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n)&&  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldAssignmentOp(n)&&  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
354	[BUG]  [BUGGY]  return  NodeUtil.isExpressBlock(n)&&  NodeUtil.isFoldBlock(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressBlock(n)&&  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressBlock(n)&&  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
355	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldBlock(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)&&  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	4	None	replace
356	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getPredicate();  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getPredicate();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild().getPredicate();	  Node    maybeExpr    =    n.getFirstChild().getNext();    	non-compiled	[CE]  	53	None	replace
357	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getPrevious();  [CE]  [FE]                                AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getPrevious();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild().getPrevious();	  Node    maybeExpr    =    n.getFirstChild().getNext();    	non-compiled	[CE]  	53	None	replace
358	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressBlock(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressBlock(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressBlock(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldExpressBlock(n);    	non-compiled	[CE]  	3	None	replace
359	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldExpressBlock(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldExpressBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFoldExpressBlock(n);	  return    NodeUtil.isFoldExpressBlock(n);    	non-compiled	[CE]  	3	None	replace
360	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldableExpressionNode(n,    this);    	non-compiled	[CE]  	68	None	replace
361	[BUG]  [BUGGY]  return  NodeUtil.isExpressBlock(n)||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressBlock(n)||  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressBlock(n)||  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	61	None	replace
362	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isFoldBlock(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isFoldBlock(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)||  NodeUtil.isFoldBlock(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isFoldBlock(n);    	non-compiled	[CE]  	61	None	replace
363	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_FIELD_EXPRESSION_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_FIELD_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_FIELD_EXPRESSION_FLAGS);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
364	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_FLAGS);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  STANDARD_OBJECT_FLAGS);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
365	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
366	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
367	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
368	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  NOT_SAFE_TO_FOLD);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  NOT_SAFE_TO_FOLD);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  NOT_SAFE_TO_FOLD);	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
369	[BUG]  [BUGGY]  return  NodeUtil.isFoldProp(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldProp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldProp(n);	  return    NodeUtil.isGetProp(n);    	non-compiled	[CE]  	46	None	replace
370	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isStatementOp(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)||  NodeUtil.isStatementOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)||  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
371	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isStatementOp(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isStatementOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
372	[BUG]  [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.isStatementOp(n);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isName(n)||  NodeUtil.isStatementOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isName(n)||  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
373	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isImmutableAssignmentOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isImmutableAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isImmutableAssignmentOp(n);	  return    NodeUtil.isImmutableAssignmentOp(n);    	non-compiled	[CE]  	70	None	replace
374	[BUG]  [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldAssignmentOp(n);	  return    NodeUtil.isImmutableAssignmentOp(n);    	non-compiled	[CE]  	70	None	replace
375	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  FoldArrayAction(),  INVALID_REGULAR_EXPRESSION_FLAGS);	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
376	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ImmutableSet());  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ImmutableSet());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  new  ImmutableSet());	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
377	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock())&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock())&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock())&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
378	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this.isFoldableExpressBlock());  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this.isFoldableExpressBlock());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  this.isFoldableExpressBlock());	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
379	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
380	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY_STRING);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY_STRING);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY_STRING);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
381	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)+  1;  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)+  1;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY)+  1;	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
382	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.UNKNOWN);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.UNKNOWN);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.UNKNOWN);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
383	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr  +  1);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr  +  1);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr  +  1);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
384	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr  -  1);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr  -  1);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.maybeExpr  -  1);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
385	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.expressBlock);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.expressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.expressBlock);	  return    NodeUtil.isFoldableExpressionNode(n,    this.maybeExpr);    	non-compiled	[CE]  	26	None	replace
386	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n.getFirstChild());  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n.getFirstChild());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
387	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n.getFirstChild());  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n.getFirstChild());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
388	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n.getFirstChild());  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n.getFirstChild());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
389	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  OR_PRECEDENCE);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	59	None	replace
390	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this)&&  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  this)&&  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  this)&&  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.mayHaveSideEffects(n,    this);    	non-compiled	[CE]  	15	None	replace
391	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  FALSE);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  FALSE);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  FALSE);	  return    NodeUtil.mayHaveSideEffects(n,    this);    	non-compiled	[CE]  	15	None	replace
392	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getOperator();  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getOperator();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getOperator();	  Node    maybeExpr    =    n.getNext();    	non-compiled	[CE]  	34	None	replace
393	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n,  n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n,  n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n,  n);	  return    NodeUtil.isExpr(n,    maybeExpr);    	non-compiled	[CE]  	44	None	replace
394	[BUG]  [BUGGY]  return  NodeUtil.isGetProp(n)&&  NodeUtil.isFold(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isGetProp(n)&&  NodeUtil.isFold(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isGetProp(n)&&  NodeUtil.isFold(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFold(n);    	non-compiled	[CE]  	41	None	replace
395	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  SAFE_TO_FOLD_WITHOUT_ARGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  SAFE_TO_FOLD_WITHOUT_ARGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  SAFE_TO_FOLD_WITHOUT_ARGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
396	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STANDARD_OBJECT_FOLD_WITHOUT_ARGS,  INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
397	[BUG]  [BUGGY]  return  NodeUtil.isForIn(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isForIn(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isForIn(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
398	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  INVALID_REGULAR_EXPRESSION_FLAGS);	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
399	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
400	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isExpr(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n)||  NodeUtil.isExpr(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n)||  NodeUtil.isExpr(n);	  return    NodeUtil.isExpressionNode(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	27	None	replace
401	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	55	None	replace
402	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
403	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n  +  1);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n  +  1);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n  +  1);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
404	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
405	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  INVALID_REGULAR_EXPRESSION);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  INVALID_REGULAR_EXPRESSION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  INVALID_REGULAR_EXPRESSION);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
406	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
407	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EMPTY);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EMPTY);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
408	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isForwardExpressionNode(n);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isForwardExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isForwardExpressionNode(n);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
409	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.getProp(Node.SOURCENAME_PROP);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.getProp(Node.SOURCENAME_PROP);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.getProp(Node.SOURCENAME_PROP);	  Node    maybeExpr    =(Node)n.clone();    	non-compiled	[CE]  	37	None	replace
410	[BUG]  [BUGGY]  Node  maybeExpr  =(Node)n.getProp(Node.SOURCEFILE_PROP);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =(Node)n.getProp(Node.SOURCEFILE_PROP);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =(Node)n.getProp(Node.SOURCEFILE_PROP);	  Node    maybeExpr    =(Node)n.clone();    	non-compiled	[CE]  	37	None	replace
411	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionOp(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionOp(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionOp(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
412	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isImmutableExpressionNode(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isImmutableExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)&&  NodeUtil.isImmutableExpressionNode(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	56	None	replace
413	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  isFoldableExpressBlock());  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  isFoldableExpressBlock());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  isFoldableExpressBlock());	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
414	[BUG]  [BUGGY]  return  NodeUtil.isFold(n,  isFoldableExpressBlock);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n,  isFoldableExpressBlock);	  return    NodeUtil.isFold(n,    maybeExpr);    	non-compiled	[CE]  	72	None	replace
415	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n.getFirstChild());  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExprBlock(n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n.getFirstChild());	  return    NodeUtil.isExpressionNode(n.getFirstChild());    	non-compiled	[CE]  	73	None	replace
416	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  isFoldableExpressBlock);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n,  isFoldableExpressBlock);	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
417	[BUG]  [BUGGY]  return  NodeUtil.getFoldExpressionNode(n.getFirstChild());  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.getFoldExpressionNode(n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.getFoldExpressionNode(n.getFirstChild());	  return    NodeUtil.getFoldExpressionNode(n);    	non-compiled	[CE]  	58	None	replace
418	[BUG]  [BUGGY]  Node  maybeExpr  =  n.cloneTree();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.cloneTree();  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.cloneTree();	  Node    maybeExpr    =    n.getFirstChild();    	non-compiled	[CE]  	33	None	replace
419	[BUG]  [BUGGY]  return  NodeUtil.isName(n)&&  NodeUtil.isFold(n);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isName(n)&&  NodeUtil.isFold(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isName(n)&&  NodeUtil.isFold(n);	  return    NodeUtil.isAssignmentOp(n)&&    NodeUtil.isFold(n);    	non-compiled	[CE]  	41	None	replace
420	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);	  ||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	24	None	replace
421	[BUG]  [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n  +  1);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldableExpressionNode(n  +  1);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldableExpressionNode(n  +  1);	  ||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	24	None	replace
422	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	7	None	replace
423	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.isExpressionOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.isExpressionOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n)||  NodeUtil.isExpressionOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	7	None	replace
424	[BUG]  [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n,  maybeExpr);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isFoldExpressionNode(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isFoldExpressionNode(n,  maybeExpr);	  ||    NodeUtil.isFoldExpressionNode(n);    	non-compiled	[CE]  	32	None	replace
425	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.isFoldableExpressBlock);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n,  this.isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n,  this.isFoldableExpressBlock);	  return    NodeUtil.isFoldableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	25	None	replace
426	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  FoldArrayAction());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  FoldArrayAction());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  FoldArrayAction());	  NodeTraversal.traverse(compiler,    n,    new    FoldArrayAction());    	non-compiled	[CE]  	52	None	replace
427	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  ImmutableSet.EMPTY);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  ImmutableSet.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n,  ImmutableSet.EMPTY);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
428	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  maybeExpr);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n,  maybeExpr);	  return    NodeUtil.mayEffectMutableState(n);    	non-compiled	[CE]  	67	None	replace
429	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFunctionDeclaration(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.isFunctionDeclaration(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	54	None	replace
430	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	54	None	replace
431	[BUG]  [BUGGY]  return  NodeUtil.isFunction(n,  maybeExpr);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFunction(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFunction(n,  maybeExpr);	  return    NodeUtil.isFunction(n);    	non-compiled	[CE]  	69	None	replace
432	[BUG]  [BUGGY]  return  NodeUtil.isFunction(n,  isFoldableExpressBlock);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFunction(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFunction(n,  isFoldableExpressBlock);	  return    NodeUtil.isFunction(n);    	non-compiled	[CE]  	69	None	replace
433	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isFold(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	43	None	replace
434	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
435	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)&&  maybeExpr.getType()  ==  Token.EXPR_RESULT;	  return    NodeUtil.isExpressionNode(n)&&    maybeExpr.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  	29	None	replace
436	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  maybeExpr);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  maybeExpr);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	48	None	replace
437	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  isFoldableExpressBlock());  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  isFoldableExpressBlock());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n,  isFoldableExpressBlock());	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
438	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(n));  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(n));  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(n));	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
439	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  isFoldableExpressBlock());  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  isFoldableExpressBlock());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock(),  isFoldableExpressBlock());	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock());    	non-compiled	[CE]  	16	None	replace
440	[BUG]  [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.mayHaveSideEffects(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpr(n)||  NodeUtil.mayHaveSideEffects(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpr(n)||  NodeUtil.mayHaveSideEffects(n);	  return    NodeUtil.isFold(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	47	None	replace
441	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
442	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
443	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	62	None	replace
444	[BUG]  [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
445	[BUG]  [BUGGY]  Predicates.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]                [BUGGY]  Predicates.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Predicates.checkArgument(n.getType()  ==  Token.EXPR_RESULT);	  Predicates.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	39	None	replace
446	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CATCH);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CATCH);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CATCH);	  Preconditions.checkArgument(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	64	None	replace
447	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  false);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  false);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n,  false);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
448	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  true);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  true);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n,  true);	  return    NodeUtil.mayHaveSideEffects(n,    false);    	non-compiled	[CE]  	14	None	replace
449	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STRICT_OBJECT_FOLD_WITHOUT_ARGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  STRICT_OBJECT_FOLD_WITHOUT_ARGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  STRICT_OBJECT_FOLD_WITHOUT_ARGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
450	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_FOLD_WITHOUT_ARGS);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_FOLD_WITHOUT_ARGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  SHORT_OBJECT_FOLD_WITHOUT_ARGS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FOLD_WITHOUT_ARGS);    	non-compiled	[CE]  	50	None	replace
451	[BUG]  [BUGGY]  return  NodeUtil.isFoldableAssignmentOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableAssignmentOp(n);	  return    NodeUtil.isImmutableAssignmentOp(n);    	non-compiled	[CE]  	70	None	replace
452	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	35	None	replace
453	[BUG]  [BUGGY]  return  NodeUtil.isExpressionNode(n,  isFoldableExpressBlock());  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionNode(n,  isFoldableExpressBlock());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionNode(n,  isFoldableExpressBlock());	  return    NodeUtil.isExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	28	None	replace
454	[BUG]  [BUGGY]  ||  NodeUtil.isImmutableExpressionNode(n,  ImmutableSet.EMPTY);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  ||  NodeUtil.isImmutableExpressionNode(n,  ImmutableSet.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	||  NodeUtil.isImmutableExpressionNode(n,  ImmutableSet.EMPTY);	  ||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	17	None	replace
455	[BUG]  [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isExpr(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressionOp(n)||  NodeUtil.isExpr(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressionOp(n)||  NodeUtil.isExpr(n);	  return    NodeUtil.isExpressionOp(n);    	non-compiled	[CE]  	8	None	replace
456	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  this.isFoldableExpressBlock);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  this.isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  this.isFoldableExpressBlock);	  return    NodeUtil.isImmutableExpressionNode(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	71	None	replace
457	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  isFoldableExpressBlock);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressionNode(n,  isFoldableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressionNode(n,  isFoldableExpressBlock);	  return    NodeUtil.isFoldExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	31	None	replace
458	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n,  maybeExpr);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isImmutableExpressionNode(n,  maybeExpr);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	60	None	replace
459	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isExpressionNode(n);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n)&&  NodeUtil.isExpressionNode(n);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	57	None	replace
460	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPRESSION);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPRESSION);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPRESSION);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
461	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  n.getFirstChild());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
462	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPRESSION  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.EXPRESSION);    	non-compiled	[CE]  	51	None	replace
463	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  IAST_OBJECT_CONSTRUCTORS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  IAST_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  IAST_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    STANDARD_OBJECT_FLAGS);    	non-compiled	[CE]  	49	None	replace
464	[BUG]  [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayEffectMutableState(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayEffectMutableState(n,  Item.INVALID_REGULAR_EXPRESSION_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
465	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.STANDARD_OBJECT_CONSTRUCTORS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  Item.STANDARD_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  Item.STANDARD_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    Item.INVALID_REGULAR_EXPRESSION_FLAGS);    	non-compiled	[CE]  	66	None	replace
466	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY_OBJECT_FLAGS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY_OBJECT_FLAGS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n)&&  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.EMPTY_OBJECT_FLAGS);	  return    NodeUtil.mayHaveSideEffects(n)&&    NodeUtil.isImmutableExpressionNode(n);    	non-compiled	[CE]  	55	None	replace
467	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  ImmutableSet.EMPTY);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  ImmutableSet.EMPTY);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  ImmutableSet.EMPTY);	  return    NodeUtil.isImmutableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	19	None	replace
468	[BUG]  [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  immutableExpressBlock);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isImmutableExpressionNode(n,  immutableExpressBlock);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isImmutableExpressionNode(n,  immutableExpressBlock);	  return    NodeUtil.isImmutableExpressionNode(n,    maybeExpr);    	non-compiled	[CE]  	19	None	replace
469	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.BOOLEAN);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.BOOLEAN);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  ImmutableSet.BOOLEAN);	  return    NodeUtil.mayHaveSideEffects(n,    ImmutableSet.EMPTY);    	non-compiled	[CE]  	65	None	replace
470	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.mayHaveSideEffects(n,  ImmutableSet);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.mayHaveSideEffects(n);    	non-compiled	[CE]  	59	None	replace
471	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  IGNORE_OBJECT_CONSTRUCTORS);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  IGNORE_OBJECT_CONSTRUCTORS);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  IGNORE_OBJECT_CONSTRUCTORS);	  return    NodeUtil.mayHaveSideEffects(n,    maybeExpr);    	non-compiled	[CE]  	13	None	replace
472	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n,  this.maybeExpr);  [CE]  [FE]            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExprBlock(n,  this.maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n,  this.maybeExpr);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
473	[BUG]  [BUGGY]  return  NodeUtil.isExpressBlock(n,  maybeExpr);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExpressBlock(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExpressBlock(n,  maybeExpr);	  return    NodeUtil.isExprBlock(n,    maybeExpr);    	non-compiled	[CE]  	20	None	replace
474	[BUG]  [BUGGY]  return  NodeUtil.isExprBlock(n)||  NodeUtil.isExpressionNode(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isExprBlock(n)||  NodeUtil.isExpressionNode(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isExprBlock(n)||  NodeUtil.isExpressionNode(n);	  return    NodeUtil.isFoldBlock(n)||    NodeUtil.isExpressionNode(n);    	non-compiled	[CE]  	5	None	replace
475	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpressBlock(n,  maybeExpr);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpressBlock(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpressBlock(n,  maybeExpr);	  return    NodeUtil.isFoldExpressBlock(n);    	non-compiled	[CE]  	3	None	replace
476	[BUG]  [BUGGY]  return  NodeUtil.isFoldExpr(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldExpr(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldExpr(n);	  return    NodeUtil.isFoldExpressBlock(n);    	non-compiled	[CE]  	3	None	replace
477	[BUG]  [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isStatementOp(n);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFold(n)||  NodeUtil.isStatementOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFold(n)||  NodeUtil.isStatementOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
478	[BUG]  [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFunctionDeclaration(n);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFunctionDeclaration(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isAssignmentOp(n)||  NodeUtil.isFunctionDeclaration(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isStatementOp(n);    	non-compiled	[CE]  	10	None	replace
479	[BUG]  [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  maybeExpr);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.mayHaveSideEffects(n,  isFoldableExpressBlock,  maybeExpr);	  return    NodeUtil.mayHaveSideEffects(n,    isFoldableExpressBlock);    	non-compiled	[CE]  	12	None	replace
480	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  this);  [CE]  [FE]              AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressBlock(n,  this);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressBlock(n,  this);	  return    NodeUtil.isFoldableExpressBlock(n);    	non-compiled	[CE]  	21	None	replace
481	[BUG]  [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldAssignmentOp(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldAssignmentOp(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
482	[BUG]  [BUGGY]  return  NodeUtil.isFunction(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFunction(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFunction(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
483	[BUG]  [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isAssignmentOp(n);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldBlock(n)||  NodeUtil.isAssignmentOp(n);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldBlock(n)||  NodeUtil.isAssignmentOp(n);	  return    NodeUtil.isAssignmentOp(n)||    NodeUtil.isAssignmentOp(n);    	non-compiled	[CE]  	6	None	replace
484	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK,  n.getFirstChild());  [CE]  [FE]                            AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK,  n.getFirstChild());  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
485	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CATCH);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CATCH);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Preconditions.checkState(n.getType()  ==  Token.BLOCK  ||  n.getType()  ==  Token.CATCH);	  Preconditions.checkState(n.getType()    ==    Token.BLOCK);    	non-compiled	[CE]  	63	None	replace
486	[BUG]  [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getAncestor(2);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]                [BUGGY]  Node  maybeExpr  =  n.getFirstChild().getAncestor(2);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	Node  maybeExpr  =  n.getFirstChild().getAncestor(2);	  Node    maybeExpr    =    n.getFirstChild().getNext();    	non-compiled	[CE]  	53	None	replace
487	[BUG]  [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);  [CE]  [FE]                AssertionFailedError      [CONTEXT]                [BUGGY]  return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);  [BUGGY]      }  }  return  false;  }  [CLASS]  PeepholeSubstituteAlternateSyntax  1  2  3  FoldArrayAction  [METHOD]  isFoldableExpressBlock  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  Pattern  REGEXP_FLAGS_RE  FoldArrayAction  NOT_SAFE_TO_FOLD  SAFE_TO_FOLD_WITHOUT_ARGS  SAFE_TO_FOLD_WITH_ARGS  boolean  ImmutableSet  STANDARD_OBJECT_CONSTRUCTORS  DiagnosticType  INVALID_REGULAR_EXPRESSION_FLAGS  Node  maybeExpr  n  int  AND_PRECEDENCE  OR_PRECEDENCE  complementOperator  Predicate  DONT_TRAVERSE_FUNCTIONS_PREDICATE  	projects/Closure87/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java	0.30151134457776363	533	533	1	replace	return  NodeUtil.isFoldableExpressionNode(n)||  NodeUtil.isFoldableExpressionNode(n,  maybeExpr);	  return    NodeUtil.isFoldableExpressionNode(n)||    NodeUtil.isFoldableExpressionNode(n);    	non-compiled	[CE]  	23	None	replace
