bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
14	[BUG] [BUGGY] int len = input.length(); [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; [BUGGY] int len = input.length(); [BUGGY] while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	
15	[BUG] [BUGGY] [FE] StringIndexOutOfBoundsException [CONTEXT] public final void translate(CharSequence input, Writer out) throws IOException { if (out == null) { throw new IllegalArgumentException("The Writer must not be null"); } if (input == null) { return; } int pos = 0; [BUGGY] [BUGGY] int len = input.length(); while (pos < len) { int consumed = translate(input, pos, out); if (consumed == 0) { char[] c = Character.toChars(Character.codePointAt(input, pos)); out.write(c); pos+= c.length; continue; }   [CLASS] CharSequenceTranslator [METHOD] translate [RETURN_TYPE] void  CharSequence input Writer out [VARIABLES] boolean CharSequence input Writer out int consumed len pos pt char[] c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	
