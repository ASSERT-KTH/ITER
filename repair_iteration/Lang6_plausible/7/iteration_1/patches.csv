bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.write(Character.toChars(input));  [CE]  no  suitable  method  found  for  toChars(CharSequence)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(Character.toChars(input));  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input));	      out.write(c);    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence)	18	None	replace
2	[BUG]  [BUGGY]  out.write(Character.toChars(input,  pos));  [CE]  no  suitable  method  found  for  toChars(CharSequence,int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(Character.toChars(input,  pos));  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.toChars(input,  pos));	      out.write(c);    	non-compiled	[CE]  no  suitable  method  found  for  toChars(CharSequence,int)	18	None	replace
3	[BUG]  [BUGGY]  out.write(pt);  [CE]  cannot  find  symbol  pt  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(pt);  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(pt);	      out.write(c);    	non-compiled	[CE]  cannot  find  symbol  pt	18	None	replace
4	[BUG]  [BUGGY]  int  len  =  output.length();  [CE]  cannot  find  symbol  output  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  output.length();  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  output.length();	  int    len    =    input.length()    -    1;    	non-compiled	[CE]  cannot  find  symbol  output	2	None	replace
5	[BUG]  [BUGGY]  char  len  =  input.length();  [CE]  possible  loss  of  precision  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char  len  =  input.length();  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  len  =  input.length();	  int    len    =    input.length()    -    1;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  =  input.length();  pos  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	        pos    =    input.length();    pos  =  input.length();	  	compilable	  [FE]  ComparisonFailure  	8	1	add
7	[BUG]  [BUGGY]      pos  =  input.length();  pos  =  input.length();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  =  input.length();  pos  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    =    input.length();    pos  =  input.length();	  	compilable	  [FE]  ComparisonFailure  	8	1	add
8	[BUG]  [BUGGY]      pos  =  input.length();  int  pos  =  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  =  input.length();  int  pos  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    =    input.length();    int  pos  =  input.length();	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	8	None	add
9	[BUG]  [BUGGY]      pos  =  input.length();  pos  =  output.length();  [CE]  cannot  find  symbol  output  [FE]        ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  =  input.length();  pos  =  output.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    =    input.length();    pos  =  output.length();	  	non-compiled	[CE]  cannot  find  symbol  output	8	None	add
10	[BUG]  [BUGGY]      pos  =  input.length();  pos  =  in.length();  [CE]  cannot  find  symbol  in  [FE]          ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  =  input.length();  pos  =  in.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    =    input.length();    pos  =  in.length();	  	non-compiled	[CE]  cannot  find  symbol  in	8	None	add
11	[BUG]  [BUGGY]  if(pos  <  0)  {  out.write('n');  pos++;  }  [CE]  cannot  find  symbol  len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  if(pos  <  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  <  0)  {  out.write('n');  pos++;  }	      if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  len	23	None	replace
12	[BUG]  [BUGGY]  pos  >  0)  {  out.write('n');  pos++;  }  [CE]  not  a  statement  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  >  0)  {  out.write('n');  pos++;  }	      if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  not  a  statement	23	None	replace
13	[BUG]  [BUGGY]  out.write('n');  pos++;  [CE]  cannot  find  symbol  len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write('n');  pos++;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write('n');  pos++;	      if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  len	23	None	replace
14	[BUG]  [BUGGY]  char[]  input  =  input.toChars(pos);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char[]  input  =  input.toChars(pos);  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toChars(pos);	      char[]    input    =    input.toChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	15	None	replace
15	[BUG]  [BUGGY]  char[]  input  =  input.toCharsArray();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char[]  input  =  input.toCharsArray();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toCharsArray();	      char[]    input    =    input.toChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	15	None	replace
16	[BUG]  [BUGGY]  char[]  input  =  input.toString();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char[]  input  =  input.toString();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.toString();	      char[]    input    =    input.toChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	15	None	replace
17	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
18	[BUG]  [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos++;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
19	[BUG]  [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  If(pos  >  0)  {  out.write('n');  pos++;  }  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  If(pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        if(pos    >    0)    {    out.write('n');    pos++;    }    If(pos  >  0)  {  out.write('n');  pos++;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
20	[BUG]  [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  pos  >  0)  {  out.write('n');  pos++;  }  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        if(pos    >    0)    {    out.write('n');    pos++;    }    pos  >  0)  {  out.write('n');  pos++;  }	  	non-compiled	[CE]  not  a  statement	22	None	add
21	[BUG]  [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  int  pos  >  0)  {  out.write('n');  pos++;  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  int  pos  >  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        if(pos    >    0)    {    out.write('n');    pos++;    }    int  pos  >  0)  {  out.write('n');  pos++;  }	  	non-compiled	[CE]  ';'  expected	22	None	add
22	[BUG]  [BUGGY]  CharSequence  input  =  input.getChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  CharSequence  input  =  input.getChars();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	CharSequence  input  =  input.getChars();	      char[]    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
23	[BUG]  [BUGGY]  Char[]  input  =  input.getChars();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  Char[]  input  =  input.getChars();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.getChars();	      char[]    input    =    input.getChars();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
24	[BUG]  [BUGGY]  char[]  input  =  output.getChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char[]  input  =  output.getChars();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  output.getChars();	      char[]    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
25	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  -  pos;	  int    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
26	[BUG]  [BUGGY]  int  len  =  input.length()  -  pos;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  -  pos;	  int    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
27	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos  +  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  +  pos  +  1;	  int    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
28	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos  +  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  +  pos  +  1;	  int    len    =    input.length()    +    pos;    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
29	[BUG]  [BUGGY]      int  inputLength  =  input.length();  int  inputLength  =  input.length();  [CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      int  inputLength  =  input.length();  int  inputLength  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        int    inputLength    =    input.length();    int  inputLength  =  input.length();	  	non-compiled	[CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)	10	None	add
30	[BUG]  [BUGGY]      int  inputLength  =  input.length();  Int  inputLength  =  input.length();  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      int  inputLength  =  input.length();  Int  inputLength  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        int    inputLength    =    input.length();    Int  inputLength  =  input.length();	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
31	[BUG]  [BUGGY]      int  inputLength  =  input.length();  char[]  inputLength  =  input.length();  [CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      int  inputLength  =  input.length();  char[]  inputLength  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        int    inputLength    =    input.length();    char[]  inputLength  =  input.length();	  	non-compiled	[CE]  variable  inputLength  is  already  defined  in  method  translate(CharSequence,Writer)	10	None	add
32	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      int  inputLength  =  input.length();  int  outputLength  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	        int    inputLength    =    input.length();    int  outputLength  =  input.length();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
33	[BUG]  [BUGGY]      int  inputLength  =  input.length();  int  outputLength  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      int  inputLength  =  input.length();  int  outputLength  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        int    inputLength    =    input.length();    int  outputLength  =  input.length();	  	compilable	  [FE]  StringIndexOutOfBoundsException  	10	1	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  +=  input.length();  pos  +=  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	        pos    +=    input.length();    pos  +=  input.length();	  	compilable	  [FE]  ComparisonFailure  	12	1	add
35	[BUG]  [BUGGY]      pos  +=  input.length();  pos  +=  input.length();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  +=  input.length();  pos  +=  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    +=    input.length();    pos  +=  input.length();	  	compilable	  [FE]  ComparisonFailure  	12	1	add
36	[BUG]  [BUGGY]      pos  +=  input.length();  int  pos  +=  input.length();  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  +=  input.length();  int  pos  +=  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    +=    input.length();    int  pos  +=  input.length();	  	non-compiled	[CE]  ';'  expected	12	None	add
37	[BUG]  [BUGGY]      pos  +=  input.length();  pos  +=  output.length();  [CE]  cannot  find  symbol  output  [FE]        ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  +=  input.length();  pos  +=  output.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    +=    input.length();    pos  +=  output.length();	  	non-compiled	[CE]  cannot  find  symbol  output	12	None	add
38	[BUG]  [BUGGY]      pos  +=  input.length();  pos  +=  in.length();  [CE]  cannot  find  symbol  in  [FE]          ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  +=  input.length();  pos  +=  in.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    +=    input.length();    pos  +=  in.length();	  	non-compiled	[CE]  cannot  find  symbol  in	12	None	add
39	[BUG]  [BUGGY]  int  inputLength  =  input.length()  -  1;  [CE]  cannot  find  symbol  len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  inputLength  =  input.length()  -  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  inputLength  =  input.length()  -  1;	      int    inputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	11	None	replace
40	[BUG]  [BUGGY]  int  inputLength  =  input.length()  +  1;  [CE]  cannot  find  symbol  len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  inputLength  =  input.length()  +  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  inputLength  =  input.length()  +  1;	      int    inputLength    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	11	None	replace
41	[BUG]  [BUGGY]  char  inputLength  =  input.length();  [CE]  possible  loss  of  precision  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char  inputLength  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  inputLength  =  input.length();	      int    inputLength    =    input.length();    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
42	[BUG]  [BUGGY]  char  input  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char  input  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  input  =  input.length();	      int    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	16	None	replace
43	[BUG]  [BUGGY]  int  input  =  input.length()  -  1;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  input  =  input.length()  -  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  input.length()  -  1;	      int    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	16	None	replace
44	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos;  int  len  =  input.length()  +  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos;  int  len  =  input.length()  +  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos;    int  len  =  input.length()  +  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	19	None	add
45	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos;  Integer  len  =  input.length()  +  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos;  Integer  len  =  input.length()  +  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos;    Integer  len  =  input.length()  +  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	19	None	add
46	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos;  Int  len  =  input.length()  +  pos;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos;  Int  len  =  input.length()  +  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos;    Int  len  =  input.length()  +  pos;	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
47	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos;  char[]  c  =  input.length()  +  pos;  [CE]  incompatible  types  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos;  char[]  c  =  input.length()  +  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos;    char[]  c  =  input.length()  +  pos;	  	non-compiled	[CE]  incompatible  types	19	None	add
48	[BUG]  [BUGGY]  int  pos  =  input.length()  +  1;  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  pos  =  input.length()  +  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length()  +  1;	      int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	21	None	replace
49	[BUG]  [BUGGY]  int  pos  =  input.length()  -  1;  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  pos  =  input.length()  -  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length()  -  1;	      int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	21	None	replace
50	[BUG]  [BUGGY]  char  pos  =  input.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char  pos  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  pos  =  input.length();	      int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	21	None	replace
51	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  int  len  =  input.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  1;  int  len  =  input.length()  -  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    1;    int  len  =  input.length()  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	1	None	add
52	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  Integer  len  =  input.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  1;  Integer  len  =  input.length()  -  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    1;    Integer  len  =  input.length()  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	1	None	add
53	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  Int  len  =  input.length()  -  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  1;  Int  len  =  input.length()  -  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    1;    Int  len  =  input.length()  -  1;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
54	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  char[]  input  =  input.getChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  1;  char[]  input  =  input.getChars();  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    1;    char[]  input  =  input.getChars();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	1	None	add
55	[BUG]  [BUGGY]  int  input  =  out.read();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  input  =  out.read();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  out.read();	      int    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	17	None	replace
56	[BUG]  [BUGGY]  char  input  =  input.read();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char  input  =  input.read();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char  input  =  input.read();	      int    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	17	None	replace
57	[BUG]  [BUGGY]  int  input  =  output.read();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  input  =  output.read();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  output.read();	      int    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	17	None	replace
58	[BUG]  [BUGGY]  pos  +=  input.length()  +  1;  [CE]  cannot  find  symbol  len  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  input.length()  +  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length()  +  1;	      pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	13	None	replace
59	[BUG]  [BUGGY]  pos  +=  input.length()  *  2;  [CE]  cannot  find  symbol  len  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  input.length()  *  2;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length()  *  2;	      pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	13	None	replace
60	[BUG]  [BUGGY]  pos  +=  input.length()  -  1;  [CE]  cannot  find  symbol  len  [FE]        ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  input.length()  -  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length()  -  1;	      pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	13	None	replace
61	[BUG]  [BUGGY]  pos  =  input.length()  +  1;  [CE]  cannot  find  symbol  len  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  =  input.length()  +  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  1;	      pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	9	None	replace
62	[BUG]  [BUGGY]  pos  =  input.length()  -  1;  [CE]  cannot  find  symbol  len  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  =  input.length()  -  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  -  1;	      pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	9	None	replace
63	[BUG]  [BUGGY]  pos  =  input.length()  *  2;  [CE]  cannot  find  symbol  len  [FE]        ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  =  input.length()  *  2;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  *  2;	      pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  len	9	None	replace
64	[BUG]  [BUGGY]  int  len  =  input.length  -  2;  [CE]  cannot  find  symbol  length  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length  -  2;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  2;	  int    len    =    input.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
65	[BUG]  [BUGGY]  int  len  =  input.length  -  3;  [CE]  cannot  find  symbol  length  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length  -  3;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  3;	  int    len    =    input.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
66	[BUG]  [BUGGY]  int  len  =  input.length  /  1;  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length  /  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  /  1;	  int    len    =    input.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
67	[BUG]  [BUGGY]  pos  +=  input.length;  [CE]  cannot  find  symbol  length  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  input.length;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.length;	      	non-compiled	[CE]  cannot  find  symbol  length	7	None	replace
68	[BUG]  [BUGGY]  int  len  =  input.length()  +  1;  int  len  =  input.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  1;  int  len  =  input.length()  +  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    1;    int  len  =  input.length()  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	3	None	add
69	[BUG]  [BUGGY]  int  len  =  input.length()  +  1;  Integer  len  =  input.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  1;  Integer  len  =  input.length()  +  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    1;    Integer  len  =  input.length()  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	3	None	add
70	[BUG]  [BUGGY]  int  len  =  input.length()  +  1;  Int  len  =  input.length()  +  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  1;  Int  len  =  input.length()  +  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    1;    Int  len  =  input.length()  +  1;	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
71	[BUG]  [BUGGY]  int  len  =  input.length()  +  1;  char[]  input  =  input.getChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  1;  char[]  input  =  input.getChars();  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    1;    char[]  input  =  input.getChars();	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	3	None	add
72	[BUG]  [BUGGY]  int  len  =  input.length()  -  2;  int  len  =  input.length()  -  2;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  2;  int  len  =  input.length()  -  2;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    2;    int  len  =  input.length()  -  2;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	5	None	add
73	[BUG]  [BUGGY]  int  len  =  input.length()  -  2;  Int  len  =  input.length()  -  2;  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  2;  Int  len  =  input.length()  -  2;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    2;    Int  len  =  input.length()  -  2;	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
74	[BUG]  [BUGGY]  int  len  =  input.length()  -  2;  char[]  c  =  input.length()  -  2;  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  2;  char[]  c  =  input.length()  -  2;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    2;    char[]  c  =  input.length()  -  2;	  	non-compiled	[CE]  incompatible  types	5	None	add
75	[BUG]  [BUGGY]  int  len  =  input.length()  -  2;  char[]  input  =  input.length()  -  2;  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  2;  char[]  input  =  input.length()  -  2;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    2;    char[]  input  =  input.length()  -  2;	  	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	5	None	add
76	[BUG]  [BUGGY]      pos  =  input.length();  InputStream  input  =  input.length();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      pos  =  input.length();  InputStream  input  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        pos    =    input.length();    InputStream  input  =  input.length();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
77	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  Integer  len  =  input.length();  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	Integer  len  =  input.length();	  int    len    =    input.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
78	[BUG]  [BUGGY]  Integer  len  =  input.length();  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  Integer  len  =  input.length();  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  len  =  input.length();	  int    len    =    input.length()    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
79	[BUG]  [BUGGY]  int  len  =  input.length  -  1  +  out.length;  [CE]  cannot  find  symbol  length  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length  -  1  +  out.length;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1  +  out.length;	  int    len    =    input.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
80	[BUG]  [BUGGY]  int  len  =  input.length  -  1L;  [CE]  cannot  find  symbol  length  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length  -  1L;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1L;	  int    len    =    input.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
81	[BUG]  [BUGGY]  if(pos  >=  0)  {  out.write('n');  pos++;  }  [CE]  cannot  find  symbol  len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  if(pos  >=  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  >=  0)  {  out.write('n');  pos++;  }	      if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  len	23	None	replace
82	[BUG]  [BUGGY]  out.write(input);  [CE]  no  suitable  method  found  for  write(CharSequence)  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(input);  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input);	      out.write(c);    	non-compiled	[CE]  no  suitable  method  found  for  write(CharSequence)	18	None	replace
83	[BUG]  [BUGGY]  out.write(Integer.toString(pos));  [CE]  cannot  find  symbol  len  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(Integer.toString(pos));  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toString(pos));	      out.write(c);    	non-compiled	[CE]  cannot  find  symbol  len	18	None	replace
84	[BUG]  [BUGGY]  out.write(input.charAt(pos));  [CE]  cannot  find  symbol  len  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(input.charAt(pos));  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(input.charAt(pos));	      out.write(c);    	non-compiled	[CE]  cannot  find  symbol  len	18	None	replace
85	[BUG]  [BUGGY]  out.write(Integer.toHexString(pos));  [CE]  cannot  find  symbol  len  [FE]                  StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(Integer.toHexString(pos));  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Integer.toHexString(pos));	      out.write(c);    	non-compiled	[CE]  cannot  find  symbol  len	18	None	replace
86	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
87	[BUG]  [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  out.write('n');  pos  =  0;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  out.write('n');  pos  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	22	1	add
88	[BUG]  [BUGGY]  int  len  =  input.length;  [CE]  cannot  find  symbol  length  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length;	      	non-compiled	[CE]  cannot  find  symbol  length	7	None	replace
89	[BUG]  [BUGGY]  int  len  =  input.length()  +  1;  char  len  =  input.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  1;  char  len  =  input.length()  +  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    1;    char  len  =  input.length()  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	3	None	add
90	[BUG]  [BUGGY]  int  len  =  input.length()  -  2;  char  len  =  input.length()  -  2;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  2;  char  len  =  input.length()  -  2;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    2;    char  len  =  input.length()  -  2;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	5	None	add
91	[BUG]  [BUGGY]  int  len  =  input.length()  -  2;  int  len  =  output.length()  -  2;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  2;  int  len  =  output.length()  -  2;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    2;    int  len  =  output.length()  -  2;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	5	None	add
92	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  /  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	add	int  len  =  input.length()  /  pos;	  int    len    =    input.length()    +    pos;    	compilable	  [FE]  ArithmeticException  	20	1	replace
93	[BUG]  [BUGGY]  int  len  =  input.length()  /  pos;  [FE]  ArithmeticException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  /  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length()  /  pos;	  int    len    =    input.length()    +    pos;    	compilable	  [FE]  ArithmeticException  	20	1	replace
94	[BUG]  [BUGGY]  char[]  input  =  input.getOutputChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char[]  input  =  input.getOutputChars();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.getOutputChars();	      char[]    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
95	[BUG]  [BUGGY]  pos  +=  output.length();  [CE]  cannot  find  symbol  output  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  output.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  output.length();	      pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol  output	13	None	replace
96	[BUG]  [BUGGY]  pos  +=  out.length();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  out.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  out.length();	      pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
97	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos;  char  len  =  input.length()  +  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos;  char  len  =  input.length()  +  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos;    char  len  =  input.length()  +  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	19	None	add
98	[BUG]  [BUGGY]  Integer  input  =  input.length();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  Integer  input  =  input.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Integer  input  =  input.length();	      int    input    =    input.length();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	16	None	replace
99	[BUG]  [BUGGY]  int  pos  =  out.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  pos  =  out.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  out.length();	      int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	21	None	replace
100	[BUG]  [BUGGY]  int  pos  =  input.length()  +  out.length();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  pos  =  input.length()  +  out.length();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.length()  +  out.length();	      int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	21	None	replace
101	[BUG]  [BUGGY]  pos  =  input.length()  +  out.charAt(pos);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  =  input.length()  +  out.charAt(pos);  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  out.charAt(pos);	      pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
102	[BUG]  [BUGGY]  pos  =  input.length()  +  out.charAt(0);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  =  input.length()  +  out.charAt(0);  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.length()  +  out.charAt(0);	      pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
103	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  char  len  =  input.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  1;  char  len  =  input.length()  -  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    1;    char  len  =  input.length()  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	1	None	add
104	[BUG]  [BUGGY]  int  len  =  input.length()  -  1;  int  len  =  output.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  -  1;  int  len  =  output.length()  -  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    -    1;    int  len  =  output.length()  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	1	None	add
105	[BUG]  [BUGGY]  char[]  input  =  input.getInputChars();  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  char[]  input  =  input.getInputChars();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	char[]  input  =  input.getInputChars();	      char[]    input    =    input.getChars();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	14	None	replace
106	[BUG]  [BUGGY]  pos  +=  input.lastIndexOf('n');  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  input.lastIndexOf('n');  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.lastIndexOf('n');	      pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
107	[BUG]  [BUGGY]  pos  +=  input.lastIndexOf('/')+  1;  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  +=  input.lastIndexOf('/')+  1;  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  +=  input.lastIndexOf('/')+  1;	      pos    +=    input.length();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
108	[BUG]  [BUGGY]  int  len  =  input.length()  +  1;  int  len  =  output.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  1;  int  len  =  output.length()  +  1;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    1;    int  len  =  output.length()  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	3	None	add
109	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('.');  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  =  input.lastIndexOf('.');  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('.');	      pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
110	[BUG]  [BUGGY]  pos  =  input.lastIndexOf('n');  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  pos  =  input.lastIndexOf('n');  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	pos  =  input.lastIndexOf('n');	      pos    =    input.length();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
111	[BUG]  [BUGGY]  int  len  =  input.length()  +  pos;  int  len  =  output.length()  +  pos;  [CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length()  +  pos;  int  len  =  output.length()  +  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int    len    =    input.length()    +    pos;    int  len  =  output.length()  +  pos;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  translate(CharSequence,Writer)	19	None	add
112	[BUG]  [BUGGY]  Char[]  input  =  input.toChars();  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  Char[]  input  =  input.toChars();  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	Char[]  input  =  input.toChars();	      char[]    input    =    input.toChars();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
113	[BUG]  [BUGGY]  int  len  =  input.length  -  1  +  pos;  [CE]  cannot  find  symbol  length  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  len  =  input.length  -  1  +  pos;  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  len  =  input.length  -  1  +  pos;	  int    len    =    input.length    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
114	[BUG]  [BUGGY]  int  input  =  input.read(input);  [CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  input  =  input.read(input);  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  input  =  input.read(input);	      int    input    =    input.read();    	non-compiled	[CE]  variable  input  is  already  defined  in  method  translate(CharSequence,Writer)	17	None	replace
115	[BUG]  [BUGGY]  int  pos  =  input.read();  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  pos  =  input.read();  [BUGGY]    while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.read();	      	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	7	None	replace
116	[BUG]  [BUGGY]  int  pos  =  input.lastIndexOf('.');  [CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  int  pos  =  input.lastIndexOf('.');  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	int  pos  =  input.lastIndexOf('.');	      int    pos    =    input.length();    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  translate(CharSequence,Writer)	21	None	replace
117	[BUG]  [BUGGY]  if(pos  ==  0)  {  out.write('n');  pos++;  }  [CE]  cannot  find  symbol  len  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  if(pos  ==  0)  {  out.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	if(pos  ==  0)  {  out.write('n');  pos++;  }	      if(pos    >    0)    {    out.write('n');    pos++;    }    	non-compiled	[CE]  cannot  find  symbol  len	23	None	replace
118	[BUG]  [BUGGY]  out.write(Character.codePointAt(input,  pos));  [CE]  cannot  find  symbol  len  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(Character.codePointAt(input,  pos));  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.codePointAt(input,  pos));	      out.write(c);    	non-compiled	[CE]  cannot  find  symbol  len	18	None	replace
119	[BUG]  [BUGGY]  out.write(Character.codePointAt(pos));  [CE]  no  suitable  method  found  for  codePointAt(int)  [FE]              StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]  out.write(Character.codePointAt(pos));  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	out.write(Character.codePointAt(pos));	      out.write(c);    	non-compiled	[CE]  no  suitable  method  found  for  codePointAt(int)	18	None	replace
120	[BUG]  [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  output.write('n');  pos++;  }  [CE]  cannot  find  symbol  output  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  output.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  output.write('n');  pos++;  }	  	non-compiled	[CE]  cannot  find  symbol  output	22	None	add
121	[BUG]  [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  Output.write('n');  pos++;  }  [CE]  cannot  find  symbol  Output  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  if  (out  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null   ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;    [BUGGY]      if(pos  >  0)  {  out.write('n');  pos++;  }  if(pos  >  0)  {  Output.write('n');  pos++;  }  [BUGGY]    int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  char[]  c  =  Character.toChars(Character.codePointAt(input,  pos));  out.write(c);  pos+=  c.length;  continue;  }    [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	83	83	1	replace	        if(pos    >    0)    {    out.write('n');    pos++;    }    if(pos  >  0)  {  Output.write('n');  pos++;  }	  	non-compiled	[CE]  cannot  find  symbol  Output	22	None	add
