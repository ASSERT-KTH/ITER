bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    char[]  c  =  input.getChars();  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    char[]  c  =  input.getChars();  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    char[]  c  =  input.getChars();		non-compiled	[CE]  cannot  find  symbol	9	None	add
2	[BUG]  [BUGGY]    if(input  ==  null)  {  out.write(c);  }  [CE]  cannot  find  symbol  c  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  out.write(c);  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input  ==  null)  {  out.write(c);  }		non-compiled	[CE]  cannot  find  symbol  c	9	None	add
3	[BUG]  [BUGGY]    if(input!=  null)  {  out.write(c);  }  [CE]  cannot  find  symbol  c  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input!=  null)  {  out.write(c);  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input!=  null)  {  out.write(c);  }		non-compiled	[CE]  cannot  find  symbol  c	9	None	add
4	[BUG]  [BUGGY]    char[]  c  =  input.getChars(pos,  out);  [CE]  cannot  find  symbol  pos  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    char[]  c  =  input.getChars(pos,  out);  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    char[]  c  =  input.getChars(pos,  out);		non-compiled	[CE]  cannot  find  symbol  pos	9	None	add
5	[BUG]  [BUGGY]    out.write(c);  [CE]  cannot  find  symbol  c  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    out.write(c);  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    out.write(c);		non-compiled	[CE]  cannot  find  symbol  c	9	None	add
6	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]  if  (input  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if  (input  ==  null)  {	if  (out  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
7	[BUG]  [BUGGY]  if  (input  ==  null)  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]  if  (input  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if  (input  ==  null)  {	if  (out  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
8	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]  if(input  ==  null  ||  out  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(input  ==  null  ||  out  ==  null)  {	if  (out  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
9	[BUG]  [BUGGY]  if(input  ==  null  ||  out  ==  null)  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]  if(input  ==  null  ||  out  ==  null)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  out  ==  null)  {	if  (out  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
10	[BUG]  [BUGGY]    if(input  ==  null)  {  out  =  input.getChars(0,  out);  }  [CE]  cannot  find  symbol  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  out  =  input.getChars(0,  out);  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input  ==  null)  {  out  =  input.getChars(0,  out);  }		non-compiled	[CE]  cannot  find  symbol	9	None	add
11	[BUG]  [BUGGY]    if(input!=  null)  {  out  =  input.getChars(0,  out);  }  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input!=  null)  {  out  =  input.getChars(0,  out);  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input!=  null)  {  out  =  input.getChars(0,  out);  }		non-compiled	[CE]  cannot  find  symbol	9	None	add
12	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }		compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
13	[BUG]  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }		compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
14	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }		compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
15	[BUG]  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }		compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
16	[BUG]  [BUGGY]    int  pt  =  input.length();  [CE]  variable  pt  is  already  defined  in  method  translate(CharSequence,Writer)  [FE]        StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    int  pt  =  input.length();  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    int  pt  =  input.length();		non-compiled	[CE]  variable  pt  is  already  defined  in  method  translate(CharSequence,Writer)	9	None	add
17	[BUG]  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ".);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ".);  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ".);  }		non-compiled	[CE]  <identifier>  expected	9	None	add
18	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }		compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
19	[BUG]  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  [BUGGY]  if  (out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }		compilable	  [FE]  StringIndexOutOfBoundsException  	9	1	add
20	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]  if(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(out  ==  null  ||  input.length()  ==  0)  {	if  (out  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
21	[BUG]  [BUGGY]  if(out  ==  null  ||  input.length()  ==  0)  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException  [CONTEXT]  public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {  [BUGGY]  if(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null  ||  input.length()  ==  0)  {	if  (out  ==  null)  {  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
