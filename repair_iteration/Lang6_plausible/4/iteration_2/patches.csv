bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input  ==  null  ||  out!=  null)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input  ==  null  ||  out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    out!=    null)    {    if(input  ==  null  ||  out!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
2	[BUG]  [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input  ==  null  ||  out  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input  ==  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    out!=    null)    {    if(input  ==  null  ||  out  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
3	[BUG]  [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input!=  null  ||  out!=  null)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input!=  null  ||  out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    out!=    null)    {    if(input!=  null  ||  out!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
4	[BUG]  [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input  ==  null  ||  out  >=  null)  {  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out!=  null)  {  if(input  ==  null  ||  out  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    out!=    null)    {    if(input  ==  null  ||  out  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
5	[BUG]  [BUGGY]  if(input  ==  null  ||  out!=  null)  {  If(input  ==  null  ||  out!=  null)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out!=  null)  {  If(input  ==  null  ||  out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    out!=    null)    {    If(input  ==  null  ||  out!=  null)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
6	[BUG]  [BUGGY]  if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null.       ");    }    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(input  ==  null  ||  input.length()  >=  0)  {	  if(input    ==    null    ||    input.length()!=    0)    {    	compilable	  [FE]  IllegalArgumentException  	95	1	replace
8	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  >=  0)  {	  if(input    ==    null    ||    input.length()!=    0)    {    	compilable	  [FE]  IllegalArgumentException  	95	1	replace
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(input!=  null  ||  input.length()  ==  0)  {	  if(input    ==    null    ||    input.length()!=    0)    {    	compilable	  [FE]  IllegalArgumentException  	95	1	replace
10	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null  ||  input.length()  ==  0)  {	  if(input    ==    null    ||    input.length()!=    0)    {    	compilable	  [FE]  IllegalArgumentException  	95	1	replace
11	[BUG]  [BUGGY]  If(input  ==  null  ||  out  ==  null)  {  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  If(input  ==  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	If(input  ==  null  ||  out  ==  null)  {	  if(input    ==    null    ||    out    ==    null)    {    If(input    ==    null    ||    out    ==    null)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
12	[BUG]  [BUGGY]  if(input  ==  null  ||  out  ==  null)  {  If(input  ==  null  ||  out!=  null)  {  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out  ==  null)  {  If(input  ==  null  ||  out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  out  ==  null)  {  If(input  ==  null  ||  out!=  null)  {	  if(input    ==    null    ||    out    ==    null)    {    If(input    ==    null    ||    out    ==    null)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
13	[BUG]  [BUGGY]  if(input  ==  null)  {  If(input  ==  null  ||  out  ==  null)  {  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  If(input  ==  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  If(input  ==  null  ||  out  ==  null)  {	  if(input    ==    null    ||    out    ==    null)    {    If(input    ==    null    ||    out    ==    null)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
14	[BUG]  [BUGGY]  String  c  =  input.getString();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  String  c  =  input.getString();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	String  c  =  input.getString();	  char[]    c    =    input.getString();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
15	[BUG]  [BUGGY]  char[]  c  =  input.getCharSequence();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getCharSequence();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getCharSequence();	  char[]    c    =    input.getString();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
16	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().getSimpleName();  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClass().getSimpleName();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClass().getSimpleName();	  Thread.currentThread().getContextClass().getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
17	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().setMillis(out);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClass().setMillis(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClass().setMillis(out);	  Thread.currentThread().getContextClass().getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
18	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().setAssign(input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClass().setAssign(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClass().setAssign(input);	  Thread.currentThread().getContextClass().getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
19	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  nu  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  nu	  	non-compiled	[CE]  	3	None	add
20	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]      IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  null)  {  throw  new  Il  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	3	None	add
21	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
22	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
23	[BUG]  [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  ==  null  ||  input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  ==  null  ||  input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out    ==    null    ||    input    ==    null)    {    if(out  ==  null  ||  input  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
24	[BUG]  [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  ==  null  ||  input!=  null)  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  ==  null  ||  input!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out    ==    null    ||    input    ==    null)    {    if(out  ==  null  ||  input!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
25	[BUG]  [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out!=  null  ||  input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out!=  null  ||  input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out    ==    null    ||    input    ==    null)    {    if(out!=  null  ||  input  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
26	[BUG]  [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  If(out  ==  null  ||  input  ==  null)  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  If(out  ==  null  ||  input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out    ==    null    ||    input    ==    null)    {    If(out  ==  null  ||  input  ==  null)  {	  	non-compiled	[CE]  ';'  expected	72	None	add
27	[BUG]  [BUGGY]  char[]  c  =  input.getChars(0,  out);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(0,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(0,  out);	  char[]    c    =    input.getChars(input,    out);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
28	[BUG]  [BUGGY]  String  c  =  input.getChars(input,  out);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  String  c  =  input.getChars(input,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	String  c  =  input.getChars(input,  out);	  char[]    c    =    input.getChars(input,    out);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
29	[BUG]  [BUGGY]  char[]  c  =  input.getChars(input,  out,  pos);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(input,  out,  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(input,  out,  pos);	  char[]    c    =    input.getChars(input,    out);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
30	[BUG]  [BUGGY]  out.write(Integer.toString(c));  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(c));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(c));	  out.write(Integer.toString(input));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
31	[BUG]  [BUGGY]  out.write(Integer.toString(input),  0);  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input),  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input),  0);	  out.write(Integer.toString(input));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
32	[BUG]  [BUGGY]  out.write(Integer.toHexString(input));  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toHexString(input));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toHexString(input));	  out.write(Integer.toString(input));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
33	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Throwables.throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");	  throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null!   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
34	[BUG]  [BUGGY]  int  pos  =  input.length()  +  1;  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  int  pos  =  input.length()  +  1;  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	int  pos  =  input.length()  +  1;	  int    pos    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
35	[BUG]  [BUGGY]  int  pos  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  int  pos  =  input.length()  -  1;  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	int  pos  =  input.length()  -  1;	  int    pos    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
36	[BUG]  [BUGGY]  int  pos  =  input.length()  -  2;  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  int  pos  =  input.length()  -  2;  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	int  pos  =  input.length()  -  2;	  int    pos    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
37	[BUG]  [BUGGY]  out.write(input.charAt(pos  +  1));  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.charAt(pos  +  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.charAt(pos  +  1));	  out.write(input.charAt(pos));    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
38	[BUG]  [BUGGY]  out.write(input.charAt(pos  -  1));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.charAt(pos  -  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.charAt(pos  -  1));	  out.write(input.charAt(pos));    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
39	[BUG]  [BUGGY]  out.write(input.charAt(pos)+  1);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.charAt(pos)+  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.charAt(pos)+  1);	  out.write(input.charAt(pos));    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
40	[BUG]  [BUGGY]  out.write(input.length());  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.length());	  if(input    ==    null)    {    out.write(input.length());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
41	[BUG]  [BUGGY]  if(input!=  null)  {  out.write(input.length());  }  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  out.write(input.length());  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  out.write(input.length());  }	  if(input    ==    null)    {    out.write(input.length());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
42	[BUG]  [BUGGY]  if(input  ==  null)  {  out.write(input.length()  +  1);  }  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  out.write(input.length()  +  1);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  out.write(input.length()  +  1);  }	  if(input    ==    null)    {    out.write(input.length());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
43	[BUG]  [BUGGY]  If  (input  ==  null)  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  If  (input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	If  (input  ==  null)  {	  if    (input    ==    null)    {    If    (input    ==    null)    {    	non-compiled	[CE]  ';'  expected	77	None	replace
44	[BUG]  [BUGGY]  output.write(input);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  output.write(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	output.write(input);	  if(input    ==    null)    {    output.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
45	[BUG]  [BUGGY]  if(input  ==  null)  {  output.write(input,  out);  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  output.write(input,  out);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  output.write(input,  out);  }	  if(input    ==    null)    {    output.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
46	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(input  ==  null  ||  input!=  null)  {	  if(input    ==    null    ||    input    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	97	1	replace
47	[BUG]  [BUGGY]  if(input  ==  null  ||  input!=  null)  {  [FE]  IllegalArgumentException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input!=  null)  {	  if(input    ==    null    ||    input    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	97	1	replace
48	[BUG]  [BUGGY]  out.write(Integer.toString(pos),  input);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(pos),  input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(pos),  input);	  if(input!=    null)    {    out.write(Integer.toString(pos),    input);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
49	[BUG]  [BUGGY]  out.write(Integer.toString(input),  input);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input),  input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input),  input);	  if(input!=    null)    {    out.write(Integer.toString(pos),    input);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
50	[BUG]  [BUGGY]  if(out!=  null)  {  output.write(input);  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  output.write(input);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out!=  null)  {  output.write(input);  }	  if(input!=    null)    {    output.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
51	[BUG]  [BUGGY]  CharSequence[]  c  =  input.getChars();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  CharSequence[]  c  =  input.getChars();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	CharSequence[]  c  =  input.getChars();	  Character[]    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
52	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(input!=  null  ||  out  ==  null)  {	  if(input    ==    null    ||    out    ==    null)    {    if(input    ==    null    ||    out    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	24	1	replace
53	[BUG]  [BUGGY]  if(input!=  null  ||  out  ==  null)  {  [FE]  IllegalArgumentException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null  ||  out  ==  null)  {	  if(input    ==    null    ||    out    ==    null)    {    if(input    ==    null    ||    out    ==    null)    {    	compilable	  [FE]  IllegalArgumentException  	24	1	replace
54	[BUG]  [BUGGY]  char[]  c  =  input.getChars(in,  out,  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(in,  out,  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(in,  out,  pos);	  char[]    c    =    input.getChars(in,    out);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
55	[BUG]  [BUGGY]  char[]  c  =  input.getChars(in,  out,  0);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(in,  out,  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(in,  out,  0);	  char[]    c    =    input.getChars(in,    out);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
56	[BUG]  [BUGGY]  String  pt  =  input.length();  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  String  pt  =  input.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	String  pt  =  input.length();	  char    pt    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  Char  pt  =  input.length();  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char  pt  =  input.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char  pt  =  input.length();	  char    pt    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  Character  pt  =  input.length();  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Character  pt  =  input.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Character  pt  =  input.length();	  char    pt    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().set(input);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().set(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().set(input);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
60	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().set(input,  out);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().set(input,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().set(input,  out);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
61	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().set(out);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().set(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().set(out);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
62	[BUG]  [BUGGY]  out.write(Integer.toString(input,  pos));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input,  pos));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input,  pos));	  out.write(Integer.toString(pos));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
63	[BUG]  [BUGGY]  out.write(Integer.toString(input),  pos);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input),  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input),  pos);	  out.write(Integer.toString(pos));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
64	[BUG]  [BUGGY]  out  =  input.getChars(0);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out  =  input.getChars(0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out  =  input.getChars(0);	  if(input    ==    null)    {    out    =    input.getChars(0);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  out  =  input.getChars(1);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out  =  input.getChars(1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out  =  input.getChars(1);	  if(input    ==    null)    {    out    =    input.getChars(0);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
66	[BUG]  [BUGGY]  if(input!=  null)  {  out.write(input.charAt(1));  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  out.write(input.charAt(1));  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  out.write(input.charAt(1));  }	  if(input!=    null)    {    out.write(input.charAt(0));    }    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
67	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Throwables.throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");	  throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
68	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  Writer  must  not  be  null. ");  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  throw  new  IllegalStateException( "The  Writer  must  not  be  null. ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	throw  new  IllegalStateException( "The  Writer  must  not  be  null. ");	  throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
69	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(out);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(out);	  Thread.currentThread().setContextClassLoader(input);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
70	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(input,  out);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(input,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(input,  out);	  Thread.currentThread().setContextClassLoader(input);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
71	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(in);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(in);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(in);	  Thread.currentThread().setContextClassLoader(input);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
72	[BUG]  [BUGGY]  out.write(Integer.toString(input.length()  -  1));  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input.length()  -  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input.length()  -  1));	  out.write(Integer.toString(input.length()));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
73	[BUG]  [BUGGY]  out.write(Integer.toString(input.length()  +  1));  [CE]  illegal  start  of  type  [FE]                            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input.length()  +  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input.length()  +  1));	  out.write(Integer.toString(input.length()));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
74	[BUG]  [BUGGY]  out.write(Integer.toString(input.length()  -  2));  [CE]  illegal  start  of  type  [FE]                              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input.length()  -  2));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input.length()  -  2));	  out.write(Integer.toString(input.length()));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
75	[BUG]  [BUGGY]  if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null       ");    }    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
76	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportCodeChange(input);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportCodeChange(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().reportCodeChange(input);	  Thread.currentThread().getContextClassLoader().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
77	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(input,  out));  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(input,  out));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(input,  out));	  Thread.currentThread().getContextClassLoader().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
78	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportCodeChange(this,  input);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportCodeChange(this,  input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().reportCodeChange(this,  input);	  Thread.currentThread().getContextClassLoader().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
79	[BUG]  [BUGGY]  out  =  input.getChars(0,  out);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out  =  input.getChars(0,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out  =  input.getChars(0,  out);	  if(out!=    null)    {    out    =    input.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
80	[BUG]  [BUGGY]  Output  output  =  input.getOutput();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Output  output  =  input.getOutput();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Output  output  =  input.getOutput();	  if(out!=    null)    {    out    =    input.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
81	[BUG]  [BUGGY]  if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input!=    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
82	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null! ");  }	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input!=    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
83	[BUG]  [BUGGY]  out.write(input,  0,  input.length());  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input,  0,  input.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input,  0,  input.length());	  out.write(input);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
84	[BUG]  [BUGGY]  out.write(input,  pos);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input,  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input,  pos);	  out.write(input);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
85	[BUG]  [BUGGY]  Char[]  c  =  input.getCurrentChars();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getCurrentChars();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getCurrentChars();	  Char[]    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
86	[BUG]  [BUGGY]  Char[]  c  =  input.getChars(pos);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getChars(pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getChars(pos);	  Char[]    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
87	[BUG]  [BUGGY]  String  c  =  output.getChars();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  String  c  =  output.getChars();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	String  c  =  output.getChars();	  char[]    c    =    output.getChars();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
88	[BUG]  [BUGGY]  char  pt  =  out.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char  pt  =  out.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char  pt  =  out.length();	  int    pt    =    out.length();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
89	[BUG]  [BUGGY]  long  pt  =  out.length();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  long  pt  =  out.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	long  pt  =  out.length();	  int    pt    =    out.length();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
90	[BUG]  [BUGGY]  char  c  =  input.getChars();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char  c  =  input.getChars();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char  c  =  input.getChars();	  String    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
91	[BUG]  [BUGGY]  CharSequence  c  =  input.getChars();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  CharSequence  c  =  input.getChars();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	CharSequence  c  =  input.getChars();	  String    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
92	[BUG]  [BUGGY]  String  c  =  input.getChars(pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  String  c  =  input.getChars(pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	String  c  =  input.getChars(pos);	  String    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
93	[BUG]  [BUGGY]  Char[]  c  =  input.getChars(pos,  out,  0);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getChars(pos,  out,  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getChars(pos,  out,  0);	  Char[]    c    =    input.getChars(pos,    out);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
94	[BUG]  [BUGGY]  Char[]  c  =  input.getChars(pos,  out,  pt);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getChars(pos,  out,  pt);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getChars(pos,  out,  pt);	  Char[]    c    =    input.getChars(pos,    out);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
95	[BUG]  [BUGGY]  char[]  c  =  input.getChars(pos,  out,  0);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(pos,  out,  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(pos,  out,  0);	  Char[]    c    =    input.getChars(pos,    out);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
96	[BUG]  [BUGGY]  char[]  c  =  input.getChars(pos,  out,  pt);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(pos,  out,  pt);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(pos,  out,  pt);	  Char[]    c    =    input.getChars(pos,    out);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
97	[BUG]  [BUGGY]  Integer  pt  =  input.length();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  pt  =  input.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Integer  pt  =  input.length();	  int    pt    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
99	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
100	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [CE]  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu	  	non-compiled	[CE]  	59	None	add
101	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new	  	non-compiled	[CE]  <identifier>  expected	59	None	add
102	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  Il  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	59	None	add
103	[BUG]  [BUGGY]  if(input  ==  null)  {  if(out  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  if(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  if(out  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    if(out    {    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
104	[BUG]  [BUGGY]  if(input!=  null)  {  if(out  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  if(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  if(out  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    if(out    {    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
105	[BUG]  [BUGGY]  out.write(input.charAt(0),  input.length());  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.charAt(0),  input.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.charAt(0),  input.length());	  out.write(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
106	[BUG]  [BUGGY]  out.write(input.substring(0,  input.length()  -  1));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.substring(0,  input.length()  -  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.substring(0,  input.length()  -  1));	  out.write(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
107	[BUG]  [BUGGY]  out.write(input.substring(0,  input.length()));  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.substring(0,  input.length()));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.substring(0,  input.length()));	  out.write(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
108	[BUG]  [BUGGY]  char[]  c  =  input.getCurrentCharSequence();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getCurrentCharSequence();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getCurrentCharSequence();	  char[]    c    =    input.getCurrentSequence();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
109	[BUG]  [BUGGY]  char[]  c  =  input.getSequence();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getSequence();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getSequence();	  char[]    c    =    input.getCurrentSequence();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
110	[BUG]  [BUGGY]  Output  input  =  input.getChars(0,  out);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Output  input  =  input.getChars(0,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Output  input  =  input.getChars(0,  out);	  if(out    ==    null)    {    out    =    input.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
111	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
112	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	add
113	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
114	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [FE]  IllegalArgumentException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	56	1	add
115	[BUG]  [BUGGY]  if(input  ==  null)  {  out.write(input.charAt(1));  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  out.write(input.charAt(1));  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  out.write(input.charAt(1));  }	  if(input    ==    null)    {    out.write(input.charAt(0));    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
116	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalArgumentException( "The  Writer  must  not  be  null. "));  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalArgumentException( "The  Writer  must  not  be  null. "));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(new  IllegalArgumentException( "The  Writer  must  not  be  null. "));	  Thread.currentThread().getContextClassLoader().report(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
117	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( " "));  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( " "));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(new  IllegalStateException( " "));	  Thread.currentThread().getContextClassLoader().report(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
118	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(new  IllegalArgumentException( "The  Writer  must  not  be  null. ");	  Thread.currentThread().getContextClassLoader().report(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  	87	None	replace
119	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  nu  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  nu	  	non-compiled	[CE]  	1	None	add
120	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
121	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
122	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!  [CE]  unclosed  string  literal  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!	  	non-compiled	[CE]  unclosed  string  literal	1	None	add
123	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  Il  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	1	None	add
124	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	1	add
125	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	1	add
126	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  Il  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	54	None	add
127	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  nu  [CE]  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  nu	  	non-compiled	[CE]  	54	None	add
128	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new	  	non-compiled	[CE]  <identifier>  expected	54	None	add
129	[BUG]  [BUGGY]  char[]  c  =  input.getChars(pos  +  1);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(pos  +  1);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(pos  +  1);	  char[]    c    =    input.getChars(pos);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
130	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getRawClassLoader());  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getRawClassLoader());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(getClass().getRawClassLoader());	  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
131	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader(),  out);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader(),  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader(),  out);	  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
132	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader(),  input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader(),  input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader(),  input);	  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
133	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	61	1	add
134	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	61	1	add
135	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [CE]  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu	  	non-compiled	[CE]  	61	None	add
136	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	61	1	add
137	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	61	1	add
138	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  nu  [CE]  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  nu	  	non-compiled	[CE]  	61	None	add
139	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new	  	non-compiled	[CE]  <identifier>  expected	61	None	add
140	[BUG]  [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  if(input  ==  null  ||  input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  if(input  ==  null  ||  input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input    ==    null)    {    if(input  ==  null  ||  input  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
141	[BUG]  [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  if(input  ==  null  ||  input!=  null)  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  if(input  ==  null  ||  input!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input    ==    null)    {    if(input  ==  null  ||  input!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
142	[BUG]  [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  if(input!=  null  ||  input  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  if(input!=  null  ||  input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input    ==    null)    {    if(input!=  null  ||  input  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
143	[BUG]  [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  If(input  ==  null  ||  input  ==  null)  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input  ==  null)  {  If(input  ==  null  ||  input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input    ==    null)    {    If(input  ==  null  ||  input  ==  null)  {	  	non-compiled	[CE]  ';'  expected	96	None	add
144	[BUG]  [BUGGY]  if(input!=  null)  {  out  =  input.getChars(1);  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  out  =  input.getChars(1);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  out  =  input.getChars(1);  }	  if(out!=    null)    {    out    =    input.getChars(0);    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
145	[BUG]  [BUGGY]  out.write(Integer.toString(input.charAt(0)),  input.length());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input.charAt(0)),  input.length());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input.charAt(0)),  input.length());	  out.write(Integer.toString(input.charAt(0)));    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
146	[BUG]  [BUGGY]  out.write(Integer.toString(input.charAt(0)),  0);  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input.charAt(0)),  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input.charAt(0)),  0);	  out.write(Integer.toString(input.charAt(0)));    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
147	[BUG]  [BUGGY]  out.write(Integer.toString(input.charAt(0),  input.length()));  [CE]  illegal  start  of  type  [FE]                          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input.charAt(0),  input.length()));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input.charAt(0),  input.length()));	  out.write(Integer.toString(input.charAt(0)));    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
148	[BUG]  [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null.       ");    }    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
149	[BUG]  [BUGGY]  CharSequence  c  =  input.getChars(pos,  out);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  CharSequence  c  =  input.getChars(pos,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	CharSequence  c  =  input.getChars(pos,  out);	  char[]    c    =    input.getChars(pt,    out);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
150	[BUG]  [BUGGY]  out.write(Integer.toHexString(c));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toHexString(c));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toHexString(c));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
151	[BUG]  [BUGGY]  out.write(Integer.toHexString(input,  pos));  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toHexString(input,  pos));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toHexString(input,  pos));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
152	[BUG]  [BUGGY]  If(in  ==  null  ||  input.length()  ==  0)  {  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  If(in  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	If(in  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    If(out    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
153	[BUG]  [BUGGY]  If(out  ==  null  ||  input.length()  ==  0)  {  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  If(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	If(out  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    If(out    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
154	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  If(out  ==  null  ||  input.length()  ==  0)  {  [CE]  ';'  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  If(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  If(out  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    If(out    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
155	[BUG]  [BUGGY]  if(input  ==  null)  {  If(out  ==  null  ||  input.length()  ==  0)  {  [CE]  ';'  expected  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  If(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  If(out  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    If(out    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
156	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input,  out.getKey());  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input,  out.getKey());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(input,  out.getKey());	  Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey());    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
157	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey(),  out);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey(),  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey(),  out);	  Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey());    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
158	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input,  input.getKey());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input,  input.getKey());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(input,  input.getKey());	  Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey());    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
159	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	63	1	add
160	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	63	1	add
161	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  nu  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  nu	  	non-compiled	[CE]  	63	None	add
162	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  Il  [CE]  '('  or  '['  expected  [FE]        IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  Il  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  Il	  	non-compiled	[CE]  '('  or  '['  expected	63	None	add
163	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	63	1	add
164	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	63	1	add
165	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  [CE]  <identifier>  expected  [FE]            IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new	  	non-compiled	[CE]  <identifier>  expected	63	None	add
166	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  if(input  ==  null  ||  input.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  if(input  ==  null  ||  input.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()!=    0)    {    if(input  ==  null  ||  input.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
167	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  if(input  ==  null  ||  input.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  if(input  ==  null  ||  input.length()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()!=    0)    {    if(input  ==  null  ||  input.length()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
168	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  if(input!=  null  ||  input.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  if(input!=  null  ||  input.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()!=    0)    {    if(input!=  null  ||  input.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
169	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  If(input  ==  null  ||  input.length()!=  0)  {  [CE]  ';'  expected  [FE]          IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  If(input  ==  null  ||  input.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()!=    0)    {    If(input  ==  null  ||  input.length()!=  0)  {	  	non-compiled	[CE]  ';'  expected	94	None	add
170	[BUG]  [BUGGY]  OutputWriter  out  =  new  OutputWriter(input.getCharSequence());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  OutputWriter  out  =  new  OutputWriter(input.getCharSequence());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	OutputWriter  out  =  new  OutputWriter(input.getCharSequence());	  if(out!=    null)    {    out.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
171	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().append( ",The  Writer  must  not  be  null. ");  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().append( ",The  Writer  must  not  be  null. ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().append( ",The  Writer  must  not  be  null. ");	  Thread.currentThread().getContextClassLoader().append(   "The    Writer    must    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
172	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName( "The  Writer  must  not  be  null. ");  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName( "The  Writer  must  not  be  null. ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName( "The  Writer  must  not  be  null. ");	  Thread.currentThread().getContextClassLoader().append(   "The    Writer    must    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
173	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(this,  input);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
174	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  out);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(this,  out);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
175	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  output);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  output);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(this,  output);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
176	[BUG]  [BUGGY]  Thread.currentThread().interrupt(out);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().interrupt(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().interrupt(out);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
177	[BUG]  [BUGGY]  Thread.currentThread().interrupt(input);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().interrupt(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().interrupt(input);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
178	[BUG]  [BUGGY]  Thread.currentThread().interrupt(out,  input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().interrupt(out,  input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().interrupt(out,  input);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
179	[BUG]  [BUGGY]  out  =  output.getChars(0,  out);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out  =  output.getChars(0,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out  =  output.getChars(0,  out);	  if(input    ==    null)    {    out    =    output.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
180	[BUG]  [BUGGY]  out  =  output.getChars(0);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out  =  output.getChars(0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out  =  output.getChars(0);	  if(input    ==    null)    {    out    =    output.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
181	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(input  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()    ==    0)    {    if(input  ==  null  ||  input.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
182	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(input!=  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(input!=  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()    ==    0)    {    if(input!=  null  ||  input.length()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
183	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(input  ==  null  ||  input.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(input  ==  null  ||  input.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()    ==    0)    {    if(input  ==  null  ||  input.length()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
184	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  If(input  ==  null  ||  input.length()  ==  0)  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  If(input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input    ==    null    ||    input.length()    ==    0)    {    If(input  ==  null  ||  input.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
185	[BUG]  [BUGGY]  if(input  ==  null)  {  if(out!=  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  if(out!=  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  if(out!=  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    if(out!=    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
186	[BUG]  [BUGGY]  OutputStream  out  =  input.getOutputStream();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  OutputStream  out  =  input.getOutputStream();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	OutputStream  out  =  input.getOutputStream();	  if(out!=    null)    {    out.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
187	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu	  	non-compiled	[CE]  	61	None	add
188	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
189	[BUG]  [BUGGY]  if(input  ==  null)  {  if(out  ==  null  ||  out.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  if(out  ==  null  ||  out.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  if(out  ==  null  ||  out.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    if(out    ==    null    ||    out.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
190	[BUG]  [BUGGY]  out.write(Integer.toString(input),  out);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input),  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input),  out);	  if(input    ==    null)    {    out.write(Integer.toString(pos),    input);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
191	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(class.getClassLoader());  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(class.getClassLoader());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(class.getClassLoader());	  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
192	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null.       ");    }    if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
193	[BUG]  [BUGGY]  String  c  =  input.getChars(input);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  String  c  =  input.getChars(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	String  c  =  input.getChars(input);	  String    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
194	[BUG]  [BUGGY]  char[]  c  =  input.getChars(pt,  out,  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(pt,  out,  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(pt,  out,  pos);	  char[]    c    =    input.getChars(pt,    out);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
195	[BUG]  [BUGGY]  char[]  c  =  input.getChars(pt,  out,  0);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(pt,  out,  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(pt,  out,  0);	  char[]    c    =    input.getChars(pt,    out);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
196	[BUG]  [BUGGY]  float  pt  =  input.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  float  pt  =  input.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	float  pt  =  input.length();	  int    pt    =    input.length()    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
197	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(input,  output));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(input,  output));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(input,  output));	  Thread.currentThread().getContextClassLoader().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
198	[BUG]  [BUGGY]  OutputStream  input  =  input.getOutputStream();  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  OutputStream  input  =  input.getOutputStream();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	OutputStream  input  =  input.getOutputStream();	  if(out    ==    null)    {    out    =    input.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
199	[BUG]  [BUGGY]  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	new  IllegalArgumentException( "The  Writer  must  not  be  null. ");	  throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null   ");    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
200	[BUG]  [BUGGY]  char[]  c  =  input.getChars(input);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(input);	  char[]    c    =    input.getString();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
201	[BUG]  [BUGGY]  if(input  ==  null  ||  out.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out.length()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  out.length()!=  0)  {	  if(input    ==    null    ||    input.length()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
202	[BUG]  [BUGGY]  if(out  ==  null)  {  If  (input  ==  null)  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null)  {  If  (input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null)  {  If  (input  ==  null)  {	  if    (input    ==    null)    {    If    (input    ==    null)    {    	non-compiled	[CE]  ';'  expected	77	None	replace
203	[BUG]  [BUGGY]  if(out!=  null)  {  If  (input  ==  null)  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  If  (input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out!=  null)  {  If  (input  ==  null)  {	  if    (input    ==    null)    {    If    (input    ==    null)    {    	non-compiled	[CE]  ';'  expected	77	None	replace
204	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(out!=  null)  {	  if    (input    ==    null)    {    if    (input!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
205	[BUG]  [BUGGY]  if(out!=  null)  {  [FE]  IllegalArgumentException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out!=  null)  {	  if    (input    ==    null)    {    if    (input!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	31	1	replace
206	[BUG]  [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  ==  null  ||  output  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  ==  null  ||  output  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out    ==    null    ||    input    ==    null)    {    if(out  ==  null  ||  output  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
207	[BUG]  [BUGGY]  OutputFactory  outputFactory  =  getOutputFactory();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  OutputFactory  outputFactory  =  getOutputFactory();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	OutputFactory  outputFactory  =  getOutputFactory();	  if(input    ==    null)    {    out.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
208	[BUG]  [BUGGY]  OutputStream  input  =  new  BufferedOutputStream(out.readLine());  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  OutputStream  input  =  new  BufferedOutputStream(out.readLine());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	OutputStream  input  =  new  BufferedOutputStream(out.readLine());	  if(input    ==    null)    {    out.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
209	[BUG]  [BUGGY]  Character[]  c  =  input.getChars(input);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Character[]  c  =  input.getChars(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Character[]  c  =  input.getChars(input);	  Character[]    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
210	[BUG]  [BUGGY]  if(out!=  null)  {  out  =  output.getChars(0);  }  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out!=  null)  {  out  =  output.getChars(0);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out!=  null)  {  out  =  output.getChars(0);  }	  if(input    ==    null)    {    out    =    output.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
211	[BUG]  [BUGGY]  Output  output  =  output.getChars(0,  out);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Output  output  =  output.getChars(0,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Output  output  =  output.getChars(0,  out);	  if(input    ==    null)    {    out    =    output.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
212	[BUG]  [BUGGY]  out.write(Integer.toHexString(input.charAt(0)));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toHexString(input.charAt(0)));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toHexString(input.charAt(0)));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
213	[BUG]  [BUGGY]  OutputStream  out  =  output.getOutputStream();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  OutputStream  out  =  output.getOutputStream();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	OutputStream  out  =  output.getOutputStream();	  if(input!=    null)    {    output.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
214	[BUG]  [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null ");  }	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null       ");    }    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
215	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input!=  null)  {  throw	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
216	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  if(input  ==  null)  {  throw	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
217	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().reset();  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClass().reset();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClass().reset();	  Thread.currentThread().getContextClass().getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
218	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().setLocal(out);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClass().setLocal(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClass().setLocal(out);	  Thread.currentThread().getContextClass().getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
219	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().setCurrentName(input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClass().setCurrentName(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClass().setCurrentName(input);	  Thread.currentThread().getContextClass().getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
220	[BUG]  [BUGGY]  int  pt  =  output.length();  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  int  pt  =  output.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	int  pt  =  output.length();	  int    pt    =    out.length();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
221	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reset(out);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reset(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().reset(out);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
222	[BUG]  [BUGGY]  int  pos  =  input.length()  +  out.length();  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  int  pos  =  input.length()  +  out.length();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	int  pos  =  input.length()  +  out.length();	  int    pos    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
223	[BUG]  [BUGGY]  out.write(input.substring(1));  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.substring(1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.substring(1));	  out.write(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
224	[BUG]  [BUGGY]  out.write(input.getBytes());  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.getBytes());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.getBytes());	  out.write(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
225	[BUG]  [BUGGY]  out.write(input.charAt(1));  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.charAt(1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.charAt(1));	  out.write(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
226	[BUG]  [BUGGY]  Char[]  c  =  input.getChars(input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getChars(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getChars(input);	  Char[]    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
227	[BUG]  [BUGGY]  Char[]  c  =  input.getChars(out);  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getChars(out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getChars(out);	  Char[]    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
228	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(out  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  if(out  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  if(out  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    if(out    {    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
229	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [CE]  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  if(input  ==  nu	  	non-compiled	[CE]  	56	None	add
230	[BUG]  [BUGGY]  out.write(Integer.toString(input.substring(1)));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(input.substring(1)));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(input.substring(1)));	  out.write(Integer.toString(input.charAt(0)));    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
231	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	if(out  ==  null  ||  out  ==  null)  {	  if(out    ==    null    ||    input    ==    null)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	1	replace
232	[BUG]  [BUGGY]  if(out  ==  null  ||  out  ==  null)  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null  ||  out  ==  null)  {	  if(out    ==    null    ||    input    ==    null)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	73	1	replace
233	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalSequenceException( " "));  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IllegalSequenceException( " "));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(new  IllegalSequenceException( " "));	  Thread.currentThread().getContextClassLoader().report(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
234	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IOException( " "));  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(new  IOException( " "));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(new  IOException( " "));	  Thread.currentThread().getContextClassLoader().report(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
235	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().append( "The  Writer  must  not  be  null! ");  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().append( "The  Writer  must  not  be  null! ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().append( "The  Writer  must  not  be  null! ");	  Thread.currentThread().getContextClassLoader().append(   "The    Writer    must    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
236	[BUG]  [BUGGY]  if(input  ==  null  ||  out!=  null)  {  If(input  ==  null  ||  out  ==  null)  {  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  out!=  null)  {  If(input  ==  null  ||  out  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  out!=  null)  {  If(input  ==  null  ||  out  ==  null)  {	  if(input    ==    null    ||    out    ==    null)    {    If(input    ==    null    ||    out    ==    null)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
237	[BUG]  [BUGGY]  char[]  c  =  output.getChars(input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  output.getChars(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  output.getChars(input);	  char[]    c    =    output.getChars();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
238	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null  [CE]  unclosed  string  literal  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null	  	non-compiled	[CE]  unclosed  string  literal	1	None	add
239	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null!     ");    }    if(input!=  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null!     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null!       ");        }        if(input!=    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null!       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!   ");  }  if(input!=  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null!	  	non-compiled	[CE]  unclosed  string  literal	3	None	add
240	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(out.getKey());  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(out.getKey());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(out.getKey());	  Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey());    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
241	[BUG]  [BUGGY]  if(input  ==  null)  {  out  =  input.getChars(1);  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  out  =  input.getChars(1);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  out  =  input.getChars(1);  }	  if(input!=    null)    {    out    =    input.getChars(0);    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
242	[BUG]  [BUGGY]  out.write('n');  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write('n');  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write('n');	  out.write(input);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
243	[BUG]  [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  {  null  ||  input  ==  null)  {  [CE]  ')'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null  ||  input  ==  null)  {  if(out  {  null  ||  input  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out    ==    null    ||    input    ==    null)    {    if(out  {  null  ||  input  ==  null)  {	  	non-compiled	[CE]  ')'  expected	72	None	add
244	[BUG]  [BUGGY]  CharSequence  input  =  input.getChars(pos,  out);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  CharSequence  input  =  input.getChars(pos,  out);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	CharSequence  input  =  input.getChars(pos,  out);	  char[]    c    =    input.getChars(pt,    out);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
245	[BUG]  [BUGGY]  Char[]  c  =  input.getChars(pos,  out,  pos);  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getChars(pos,  out,  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getChars(pos,  out,  pos);	  Char[]    c    =    input.getChars(pos,    out);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
246	[BUG]  [BUGGY]  Char[]  c  =  input.getChars(pos,  pos);  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Char[]  c  =  input.getChars(pos,  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Char[]  c  =  input.getChars(pos,  pos);	  Char[]    c    =    input.getChars(pos,    out);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
247	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length  ==  0)  {  [CE]  cannot  find  symbol  length  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length  ==  0)  {	  if(input    ==    null    ||    output    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  length	15	None	replace
248	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().intermediateThread().setContextClassLoader(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
249	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().getContextClassLoader();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().intermediateThread().getContextClassLoader();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().intermediateThread().getContextClassLoader();	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
250	[BUG]  [BUGGY]  out.write(Integer.toHexString(pos  +  1));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toHexString(pos  +  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toHexString(pos  +  1));	  out.write(Integer.toHexString(pos));    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
251	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  <  =  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  <  =  0)  {	  if    (input    ==    null)    {    if    (input    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
252	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(input);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().intermediateThread().setContextClassLoader(input);	  Thread.currentThread().setContextClassLoader(input);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
253	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.input);  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this.input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().setContextClassLoader(this.input);	  Thread.currentThread().setContextClassLoader(input);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
254	[BUG]  [BUGGY]  out.write(Integer.toString(pt));  [CE]  illegal  start  of  type  [FE]                        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(pt));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(pt));	  out.write(Integer.toString(input));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
255	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentSequence(input);  [CE]  illegal  start  of  type  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentSequence(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentSequence(input);	          if(input    ==    null)    {    throw    new    IllegalArgumentException(       "The    Writer    must    not    be    null       ");    }    if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
256	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null..   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null..   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	61	1	add
257	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null..   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null..   ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null..   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null..   ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null..   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	61	1	add
258	[BUG]  [BUGGY]  Character[]  c  =  input.getChars(pos);  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Character[]  c  =  input.getChars(pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Character[]  c  =  input.getChars(pos);	  Character[]    c    =    input.getChars();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
259	[BUG]  [BUGGY]  If(input  ==  null  ||  input.length()  ==  0)  {  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  If(input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	If(input  ==  null  ||  input.length()  ==  0)  {	  if(out    ==    null    ||    input.length()    ==    0)    {    If(out    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  ';'  expected	36	None	replace
260	[BUG]  [BUGGY]  if(input!=  null)  {  out.write(Integer.toString(pos  +  1));  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  out.write(Integer.toString(pos  +  1));  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  out.write(Integer.toString(pos  +  1));  }	  if(input!=    null)    {    out.write(Integer.toString(pos));    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
261	[BUG]  [BUGGY]  if(input  ==  null)  {  out.write(Integer.toString(pos  +  1),  input);  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  out.write(Integer.toString(pos  +  1),  input);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null)  {  out.write(Integer.toString(pos  +  1),  input);  }	  if(input    ==    null)    {    out.write(Integer.toString(pos),    input);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
262	[BUG]  [BUGGY]  out.write(input.charAt(0),  input.charAt(0));  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.charAt(0),  input.charAt(0));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(input.charAt(0),  input.charAt(0));	  out.write(input.charAt(0));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
263	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(Integer.toString(pos));  }  [CE]  illegal  start  of  type  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(Integer.toString(pos));  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  out.write(Integer.toString(pos));  }	  if(input    ==    null)    {    out.write(Integer.toString(pos));    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
264	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input);  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input);  }	  if(input    ==    null)    {    out.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
265	[BUG]  [BUGGY]  throw  new  IllegalStateException( "The  Writer  must  not  be  null! ");  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  throw  new  IllegalStateException( "The  Writer  must  not  be  null! ");  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	throw  new  IllegalStateException( "The  Writer  must  not  be  null! ");	  throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null!   ");    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
266	[BUG]  [BUGGY]  char[]  c  =  input.getChars(input,  out,  0);  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getChars(input,  out,  0);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getChars(input,  out,  0);	  char[]    c    =    input.getChars(input,    out);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
267	[BUG]  [BUGGY]  Thread.currentThread().interrupt(out,  pos);  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().interrupt(out,  pos);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().interrupt(out,  pos);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
268	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(InputEncoding.UTF8));  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(JSError.make(InputEncoding.UTF8));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().report(JSError.make(InputEncoding.UTF8));	  Thread.currentThread().getContextClassLoader().reportCodeChange();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
269	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
270	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null.     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null.     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null.       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null.       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null.   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	59	1	add
271	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(input);  [CE]  illegal  start  of  type  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(input);  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().process(input);	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
272	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input.getName());  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input.getName());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(input.getName());	  Thread.currentThread().getContextClassLoader().reset();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
273	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().setCurrentName(input.getName());  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClass().setCurrentName(input.getName());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClass().setCurrentName(input.getName());	  Thread.currentThread().getContextClass().getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
274	[BUG]  [BUGGY]  if(out  ==  null)  {  out  =  output.getChars(0);  }  [CE]  illegal  start  of  type  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null)  {  out  =  output.getChars(0);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null)  {  out  =  output.getChars(0);  }	  if(input    ==    null)    {    out    =    output.getChars(0,    out);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
275	[BUG]  [BUGGY]  if(out  ==  null)  {  output.write(input);  }  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(out  ==  null)  {  output.write(input);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(out  ==  null)  {  output.write(input);  }	  if(input    ==    null)    {    output.write(input);    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
276	[BUG]  [BUGGY]  if(input!=  null)  {  out.write(Integer.toString(pos  +  1),  input);  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null)  {  out.write(Integer.toString(pos  +  1),  input);  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input!=  null)  {  out.write(Integer.toString(pos  +  1),  input);  }	  if(input!=    null)    {    out.write(Integer.toString(pos),    input);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
277	[BUG]  [BUGGY]  char[]  c  =  input.getCurrentSeq();  [CE]  illegal  start  of  type  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  char[]  c  =  input.getCurrentSeq();  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	char[]  c  =  input.getCurrentSeq();	  char[]    c    =    input.getCurrentSequence();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
278	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	add	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	1	add
279	[BUG]  [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]          if(input    ==    null)    {    throw    new    IllegalArgumentException(     "The    Writer    must    not    be    null     ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException(   "The  Writer  must  not  be  null     ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	                if(input        ==        null)        {        throw        new        IllegalArgumentException(       "The        Writer        must        not        be        null       ");        }        if(input    ==    null)    {    throw    new    IllegalArgumentException(   "The    Writer    must    not    be    null       ");    }    if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null. ");  }  if(input  ==  null)  {  throw  new  IllegalArgumentException( "The  Writer  must  not  be  null   ");  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	54	1	add
280	[BUG]  [BUGGY]  out.write(Integer.toString(pos  +  1));  [CE]  illegal  start  of  type  [FE]                      StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(Integer.toString(pos  +  1));  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	out.write(Integer.toString(pos  +  1));	  out.write(Integer.toString(pos));    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
281	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input.charAt(0));  }  [CE]  illegal  start  of  type  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input.charAt(0));  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input.charAt(0));  }	  if(input    ==    null)    {    out.write(input.charAt(0));    }    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
282	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input.getValue());  [CE]  illegal  start  of  type  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(input.getValue());  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(input.getValue());	  Thread.currentThread().getContextClassLoader().setCurrentName(input.getKey());    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
283	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input.length());  }  [CE]  illegal  start  of  type  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      public  final  void  translate(CharSequence  input,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input.length());  }  [BUGGY]      if  (out  ==  null)  {  throw  new  IllegalArgumentException(     "The  Writer  must  not  be  null     ");  }  if  (input  ==  null)  {  return;  }  int  pos  =  0;  int  len  =  input.length();  while  (pos  <  len)  {  int  consumed  =  translate(input,  pos,  out);  if  (consumed  ==  0)  {  [CLASS]  CharSequenceTranslator  [METHOD]  translate  [RETURN_TYPE]  void  CharSequence  input  Writer  out  [VARIABLES]  boolean  CharSequence  input  Writer  out  int  consumed  len  pos  pt  char[]  c  	projects/Lang6/src/main/java/org/apache/commons/lang3/text/translate/CharSequenceTranslator.java	1.0	76	76	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {  out.write(input.length());  }	  if(input    ==    null)    {    out.write(input.length());    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
