bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  endValue(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonWriter.EXPR_RESULT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.EXPR_RESULT);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  endValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonNull.createJsonNull());  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonNull.createJsonNull());	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  endValue(JsonWriter.START_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonWriter.START_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_OBJECT);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(null));  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceNull(JsonNull.valueOf(null));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(null));	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(this.beforeValue));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this.beforeValue));	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0));  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(0));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0));	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  replace(JsonNull.valueOf(null));  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replace(JsonNull.valueOf(null));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(null));	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this));  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(this));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this));	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  replaceStart(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceStart(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceNull(JsonNull.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(separator));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  replace(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replace(JsonNull.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(separator));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  replaceValue(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  replaceValue(JsonNull.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonNull.valueOf(separator));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  replaceNext(JsonNull.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(separator));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(name));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(name));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  replaceStart(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceStart(NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(NONEMPTY_OBJECT);	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  NONEMPTY_OBJECT);	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  replace(DANGLING_NAME,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replace(DANGLING_NAME,  NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  NONEMPTY_OBJECT);	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  replace(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replace(DANGLING_NAME);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME);	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_OBJECT);  break;  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT);  break;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  replaceTop(jsonWriter);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  replaceTop(jsonWriter);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replace(JsonNull.createJsonNull());  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.createJsonNull(),  1);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  1);	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  replaceNull(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceNull(JsonNull.createJsonNull());  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.createJsonNull(),  beforeValue);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  beforeValue);	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  out);	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(DANGLING_NAME,  DANGLING_NAME);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DANGLING_NAME);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  out);  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(DANGLING_NAME,  out);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  out);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  replaceTop(NONMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONMPTY_OBJECT);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DONEMPTY_OBJECT);  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(DANGLING_NAME,  DONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DONEMPTY_OBJECT);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  	4	None	replace
53	[BUG]  [BUGGY]  removeChild(JsonNull.createJsonNull());  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  removeChild(JsonNull.createJsonNull());  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonNull.createJsonNull());	  repaint();    	non-compiled	[CE]  	6	None	replace
54	[BUG]  [BUGGY]  removeChild(JsonString.valueOf(separator));  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  removeChild(JsonString.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonString.valueOf(separator));	  repaint();    	non-compiled	[CE]  	6	None	replace
55	[BUG]  [BUGGY]  invalidate();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  invalidate();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	invalidate();	  repaint();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  repaint(JsonNull.DEFAULT_TYPE);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE);	  repaint();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	1	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   ");  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  problem.   ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	1	None	replace
59	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Not  a  valid  start  of  expression. ");  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Not  a  valid  start  of  expression. ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Not  a  valid  start  of  expression. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	1	None	replace
60	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: ");  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	1	None	replace
61	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   ");  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.   ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	1	None	replace
62	[BUG]  [BUGGY]  if(value  ==  null)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  	10	None	replace
63	[BUG]  [BUGGY]  if(start)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(start)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  	10	None	replace
64	[BUG]  [BUGGY]  if(value  ==  null)  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  rehash();    	non-compiled	[CE]  	10	None	replace
65	[BUG]  [BUGGY]  if(value  ==  null)  {  rehash();  }  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehash();  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  rehash();  }	  rehash();    	non-compiled	[CE]  	10	None	replace
66	[BUG]  [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  	10	None	replace
67	[BUG]  [BUGGY]  replaceNext(DANGLING_NAME);  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceNext(DANGLING_NAME);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(DANGLING_NAME);	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  	2	None	replace
68	[BUG]  [BUGGY]  recalculateLocalSeparator();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  recalculateLocalSeparator();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalSeparator();	  repaint();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  recalculateIdentifiers();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  recalculateIdentifiers();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateIdentifiers();	  repaint();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  recalculateLocalMutator();  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  recalculateLocalMutator();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalMutator();	  repaint();    	non-compiled	[CE]  	6	None	replace
71	[BUG]  [BUGGY]  replaceStart(DANGLING_NAME);  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceStart(DANGLING_NAME);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(DANGLING_NAME);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  	4	None	replace
72	[BUG]  [BUGGY]  replaceTop(NONEMPTY_EXPR_RESULT);  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_EXPR_RESULT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_EXPR_RESULT);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  	4	None	replace
73	[BUG]  [BUGGY]  replaceTop(NONEMPTY_EXPR_OBJECT);  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_EXPR_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_EXPR_OBJECT);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  	4	None	replace
74	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ELEMENT);  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ELEMENT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_ELEMENT);	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  	4	None	replace
75	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  null);  [CE]  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(null),  null);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  null);	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  	9	None	replace
76	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(null));  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceNext(JsonNull.valueOf(null));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(null));	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  	9	None	replace
77	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ARRAY);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_ARRAY);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  replaceTop(NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_STRING);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_STRING);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
80	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY);  break;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_ARRAY);  break;  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_ARRAY);  break;	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
81	[BUG]  [BUGGY]  replaceTop(NON_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NON_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NON_OBJECT);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
82	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
83	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
84	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.   ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Nesting  value.   ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.   ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
85	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  replaceNext(JsonNull.createJsonNull());  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  replaceWithNull(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  replaceWithNull(JsonNull.createJsonNull());  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
87	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
88	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  replaceJsonNull(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceJsonNull(JsonNull.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceJsonNull(JsonNull.valueOf(separator));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
90	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceFirst(JsonNull.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(separator));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  if(this.beforeValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(this.beforeValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  if(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
94	[BUG]  [BUGGY]  if(this.beforeValue)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(this.beforeValue)  {  rehashCode();  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue)  {  rehashCode();  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
95	[BUG]  [BUGGY]  if(this.beforeValue)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(this.beforeValue)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  startValue();  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  startValue();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue();	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_STATEMENT);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonWriter.DEFAULT_STATEMENT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_STATEMENT);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
99	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonWriter.DEFAULT_NAME);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_NAME);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
100	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
101	[BUG]  [BUGGY]  replaceTop(NONEMPTY_LIST);  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(NONEMPTY_LIST);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_LIST);	      	non-compiled	[CE]  	8	None	replace
102	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
103	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  out.append( ", ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  out.append( ", ");  }	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  out.append( "n ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  out.append( "n ");  }	  replaceTop(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
106	[BUG]  [BUGGY]  rehashTable();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  rehashTable();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable();	  repaint();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
107	[BUG]  [BUGGY]  init();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  init();  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	init();	  repaint();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
108	[BUG]  [BUGGY]  if(this.beforeValue)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(this.beforeValue)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue)  {  rehash();  }  else  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  if(this.beforeValue)  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.beforeValue)  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue)  {  rehash();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  if(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
111	[BUG]  [BUGGY]  if(start)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(start)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  throw  new  IllegalStateException( " ");  }	  rehash();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
112	[BUG]  [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  rehashCode();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
113	[BUG]  [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(value  ==  null)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  rehashCode();  }  else  {  replaceTop(NONEMPTY_OBJECT);  return;  }	  rehashCode();    	non-compiled	[CE]  	12	None	replace
114	[BUG]  [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  	3	None	replace
115	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  str);  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  str);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  str);	  replaceTop(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  	3	None	replace
116	[BUG]  [BUGGY]  replaceFieldName(JsonNull.valueOf(separator));  [CE]  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  replaceFieldName(JsonNull.valueOf(separator));  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFieldName(JsonNull.valueOf(separator));	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  	7	None	replace
117	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  	7	None	replace
118	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(separator));    	non-compiled	[CE]  	7	None	replace
119	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_SYNTHETIC);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
121	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
122	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);	  endValue();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
123	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
124	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
125	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  replaceTop(JsonNull.createJsonNull());  }	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
126	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.createJsonNull());    	non-compiled	[CE]  	5	None	replace
127	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  	2	None	replace
128	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  	2	None	replace
129	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  	2	None	replace
130	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  	2	None	replace
131	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [CE]  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  	2	None	replace
132	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
133	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( ", ");  }  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( ", ");  }	  replaceTop(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
134	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
135	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
136	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
137	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  [BUGGY]    break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(   "Nesting  problem.   ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);	  replaceTop(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
