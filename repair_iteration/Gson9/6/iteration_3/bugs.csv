bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  replace(NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_OBJECT,  DANGLING_NAME);	  replace(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
2	[BUG]  [BUGGY]  replace(DANGLING_NAME,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  DANGLING_NAME);	  replace(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
3	[BUG]  [BUGGY]  replace(NoneMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replace(NoneMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NoneMPTY_OBJECT,  DANGLING_NAME);	  replace(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
4	[BUG]  [BUGGY]  replace(DANGLING_NAME,  DANGLING_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME,  DANGLING_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  DANGLING_OBJECT);	  replace(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
5	[BUG]  [BUGGY]  replaceValue(NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(NONEMPTY_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(NONEMPTY_ELEMENT);	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
6	[BUG]  [BUGGY]  replace(NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_ELEMENT);	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
7	[BUG]  [BUGGY]  replaceNext(NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_ELEMENT);	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
8	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ELEMENT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_ELEMENT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_ELEMENT,  DANGLING_NAME);	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
9	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  NONEMPTY_ELEMENT);	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
10	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
11	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  should  not  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Native  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
12	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
13	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAMES);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES,  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAMES,  null);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  RectangleEdge.this.reset();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.reset();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.reset();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  RectangleEdge.this.rehashCode();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.rehashCode();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.rehashCode();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  RectangleEdge  endPointer  =  getEndPointer();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge  endPointer  =  getEndPointer();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge  endPointer  =  getEndPointer();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES,  true);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAMES,  true);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES,  first);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAMES,  first);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAMES,  first);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  replaceLeft(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(DANGLING_NAME);	  replaceStart(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
21	[BUG]  [BUGGY]  replaceEnd(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceEnd(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceEnd(DANGLING_NAME);	  replaceStart(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
22	[BUG]  [BUGGY]  replaceBottom(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceBottom(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceBottom(NONEMPTY_OBJECT);	  replaceStart(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
23	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
24	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehash();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  rehash();	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
25	[BUG]  [BUGGY]  while(value!=  null)  {  rehash();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null)  {  rehash();	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
26	[BUG]  [BUGGY]  while(value!=  null)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null)  {  rehash();  }	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
27	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  rehash();  }	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
28	[BUG]  [BUGGY]  replaceTop(NONEMPTY_NAME,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_NAME,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_NAME,  DANGLING_NAME);	  replaceTop(DANGLING_NAME,    DONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
29	[BUG]  [BUGGY]  replaceNext(DANGLING_NAME,  DONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(DANGLING_NAME,  DONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(DANGLING_NAME,  DONEMPTY_OBJECT);	  replaceTop(DANGLING_NAME,    DONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
30	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  DONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DONEMPTY_NAME);	  replaceTop(DANGLING_NAME,    DONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  replace(DANGLING_NAME,  DONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME,  DONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  DONEMPTY_OBJECT);	  replaceTop(DANGLING_NAME,    DONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
32	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
33	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_EXPR_RESULT);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
34	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_STRING);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
35	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_OBJECT,  out);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
36	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAME);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAME,  true);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME,  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAME,  null);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAME));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  String.valueOf(separator));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
41	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
42	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
43	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
44	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(str.charAt(0));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
45	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Locale.getDefault());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Locale.getDefault());	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
46	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(name));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(name));	  replaceTop(JsonNull.valueOf(name));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
47	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this.name));  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this.name));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this.name));	  replaceTop(JsonNull.valueOf(name));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
48	[BUG]  [BUGGY]  removeValue(JsonNull.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  removeValue(JsonNull.valueOf(name));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(JsonNull.valueOf(name));	  replaceTop(JsonNull.valueOf(name));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(name),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(name),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(name),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(name));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
50	[BUG]  [BUGGY]  replace(JsonNull.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(name));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(name));	  replaceTop(JsonNull.valueOf(name));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
51	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(0));  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(0));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(0));	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(this.beforeValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(this.beforeValue));	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(this.afterValue));	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(this));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(this));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(this));	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT,  str);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
56	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  out);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
57	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_NAME,  str);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_NAME,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_NAME,  str);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
58	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_OBJECT,  str);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
59	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  str.toString());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  str.toString());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  str.toString());	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
60	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  SHORT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  SHORT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  SHORT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
61	[BUG]  [BUGGY]  Corrections.checkState(JsonNull.createJsonNull()!=  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Corrections.checkState(JsonNull.createJsonNull()!=  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Corrections.checkState(JsonNull.createJsonNull()!=  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
62	[BUG]  [BUGGY]  NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
63	[BUG]  [BUGGY]  NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
64	[BUG]  [BUGGY]  NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  replaceTop(JsonNull.createJ  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  replaceTop(JsonNull.createJ  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborJsonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  replaceTop(JsonNull.createJ	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
65	[BUG]  [BUGGY]  Corrections.checkState(JsonNull.createJsonNull()  ==  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  Corrections.checkState(JsonNull.createJsonNull()  ==  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Corrections.checkState(JsonNull.createJsonNull()  ==  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
66	[BUG]  [BUGGY]  RectangleEdge.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
67	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Negative  start  of  expression.   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
68	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression.   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
69	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.n ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.n ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
70	[BUG]  [BUGGY]  replace(JsonNull.valueOf(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(this.beforeValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(this.beforeValue));	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
71	[BUG]  [BUGGY]  replace(JsonNull.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(this.afterValue));	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
72	[BUG]  [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
73	[BUG]  [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.EMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.EMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(separator),  JsonNull.EMPTY_STRING);	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
74	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
75	[BUG]  [BUGGY]  replaceValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
76	[BUG]  [BUGGY]  removeValue(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  removeValue(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(JsonString.valueOf(separator));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
77	[BUG]  [BUGGY]  removeNext(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  removeNext(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeNext(JsonString.valueOf(separator));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
78	[BUG]  [BUGGY]  removeFieldName(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  removeFieldName(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeFieldName(JsonString.valueOf(separator));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
79	[BUG]  [BUGGY]  replaceTop(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonString.valueOf(separator));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
80	[BUG]  [BUGGY]  removeChild(JsonString.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonString.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonString.valueOf(this.afterValue));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
81	[BUG]  [BUGGY]  removeChild(JsonString.valueOf(0));  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonString.valueOf(0));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonString.valueOf(0));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
82	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_EXPR_RESULT);	  endValue(JsonWriter.DEFAULT_STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
83	[BUG]  [BUGGY]  validateValue(JsonWriter.DEFAULT_STATEMENT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonWriter.DEFAULT_STATEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(JsonWriter.DEFAULT_STATEMENT);	  endValue(JsonWriter.DEFAULT_STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
84	[BUG]  [BUGGY]  validate(JsonWriter.DEFAULT_STATEMENT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  validate(JsonWriter.DEFAULT_STATEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validate(JsonWriter.DEFAULT_STATEMENT);	  endValue(JsonWriter.DEFAULT_STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
85	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_EXTENDS);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_EXTENDS);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_EXTENDS);	  endValue(JsonWriter.DEFAULT_STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
86	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
87	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JSONNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JSONNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull(),  JSONNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
88	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull()));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull()));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull()));	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
89	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
90	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
91	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
92	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_EXPR_RESULT);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_STRING);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
95	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_NAME);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
96	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_OBJECT,  out);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
97	[BUG]  [BUGGY]  replaceFirst(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonWriter.NONEMPTY_OBJECT);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
98	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_NAME,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_NAME,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_NAME,  DANGLING_NAME);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
99	[BUG]  [BUGGY]  replaceTop(JsonWriter.DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.DEFAULT_NAME);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
100	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_NAME,  1);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_NAME,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_NAME,  1);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
101	[BUG]  [BUGGY]  validateValue(JsonWriter.DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonWriter.DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(JsonWriter.DEFAULT_NAME);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
102	[BUG]  [BUGGY]  rehashTable(JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  rehashTable(JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable(JsonWriter.DEFAULT_TITLE_FONT);	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
103	[BUG]  [BUGGY]  rehashTable(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  rehashTable(JsonWriter.EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable(JsonWriter.EXPR_RESULT);	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
104	[BUG]  [BUGGY]  validateValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  validateValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue();	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
105	[BUG]  [BUGGY]  endValue(JsonWriter.START_OBJECT,  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_OBJECT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_OBJECT,  1);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
106	[BUG]  [BUGGY]  endValue(JsonWriter.START_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_EXPR_RESULT);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
107	[BUG]  [BUGGY]  endValue(JsonWriter.END_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.END_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.END_OBJECT);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
108	[BUG]  [BUGGY]  endValue(JsonWriter.START_TYPE);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_TYPE);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
109	[BUG]  [BUGGY]  endValue(JsonWriter.START_OBJECT,  true);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_OBJECT,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_OBJECT,  true);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
110	[BUG]  [BUGGY]  endValue(JsonWriter.START_OBJECT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_OBJECT,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_OBJECT,  DEFAULT_NAME);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
111	[BUG]  [BUGGY]  replaceTop(NONMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONMPTY_OBJECT,  DANGLING_NAME);	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
112	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  NONMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  NONMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  NONMPTY_OBJECT);	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
113	[BUG]  [BUGGY]  replace(DANGLING_NAME,  NONMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME,  NONMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  NONMPTY_OBJECT);	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
114	[BUG]  [BUGGY]  replaceStart(NONMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(NONMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(NONMPTY_OBJECT);	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
115	[BUG]  [BUGGY]  removeValue(NONMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  removeValue(NONMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(NONMPTY_OBJECT);	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
116	[BUG]  [BUGGY]  parent.replaceChild(out,  parser);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  parser);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  parser);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
117	[BUG]  [BUGGY]  safeMultiply(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
118	[BUG]  [BUGGY]  parent.replaceChild(out,  null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  null);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
119	[BUG]  [BUGGY]  parent.replaceChild(out,  params);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  params);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  params);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
120	[BUG]  [BUGGY]  parent.replaceChild(out,  '-');  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  '-');  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  '-');	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
121	[BUG]  [BUGGY]  safeMultiply(DANGLING_NAME));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(DANGLING_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(DANGLING_NAME));	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
122	[BUG]  [BUGGY]  NoneMPTY_OBJECT.append( ", ");  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NoneMPTY_OBJECT.append( ", ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NoneMPTY_OBJECT.append( ", ");	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
123	[BUG]  [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.substring(0,  str.length()  -  1));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.substring(0,  str.length()  -  1));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
124	[BUG]  [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null  &&  str.length()  >  0)  {  out.append(separator);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
125	[BUG]  [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null  &&  str.length()  >  0)  {  out.append(separator);  replaceTop(NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
126	[BUG]  [BUGGY]  while(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
127	[BUG]  [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(str.length()  -  1)  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(str.length()  -  1)  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(str.length()  -  1)  }	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
128	[BUG]  [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(str.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(str.length()  -  1));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(str.length()  -  1));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
129	[BUG]  [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(0));  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(0));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null  &&  str.length()  >  0)  {  out.append(str.charAt(0));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
130	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "Missing  value  for  name: "  +  Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "Missing  value  for  name: "  +  Feature.QUOTE_FIELD_NAMES);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "Missing  value  for  name: "  +  Feature.QUOTE_FIELD_NAMES);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
131	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  MessageFormat.format(DANGLING_NAME,  new  String[]  {  name  }  ));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  MessageFormat.format(DANGLING_NAME,  new  String[]  {  name  }  ));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  MessageFormat.format(DANGLING_NAME,  new  String[]  {  name  }  ));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
132	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.valid.start  of  expression. ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
133	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "Missing  value  for  name: "  +  Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "Missing  value  for  name: "  +  Feature.QUOTE_FIELD_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "Missing  value  for  name: "  +  Feature.QUOTE_FIELD_NAME);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
134	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  MessageFormat.format(DANGLING_NAME,  new  String[]  {  }  ));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  MessageFormat.format(DANGLING_NAME,  new  String[]  {  }  ));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  MessageFormat.format(DANGLING_NAME,  new  String[]  {  }  ));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
135	[BUG]  [BUGGY]  RectangleEdge.this.replaceChild(null,  null);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.replaceChild(null,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.replaceChild(null,  null);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
136	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
137	[BUG]  [BUGGY]  replaceValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
138	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_INT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_INT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_INT);	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
139	[BUG]  [BUGGY]  initValue();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  initValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	initValue();	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
140	[BUG]  [BUGGY]  validateValue(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonWriter.EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(JsonWriter.EXPR_RESULT);	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
141	[BUG]  [BUGGY]  validateValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(JsonNull.createJsonNull());	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
142	[BUG]  [BUGGY]  validateValue(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  validateValue(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(JsonString.valueOf(separator));	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
143	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME,  out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME,  out);	  replaceTop(NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
144	[BUG]  [BUGGY]  replaceStart(DANGLING_NAME,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(DANGLING_NAME,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(DANGLING_NAME,  NONEMPTY_OBJECT);	  replaceTop(NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
145	[BUG]  [BUGGY]  ReplaceNull(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ReplaceNull(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	ReplaceNull(JsonNull.valueOf(separator));	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
146	[BUG]  [BUGGY]  new  IllegalStateException( "Not  a  valid  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Not  a  valid  start  of  expression.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Not  a  valid  start  of  expression.   ");	  throw    new    IllegalStateException(   "Not    a    valid    start    of    expression.   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
147	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Not  a  valid  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Not  a  valid  start  of  expression.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Not  a  valid  start  of  expression.   ");	  throw    new    IllegalStateException(   "Not    a    valid    start    of    expression.   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
148	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Non  valid  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Non  valid  start  of  expression.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Non  valid  start  of  expression.   ");	  throw    new    IllegalStateException(   "Not    a    valid    start    of    expression.   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
149	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  replaceNext(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
150	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull(),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.createJsonNull(),  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull(),  beforeValue);	  replaceNext(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
151	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull(),  1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.createJsonNull(),  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull(),  1);	  replaceNext(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
152	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull(),  null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.createJsonNull(),  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull(),  null);	  replaceNext(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
153	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull(),  this);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.createJsonNull(),  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull(),  this);	  replaceNext(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
154	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  DANGLING_NAME);	  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
155	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  1);	  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
156	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  0);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  0);	  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
157	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
158	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  str);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT,  str);	  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
159	[BUG]  [BUGGY]  replaceTop(NON_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NON_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NON_OBJECT,  DANGLING_NAME);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
160	[BUG]  [BUGGY]  replaceStart(NON_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(NON_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(NON_OBJECT);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
161	[BUG]  [BUGGY]  replaceTop(NON_OBJECT,  1);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NON_OBJECT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NON_OBJECT,  1);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
162	[BUG]  [BUGGY]  replaceTop(NON_OBJECT  +  1);  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NON_OBJECT  +  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NON_OBJECT  +  1);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
163	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_ARRAY,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_ARRAY,  DANGLING_NAME);	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
164	[BUG]  [BUGGY]  removeValue(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  removeValue(NONEMPTY_ARRAY);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(NONEMPTY_ARRAY);	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
165	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ARRAY,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_ARRAY,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_ARRAY,  NONEMPTY_OBJECT);	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
166	[BUG]  [BUGGY]  replaceStart(NONEMPTY_ARRAY);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(NONEMPTY_ARRAY);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(NONEMPTY_ARRAY);	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
167	[BUG]  [BUGGY]  parent.replaceChild(out,  params[0],  params[1]);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  params[0],  params[1]);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  params[0],  params[1]);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
168	[BUG]  [BUGGY]  parent.replaceChild(out,  getValue(),  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  getValue(),  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  getValue(),  NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
169	[BUG]  [BUGGY]  parent.replaceChild(out,  getValue());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  getValue());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  getValue());	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
170	[BUG]  [BUGGY]  parent.replaceChild(out,  params[0],  params[1]));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  params[0],  params[1]));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  params[0],  params[1]));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
171	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  beforeValue);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  beforeValue);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
172	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  before);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  before);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  before);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
173	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  1);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
174	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  true);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  true);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
175	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  -1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  -1);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
176	[BUG]  [BUGGY]  RectangleEdge.this.afterValue  =  this.afterValue;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.afterValue  =  this.afterValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.afterValue  =  this.afterValue;	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
177	[BUG]  [BUGGY]  validateValue(this.afterValue);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  validateValue(this.afterValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(this.afterValue);	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
178	[BUG]  [BUGGY]  RectangleEdge.this.afterValue  =  beforeValue;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.afterValue  =  beforeValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.afterValue  =  beforeValue;	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
179	[BUG]  [BUGGY]  RectangleEdge.this.afterValue  =  nextValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.afterValue  =  nextValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.afterValue  =  nextValue();	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
180	[BUG]  [BUGGY]  RectangleEdge.this.afterValue  =  null;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.afterValue  =  null;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.afterValue  =  null;	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
181	[BUG]  [BUGGY]  RectangleEdge.this.afterValue  =  nextValue;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.afterValue  =  nextValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.afterValue  =  nextValue;	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
182	[BUG]  [BUGGY]  replaceEnd(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceEnd(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceEnd(JsonWriter.NONEMPTY_OBJECT);	  replaceStart(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
183	[BUG]  [BUGGY]  replaceStart(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceStart(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
184	[BUG]  [BUGGY]  replaceStart(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(JsonWriter.NONEMPTY_EXPR_RESULT);	  replaceStart(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
185	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
186	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
187	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
188	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  return;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
189	[BUG]  [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
190	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  break;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
191	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isVarArgsEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isVarArgsEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isVarArgsEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
192	[BUG]  [BUGGY]  Replacement.replaceChild(out,  replaceTop(NONEMPTY_OBJECT));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Replacement.replaceChild(out,  replaceTop(NONEMPTY_OBJECT));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Replacement.replaceChild(out,  replaceTop(NONEMPTY_OBJECT));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
193	[BUG]  [BUGGY]  Replacement.replaceChild(out,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Replacement.replaceChild(out,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Replacement.replaceChild(out,  NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
194	[BUG]  [BUGGY]  Core.report(JSError.make(JsonNull.class,  DANGLING_NAME));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Core.report(JSError.make(JsonNull.class,  DANGLING_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Core.report(JSError.make(JsonNull.class,  DANGLING_NAME));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
195	[BUG]  [BUGGY]  place(NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  place(NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	place(NONEMPTY_OBJECT,  out);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
196	[BUG]  [BUGGY]  Core.report(JSError.make(JsonNull.class,  NON_GLOBAL_NAME));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Core.report(JSError.make(JsonNull.class,  NON_GLOBAL_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Core.report(JSError.make(JsonNull.class,  NON_GLOBAL_NAME));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
197	[BUG]  [BUGGY]  place(NONEMPTY_OBJECT,  separator);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  place(NONEMPTY_OBJECT,  separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	place(NONEMPTY_OBJECT,  separator);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
198	[BUG]  [BUGGY]  Replacement.replaceChild(null,  out);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Replacement.replaceChild(null,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Replacement.replaceChild(null,  out);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
199	[BUG]  [BUGGY]  replaceLeft(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonNull.valueOf(separator));	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
200	[BUG]  [BUGGY]  replaceRaw(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceRaw(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceRaw(JsonNull.valueOf(separator));	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
201	[BUG]  [BUGGY]  replaceFieldName(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceFieldName(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFieldName(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
202	[BUG]  [BUGGY]  replaceFieldName(JsonNull.valueOf(separator),  JsonNull.DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceFieldName(JsonNull.valueOf(separator),  JsonNull.DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFieldName(JsonNull.valueOf(separator),  JsonNull.DEFAULT_NAME);	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
203	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  true);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  true);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
204	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  1);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
205	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_TYPE);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
206	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  null);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
207	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  false);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  false);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
208	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  NONEMPTY_OBJECT);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
209	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
210	[BUG]  [BUGGY]  NodeWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  NodeWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NodeWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
211	[BUG]  [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
212	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  out);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  out);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  out);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
213	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTION);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTION);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTION);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
214	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTOR);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTOR);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this,  SHORT_DESCRIPTOR);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
215	[BUG]  [BUGGY]  replaceLast(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceLast(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLast(JsonNull.valueOf(separator));	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
216	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(this.afterValue));	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
217	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(this.beforeValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(this.beforeValue));	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
218	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(separator)+  1);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(separator)+  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(separator)+  1);	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
219	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME);  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
220	[BUG]  [BUGGY]  null  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonNull.createJsonNull();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	null  =  JsonNull.createJsonNull();	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
221	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_OBJECT);  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  NONEMPTY_OBJECT);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
222	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
223	[BUG]  [BUGGY]  removeValue(NONEMPTY_OBJECT);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  removeValue(NONEMPTY_OBJECT);  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(NONEMPTY_OBJECT);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
224	[BUG]  [BUGGY]  null  =  JsonNull.createJsonNull();  break;  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  null  =  JsonNull.createJsonNull();  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	null  =  JsonNull.createJsonNull();  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
225	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  beforeValue);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
226	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  1);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
227	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.valueOf(0));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.valueOf(0));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.valueOf(0));	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
228	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT_VALUE);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT_VALUE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT_VALUE);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
229	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.MAX_VALUE);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.MAX_VALUE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.MAX_VALUE);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
230	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
231	[BUG]  [BUGGY]  removeValue(NONEMPTY_ARRAY);  break;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  removeValue(NONEMPTY_ARRAY);  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(NONEMPTY_ARRAY);  break;	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
232	[BUG]  [BUGGY]  replaceTop(NONEMPTY_ELEMENT);  break;  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_ELEMENT);  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_ELEMENT);  break;	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
233	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Nesting  problem.   ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Nesting  problem.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Nesting  problem.   ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
234	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.n ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  problem.n ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
235	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Nesting  problem. "));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw(new  IllegalStateException( "Nesting  problem. "));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw(new  IllegalStateException( "Nesting  problem. "));	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
236	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "null ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "null ");  }	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
237	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "none ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "none ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "none ");  }	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
238	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "n ");  }	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
239	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "native ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "native ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "native ");  }	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
240	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
241	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "no-expression ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "no-expression ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "no-expression ");  }	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
242	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "no  expression ");  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "no  expression ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  out.append( "no  expression ");  }	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
243	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
244	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
245	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  must  be  initialized. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Native  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
246	[BUG]  [BUGGY]  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	IllegalStateException( "Negative  start  of  expression  must  be  initialized. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
247	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
248	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
249	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
250	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  return;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
251	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
252	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isImmutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isImmutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isImmutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
253	[BUG]  [BUGGY]  recalculateSeparator();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  recalculateSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateSeparator();	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
254	[BUG]  [BUGGY]  recalculateStartSeparator();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  recalculateStartSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStartSeparator();	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
255	[BUG]  [BUGGY]  recalculateLocalSeparator(separator);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  recalculateLocalSeparator(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalSeparator(separator);	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
256	[BUG]  [BUGGY]  recalculateRawSeparator();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  recalculateRawSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateRawSeparator();	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
257	[BUG]  [BUGGY]  recalculateFunctionSeparator();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  recalculateFunctionSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateFunctionSeparator();	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
258	[BUG]  [BUGGY]  recalculateEndSeparator();  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  recalculateEndSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateEndSeparator();	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
259	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DANGELING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  DANGELING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DANGELING_NAME);	  replaceTop(DANGLING_NAME,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
260	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DANGLE_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  DANGLE_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DANGLE_NAME);	  replaceTop(DANGLING_NAME,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
261	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  1);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
262	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  true);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  true);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
263	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  -1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  -1);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
264	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  null);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
265	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  false);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  false);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
266	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  str);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  str);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
267	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out.append(separator);  replaceTop(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
268	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out.append(separator);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
269	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator)&&  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator)&&  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out.append(separator)&&  replaceTop(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
270	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator).append( "n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator).append( "n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out.append(separator).append( "n ");  replaceTop(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
271	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out.append( "n ");  replaceTop(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
272	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append( "n ").append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append( "n ").append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out.append( "n ").append(separator);  replaceTop(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
273	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator).append( "n ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out.append(separator).append( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out.append(separator).append( "n ");	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
274	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  0);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  0);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
275	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  1);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
276	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  -1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT,  -1);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
277	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
278	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
279	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_TYPE);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
280	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  1);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  1);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
281	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  JSONNull.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  JSONNull.DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  JSONNull.DEFAULT_TYPE);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
282	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  null);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  null);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
283	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  DEFAULT_TYPE);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
284	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  -1);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  -1);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
285	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehashCode();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehashCode();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  rehashCode();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
286	[BUG]  [BUGGY]  validateValue(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  validateValue(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(NONEMPTY_OBJECT);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
287	[BUG]  [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  rehashCode();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length  >  0)  {  rehashCode();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length  >  0)  {  rehashCode();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
288	[BUG]  [BUGGY]  while(value!=  null)  {  rehashCode();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null)  {  rehashCode();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null)  {  rehashCode();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
289	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  out.append(separator);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
290	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  value  =  getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
291	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
292	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DANGLING_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  DANGLING_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DANGLING_OBJECT);	  replaceTop(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
293	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  rehashCode();  }	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
294	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  rehashCode();  }	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
295	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  value  =  beforeValue.getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  K,  V>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
296	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  Node>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
297	[BUG]  [BUGGY]  while(value!=  null  &&  value.getClass().isArray())  {  rehashCode();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.getClass().isArray())  {  rehashCode();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.getClass().isArray())  {  rehashCode();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
298	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  msg.getMessage());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  msg.getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  msg.getMessage());	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
299	[BUG]  [BUGGY]  NeighborValue  <  K,  V>  out  =  getOutputFactory().createChildObjectValue( "start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  K,  V>  out  =  getOutputFactory().createChildObjectValue( "start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  K,  V>  out  =  getOutputFactory().createChildObjectValue( "start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
300	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "+getMessage());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "+getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.valid.start  of  expression: "+getMessage());	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
301	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  beforeValue);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.valid.start  of  expression: "  +  beforeValue);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
302	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(this.afterValue));	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
303	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(this.beforeValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(this.beforeValue));	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
304	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(separator)+  1);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(separator)+  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(separator)+  1);	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
305	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
306	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  out);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  out);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
307	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_NAME,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_NAME,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_NAME,  DANGLING_NAME);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
308	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  JsonWriter.NONEMPTY_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
309	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
310	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  0);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  0);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
311	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  name);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  name);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  name);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
312	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
313	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  beforeValue);	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
314	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  1);	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
315	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  null);	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
316	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  this);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  this);	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
317	[BUG]  [BUGGY]  RectangleEdge.this.replaceChild(null,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.replaceChild(null,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.replaceChild(null,  NONEMPTY_OBJECT);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
318	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  this.beforeValue;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  this.beforeValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  this.beforeValue;	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
319	[BUG]  [BUGGY]  RectangleEdge.this.beforeValue  =  null;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.beforeValue  =  null;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.beforeValue  =  null;	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
320	[BUG]  [BUGGY]  NeighborValue.this.beforeValue  =  this.afterValue;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.this.beforeValue  =  this.afterValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.this.beforeValue  =  this.afterValue;	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
321	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
322	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Native  start  of  expression  cannot  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Native  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
323	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
324	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
325	[BUG]  [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
326	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(null);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
327	[BUG]  [BUGGY]  replaceTop(JsonWriter.createJsonWriter(separator));  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.createJsonWriter(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.createJsonWriter(separator));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
328	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '/')  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '/')  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '/')  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
329	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '-')  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '-')  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '-')  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
330	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  'n')  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  'n')  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  'n')  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
331	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '-')  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '-')  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  '-')  {  rehash();  }	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
332	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(0)  ==  '-')  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(0)  ==  '-')  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(0)  ==  '-')  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
333	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  'n')  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  'n')  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value.charAt(value.length()  -  1)!=  'n')  {  rehash();  }	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
334	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  <  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  <  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  <  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
335	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  ==  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  ==  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  ==  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
336	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  >=  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  >=  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  >=  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  return;  }	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
337	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  <  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  <  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  <  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
338	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  ==  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  ==  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  ==  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
339	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  >=  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  >=  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(rehashCode()  >=  NONEMPTY_OBJECT)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
340	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this.afterValue));	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
341	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this.before));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this.before));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this.before));	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
342	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this.beforeValue),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this.beforeValue),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this.beforeValue),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
343	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this.beforeValue),  JsonNull.EMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this.beforeValue),  JsonNull.EMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this.beforeValue),  JsonNull.EMPTY_STRING);	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
344	[BUG]  [BUGGY]  read()  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  read()  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	read()  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
345	[BUG]  [BUGGY]  bucket(1)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  bucket(1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	bucket(1)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
346	[BUG]  [BUGGY]  While(this.start)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  While(this.start)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(this.start)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
347	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  NullPointerException.class)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
348	[BUG]  [BUGGY]  allowSeparator( " "))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  allowSeparator( " "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	allowSeparator( " "))  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
349	[BUG]  [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equals(separator));  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equals(separator));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	read()  {  throw  new  IllegalStateException( " ".equals(separator));  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
350	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  [Delete]  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	[Delete]	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
351	[BUG]  [BUGGY]  parent.replaceChild(DANGLING_NAME,  out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(DANGLING_NAME,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(DANGLING_NAME,  out);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
352	[BUG]  [BUGGY]  parent.replaceChild(out,  getValue(),  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  getValue(),  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  getValue(),  DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
353	[BUG]  [BUGGY]  parent.replaceChild(out,  new  JsonWriter(JsonWriter.NoneMPTY_OBJECT));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  new  JsonWriter(JsonWriter.NoneMPTY_OBJECT));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  new  JsonWriter(JsonWriter.NoneMPTY_OBJECT));	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
354	[BUG]  [BUGGY]  parent.replaceChild(null,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
355	[BUG]  [BUGGY]  parent.replaceChild(out,  new  JsonWriter(DANGLING_NAME));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  new  JsonWriter(DANGLING_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  new  JsonWriter(DANGLING_NAME));	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
356	[BUG]  [BUGGY]  parent.replaceChild(out,  new  JsonWriter(JsonWriter.EXPR_RESULT_NAME));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  new  JsonWriter(JsonWriter.EXPR_RESULT_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  new  JsonWriter(JsonWriter.EXPR_RESULT_NAME));	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
357	[BUG]  [BUGGY]  replaceNext(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_OBJECT);	  replaceNext(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
358	[BUG]  [BUGGY]  replaceBottom(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceBottom(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceBottom(DANGLING_NAME);	  replaceNext(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
359	[BUG]  [BUGGY]  replaceNext(NONMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONMPTY_OBJECT);	  replaceNext(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
360	[BUG]  [BUGGY]  while(this.beforeValue!=  null)  {  rehash();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null)  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null)  {  rehash();	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
361	[BUG]  [BUGGY]  replaceValue(NONEMPTY_EXPR_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(NONEMPTY_EXPR_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(NONEMPTY_EXPR_OBJECT);	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
362	[BUG]  [BUGGY]  replaceSeparator(NONEMPTY_EXPR_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceSeparator(NONEMPTY_EXPR_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceSeparator(NONEMPTY_EXPR_OBJECT);	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
363	[BUG]  [BUGGY]  replace(DANGLING_NAME,  NONEMPTY_EXPR_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME,  NONEMPTY_EXPR_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  NONEMPTY_EXPR_OBJECT);	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
364	[BUG]  [BUGGY]  replace(NONEMPTY_EXPR_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_EXPR_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_EXPR_OBJECT);	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
365	[BUG]  [BUGGY]  replaceNext(DANGLING_NAME,  NONEMPTY_EXPR_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(DANGLING_NAME,  NONEMPTY_EXPR_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(DANGLING_NAME,  NONEMPTY_EXPR_OBJECT);	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
366	[BUG]  [BUGGY]  replace(NONEMPTY_EXPR_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_EXPR_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_EXPR_OBJECT,  DANGLING_NAME);	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
367	[BUG]  [BUGGY]  NoneMPTY_OBJECT.append( "noneMPTY_OBJECT ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NoneMPTY_OBJECT.append( "noneMPTY_OBJECT ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NoneMPTY_OBJECT.append( "noneMPTY_OBJECT ");	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
368	[BUG]  [BUGGY]  safeMultiply(DANGLING_NAME,  out.toString());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(DANGLING_NAME,  out.toString());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(DANGLING_NAME,  out.toString());	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
369	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  true);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  true);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
370	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  1);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
371	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  beforeValue);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
372	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  str);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  str);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
373	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  before);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  before);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  before);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
374	[BUG]  [BUGGY]  replaceValue(NONEMPTY_LIST);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(NONEMPTY_LIST);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(NONEMPTY_LIST);	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
375	[BUG]  [BUGGY]  replace(DANGLING_NAME,  NONEMPTY_LIST);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME,  NONEMPTY_LIST);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  NONEMPTY_LIST);	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
376	[BUG]  [BUGGY]  replaceNext(NONEMPTY_LIST);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_LIST);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_LIST);	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
377	[BUG]  [BUGGY]  replace(NONEMPTY_LIST);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_LIST);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_LIST);	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
378	[BUG]  [BUGGY]  recalculateStandardMutator();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  recalculateStandardMutator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStandardMutator();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
379	[BUG]  [BUGGY]  recalculateMutator();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  recalculateMutator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateMutator();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
380	[BUG]  [BUGGY]  recalculateLocalMutator(null);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  recalculateLocalMutator(null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalMutator(null);	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
381	[BUG]  [BUGGY]  recalculateDelimiter();  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  recalculateDelimiter();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateDelimiter();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
382	[BUG]  [BUGGY]  recalculateNumberMutator();  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  recalculateNumberMutator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateNumberMutator();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
383	[BUG]  [BUGGY]  recalculateLocalMutator(this);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  recalculateLocalMutator(this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalMutator(this);	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
384	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
385	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_EXPR_RESULT);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
386	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_STRING);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
387	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
388	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  0);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT,  0);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
389	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  1);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT,  1);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
390	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAMES);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAMES);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
391	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAME);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
392	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAMES,  name);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAMES,  name);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "Missing  value: "  +  Feature.QUOTE_FIELD_NAMES,  name);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
393	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  false);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  out,  false);	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
394	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  str);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  out,  str);	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
395	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  this);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  out,  this);	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
396	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  column);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  column);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  out,  column);	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
397	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  null);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  out,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  out,  null);	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
398	[BUG]  [BUGGY]  replaceNull(JsonNull.createJsonNull(),  out);  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.createJsonNull(),  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.createJsonNull(),  out);	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
399	[BUG]  [BUGGY]  replaceNull(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
400	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
401	[BUG]  [BUGGY]  replaceTop(JsonNull.createJSNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJSNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJSNull(),  JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
402	[BUG]  [BUGGY]  initValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  initValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	initValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
403	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING,  DANGLING_NAME);	  replaceTop(JsonWriter.NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
404	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  str);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING,  str);	  replaceTop(JsonWriter.NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
405	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  out);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING,  out);	  replaceTop(JsonWriter.NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
406	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  0);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING,  0);	  replaceTop(JsonWriter.NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
407	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  1);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING,  1);	  replaceTop(JsonWriter.NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
408	[BUG]  [BUGGY]  replaceWithEmpty(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceWithEmpty(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithEmpty(JsonNull.createJsonNull());	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
409	[BUG]  [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
410	[BUG]  [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonNull.createJsonNull(),  beforeValue);	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
411	[BUG]  [BUGGY]  replaceWithNonNull(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNonNull(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNonNull(JsonNull.createJsonNull());	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
412	[BUG]  [BUGGY]  startValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonNull.createJsonNull());	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
413	[BUG]  [BUGGY]  endValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
414	[BUG]  [BUGGY]  EndValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  EndValue(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	EndValue(JsonNull.createJsonNull());	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
415	[BUG]  [BUGGY]  endValue(JsonNull.createJsonNull(),  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonNull.createJsonNull(),  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonNull.createJsonNull(),  1);	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
416	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  rehash();  }	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
417	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
418	[BUG]  [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value!=  null  &&  value.length()  >  0)  {  if(value  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
419	[BUG]  [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  rehash();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(value  ==  null  &&  value.length()  >  0)  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(value  ==  null  &&  value.length()  >  0)  {  rehash();	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
420	[BUG]  [BUGGY]  replace(NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_EXPR_RESULT);	  replaceTop(NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
421	[BUG]  [BUGGY]  replaceValue(NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(NONEMPTY_EXPR_RESULT);	  replaceTop(NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
422	[BUG]  [BUGGY]  replaceNext(NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_EXPR_RESULT);	  replaceTop(NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
423	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  NONEMPTY_EXPR_RESULT);	  replaceTop(NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
424	[BUG]  [BUGGY]  replaceTop(NONEMPTY_EXPR_RESULT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_EXPR_RESULT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_EXPR_RESULT,  DANGLING_NAME);	  replaceTop(NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
425	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_NAME>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_NAME>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_NAME>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
426	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
427	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
428	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT>)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT>)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT>)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
429	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_NAME>)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_NAME>)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_NAME>)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
430	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
431	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <?>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <?>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <?>)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
432	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  2);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  2);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  2);	  replaceTop(JsonNull.createJsonNull(),    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
433	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  3);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  3);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  3);	  replaceTop(JsonNull.createJsonNull(),    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
434	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  4);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  4);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  4);	  replaceTop(JsonNull.createJsonNull(),    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
435	[BUG]  [BUGGY]  replaceNull(JsonNull.createJsonNull(),  1);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.createJsonNull(),  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.createJsonNull(),  1);	  replaceTop(JsonNull.createJsonNull(),    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
436	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  2);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  2);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  2);	  replaceTop(JsonNull.createJsonNull(),    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
437	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(separator),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(separator),  JsonNull.NONE);	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
438	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE,  0);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.NONE,  0);	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
439	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.NONE);	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
440	[BUG]  [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(null),  JsonNull.NONE);	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
441	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(number),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(number),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(number),  JsonNull.NONE);	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
442	[BUG]  [BUGGY]  while(separator!=  null)  {  if(start)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(separator!=  null)  {  if(start)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(separator!=  null)  {  if(start)  {  rehash();  }	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
443	[BUG]  [BUGGY]  while(!start)  {  rehash();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(!start)  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(!start)  {  rehash();	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
444	[BUG]  [BUGGY]  RectangleEdge  <  K,  V>  end  =  new  RectangleEdge(separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge  <  K,  V>  end  =  new  RectangleEdge(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge  <  K,  V>  end  =  new  RectangleEdge(separator);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
445	[BUG]  [BUGGY]  while(!start)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(!start)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(!start)  {  rehash();  }	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
446	[BUG]  [BUGGY]  RectangleEdge  <  K,  V>  end  =  getEnd();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge  <  K,  V>  end  =  getEnd();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge  <  K,  V>  end  =  getEnd();	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
447	[BUG]  [BUGGY]  RectangleEdge.this.returnValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.returnValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.returnValue();	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
448	[BUG]  [BUGGY]  replace(JsonNull.valueOf(0));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(0));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(0));	  replace(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
449	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
450	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
451	[BUG]  [BUGGY]  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(!isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
452	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportUnsupportedOperation();	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
453	[BUG]  [BUGGY]  _reportError( "msg.bad.start  of  expression. ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "msg.bad.start  of  expression. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "msg.bad.start  of  expression. ");	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
454	[BUG]  [BUGGY]  validate();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  validate();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validate();	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
455	[BUG]  [BUGGY]  _reportError( "Nesting  problem. ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "Nesting  problem. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "Nesting  problem. ");	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
456	[BUG]  [BUGGY]  _reportError( "msg.undef.start  of  expression. ");  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "msg.undef.start  of  expression. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "msg.undef.start  of  expression. ");	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
457	[BUG]  [BUGGY]  _reportError( "msg.undef.start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "msg.undef.start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "msg.undef.start  of  expression ");	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
458	[BUG]  [BUGGY]  replaceJsonNull(JsonNull.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceJsonNull(JsonNull.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceJsonNull(JsonNull.valueOf(this.afterValue));	  replaceJsonNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
459	[BUG]  [BUGGY]  replaceJsonNull(JsonNull.valueOf(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceJsonNull(JsonNull.valueOf(this.beforeValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceJsonNull(JsonNull.valueOf(this.beforeValue));	  replaceJsonNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
460	[BUG]  [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.isEmpty())  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.isEmpty())  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null  &&  this.beforeValue.isEmpty())  {  rehash();  }	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
461	[BUG]  [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.size()  >  0)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.size()  >  0)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null  &&  this.beforeValue.size()  >  0)  {  rehash();  }	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
462	[BUG]  [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null  &&  this.beforeValue)  {  rehash();  }	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
463	[BUG]  [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.isEmpty())  {  rehash();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.isEmpty())  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null  &&  this.beforeValue.isEmpty())  {  rehash();	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
464	[BUG]  [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.length()  >  0)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null  &&  this.beforeValue.length()  >  0)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null  &&  this.beforeValue.length()  >  0)  {  rehash();  }	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
465	[BUG]  [BUGGY]  while(this.beforeValue!=  null)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null)  {  rehash();  }	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
466	[BUG]  [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
467	[BUG]  [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
468	[BUG]  [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
469	[BUG]  [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
470	[BUG]  [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  NullPointerException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  NullPointerException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
471	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_EXPR_RESULT);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
472	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
473	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_STRING);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
474	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_OBJECT,  out);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
475	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_OBJECT,  1);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
476	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
477	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(separator);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(separator);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
478	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
479	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NULL_VALUE);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NULL_VALUE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NULL_VALUE);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
480	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().getNativeObjectValue(NONEMPTY_OBJECT);  replaceTop(null);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
481	[BUG]  [BUGGY]  Core.report(JSError.make(NON_GLOBAL_VALUE,  DEFAULT_THRESHOLD));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Core.report(JSError.make(NON_GLOBAL_VALUE,  DEFAULT_THRESHOLD));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Core.report(JSError.make(NON_GLOBAL_VALUE,  DEFAULT_THRESHOLD));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
482	[BUG]  [BUGGY]  replace(JsonNull.valueOf(this));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(this));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(this));	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
483	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
484	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
485	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this)+  1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this)+  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this)+  1);	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
486	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(this));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(this));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(this));	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
487	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.EMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.EMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.EMPTY_STRING);	  replaceTop(JsonNull.valueOf(null),    null);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
488	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.ZERO);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.ZERO);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.ZERO);	  replaceTop(JsonNull.valueOf(null),    null);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
489	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(separator),  null);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(separator),  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(separator),  null);	  replaceTop(JsonNull.valueOf(null),    null);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
490	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_STRING);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_STRING);	  replaceTop(JsonNull.valueOf(null),    null);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
491	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  true);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  true);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
492	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  1);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  1);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
493	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  beforeValue);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
494	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  str);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  str);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
495	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  before);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  before);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  before);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
496	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NUMBER_INT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NUMBER_INT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NUMBER_INT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
497	[BUG]  [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
498	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FOR);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FOR);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FOR);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
499	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NUMBER_INT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NUMBER_INT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NUMBER_INT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
500	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  start  of  expression: ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Negative  start  of  expression: ");	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
501	[BUG]  [BUGGY]  new  IllegalStateException( "Negative  start  of  expression: ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Negative  start  of  expression: ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Negative  start  of  expression: ");	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
502	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  this);	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
503	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  name);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  name);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  name);	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
504	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getClass());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getClass());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getClass());	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
505	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getValue());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getValue());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getValue());	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
506	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
507	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isVarArgsEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isVarArgsEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isVarArgsEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
508	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
509	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue!=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
510	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  >=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  >=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  >=  null)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
511	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  replaceTop(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  replaceTop(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  <  NONEMPTY_OBJECT)  {  replaceTop(DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
512	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
513	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue!=  null)  {  replaceTop(DANGLING_NAME);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue!=  null)  {  replaceTop(DANGLING_NAME);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue!=  null)  {  replaceTop(DANGLING_NAME);  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
514	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  NeighborValue  ==  null)  {  replaceTop(DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
515	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
516	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  /identifier> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  /identifier> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  /identifier> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
517	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  {  identifier> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  {  identifier> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  {  identifier> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
518	[BUG]  [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter( "  <  /identifier> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter( "  <  /identifier> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	jsonWriter  =  JsonWriter.createJsonWriter( "  <  /identifier> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
519	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  unknown> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  unknown> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  unknown> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
520	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  expression> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  expression> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  expression> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
521	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_SYNTHETIC,  1);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
522	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_SYNTHETIC,  DANGLING_NAME);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
523	[BUG]  [BUGGY]  validate(JsonWriter.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  validate(JsonWriter.DEFAULT_SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validate(JsonWriter.DEFAULT_SYNTHETIC);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
524	[BUG]  [BUGGY]  startValue(JsonWriter.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonWriter.DEFAULT_SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonWriter.DEFAULT_SYNTHETIC);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
525	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  true);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_SYNTHETIC,  true);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
526	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  -1);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_SYNTHETIC,  -1);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
527	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
528	[BUG]  [BUGGY]  Annotation.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Annotation.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Annotation.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
529	[BUG]  [BUGGY]  NeighborJsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborJsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborJsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
530	[BUG]  [BUGGY]  NeighborJsonNull.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborJsonNull.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborJsonNull.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
531	[BUG]  [BUGGY]  replaceWithEmpty(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceWithEmpty(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithEmpty(JsonWriter.NONEMPTY_OBJECT);	  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
532	[BUG]  [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonWriter.NONEMPTY_NAME);	  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
533	[BUG]  [BUGGY]  replaceNull(JsonWriter.NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonWriter.NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonWriter.NONEMPTY_NAME);	  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
534	[BUG]  [BUGGY]  replaceNull(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonWriter.NONEMPTY_OBJECT);	  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
535	[BUG]  [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
536	[BUG]  [BUGGY]  this.afterValue  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonNull.createJsonNull();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonNull.createJsonNull();	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
537	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.parseJsonWriter(String.valueOf(this.afterValue));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.parseJsonWriter(String.valueOf(this.afterValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.parseJsonWriter(String.valueOf(this.afterValue));	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
538	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.parseJsonWriter(String.valueOf(this.beforeValue));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.parseJsonWriter(String.valueOf(this.beforeValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.parseJsonWriter(String.valueOf(this.beforeValue));	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
539	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.parseJsonWriter(this);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.parseJsonWriter(this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.parseJsonWriter(this);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
540	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.createJsonWriter(this);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.createJsonWriter(this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.createJsonWriter(this);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
541	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.createParser(this);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.createParser(this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.createParser(this);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
542	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  out);	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
543	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  name);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  name);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  name);	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
544	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  out.toString());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  out.toString());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  out.toString());	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
545	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  out.append(separator));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  out.append(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  out.append(separator));	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
546	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_FALSE);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_FALSE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_FALSE);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
547	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null)+  1,  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
548	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
549	[BUG]  [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	final  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
550	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator)+  1);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
551	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(desc));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
552	[BUG]  [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
553	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('_'));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('_'));  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('_'));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
554	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(0));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(0));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(0));	  replaceNext(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
555	[BUG]  [BUGGY]  replaceTop(NONEMPTY_STRING,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_STRING,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_STRING,  DANGLING_NAME);	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
556	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  NONEMPTY_STRING);	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
557	[BUG]  [BUGGY]  removeValue(NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  removeValue(NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(NONEMPTY_STRING);	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
558	[BUG]  [BUGGY]  replaceStart(NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(NONEMPTY_STRING);	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
559	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(Thread.currentThread());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(Thread.currentThread());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(Thread.currentThread());	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
560	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(separator);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(separator);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
561	[BUG]  [BUGGY]  JsonWriter.this.afterValue  =  new  JsonWriter();  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.afterValue  =  new  JsonWriter();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.afterValue  =  new  JsonWriter();	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
562	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(this);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(this);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
563	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.DEFAULT_TITLE_FONT);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
564	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.EXPR_RESULT);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
565	[BUG]  [BUGGY]  replace(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_OBJECT);	  replace(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
566	[BUG]  [BUGGY]  replace(DANGLING_NAME,  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME,  out);	  replace(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
567	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
568	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
569	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
570	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
571	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  false))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
572	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
573	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
574	[BUG]  [BUGGY]  recalculateNames();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  recalculateNames();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateNames();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
575	[BUG]  [BUGGY]  recalculateStartObject();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  recalculateStartObject();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStartObject();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
576	[BUG]  [BUGGY]  recalculateName();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  recalculateName();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateName();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
577	[BUG]  [BUGGY]  recalculateLocalNames();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  recalculateLocalNames();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalNames();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
578	[BUG]  [BUGGY]  recalculate();  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  recalculate();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculate();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
579	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
580	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(JsonNull.createJsonNull()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
581	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(getMessage()));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(getMessage()));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(getMessage()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
582	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( ", ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
583	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(JsonWriter.TYPE_OBJECT));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(JsonWriter.TYPE_OBJECT));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(JsonWriter.TYPE_OBJECT));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
584	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( " ")	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
585	[BUG]  [BUGGY]  replaceValue(JsonNull.valueOf(this.after));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonNull.valueOf(this.after));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonNull.valueOf(this.after));	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
586	[BUG]  [BUGGY]  validate(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  validate(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validate(JsonNull.valueOf(separator));	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
587	[BUG]  [BUGGY]  replaceValue(JsonNull.valueOf(separator)+  1);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonNull.valueOf(separator)+  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonNull.valueOf(separator)+  1);	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
588	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.n ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  value.n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.n ");	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
589	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.   "  +  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  value.   "  +  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.   "  +  DANGLING_NAME);	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
590	[BUG]  [BUGGY]  new  IllegalStateException( "Nesting  value.   ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Nesting  value.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Nesting  value.   ");	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
591	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.   "  +  name);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  value.   "  +  name);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.   "  +  name);	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
592	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Example: ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Example: ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.  Example: ");	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
593	[BUG]  [BUGGY]  removeChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
594	[BUG]  [BUGGY]  super.removeChild(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  super.removeChild(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	super.removeChild(JsonNull.createJsonNull());	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
595	[BUG]  [BUGGY]  removeChild(JsonNull.createJsonNull(),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonNull.createJsonNull(),  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonNull.createJsonNull(),  beforeValue);	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
596	[BUG]  [BUGGY]  removeChild(JsonNull.createJSNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonNull.createJSNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonNull.createJSNull());	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
597	[BUG]  [BUGGY]  replaceChild(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceChild(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceChild(JsonNull.createJsonNull());	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
598	[BUG]  [BUGGY]  removeChild(JsonNull.createJsonNull(),  this);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonNull.createJsonNull(),  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonNull.createJsonNull(),  this);	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
599	[BUG]  [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safely(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
600	[BUG]  [BUGGY]  While(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  While(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
601	[BUG]  [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
602	[BUG]  [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
603	[BUG]  [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
604	[BUG]  [BUGGY]  While(this.beforeValue)  {  replaceTop(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  While(this.beforeValue)  {  replaceTop(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(this.beforeValue)  {  replaceTop(JsonWriter.NONEMPTY_OBJECT);	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
605	[BUG]  [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT,  beforeValue);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT,  beforeValue);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(this.beforeValue)  {  replaceTop(NONEMPTY_OBJECT,  beforeValue);  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
606	[BUG]  [BUGGY]  while(this.beforeValue)  {  rehashCode();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue)  {  rehashCode();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue)  {  rehashCode();	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
607	[BUG]  [BUGGY]  while(this.beforeValue)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
608	[BUG]  [BUGGY]  while(this.beforeValue!=  null)  {  rehashCode();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null)  {  rehashCode();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null)  {  rehashCode();	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
609	[BUG]  [BUGGY]  while(this.beforeValue!=  null)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(this.beforeValue!=  null)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	while(this.beforeValue!=  null)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
610	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  before);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  before);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  before);	  replaceTop(JsonNull.createJsonNull(),    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
611	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull(),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull(),  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull(),  beforeValue);	  replaceTop(JsonNull.createJsonNull(),    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
612	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  beforeValue,  out);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  beforeValue,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  beforeValue,  out);	  replaceTop(JsonNull.createJsonNull(),    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
613	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  next);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  next);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  next);	  replaceTop(JsonNull.createJsonNull(),    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
614	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  beforeValue,  this);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  beforeValue,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  beforeValue,  this);	  replaceTop(JsonNull.createJsonNull(),    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
615	[BUG]  [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  1);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.EXPR_RESULT,  1);	  endValue(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
616	[BUG]  [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  -1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.EXPR_RESULT,  -1);	  endValue(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
617	[BUG]  [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  true);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.EXPR_RESULT,  true);	  endValue(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
618	[BUG]  [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  false);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.EXPR_RESULT,  false);	  endValue(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
619	[BUG]  [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  str);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.EXPR_RESULT,  str);	  endValue(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
620	[BUG]  [BUGGY]  replaceNull(JsonNull.createJsonNull(),  beforeValue);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.createJsonNull(),  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.createJsonNull(),  beforeValue);	  replaceNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
621	[BUG]  [BUGGY]  ReplaceNull(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ReplaceNull(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	ReplaceNull(JsonNull.createJsonNull());	  replaceNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
622	[BUG]  [BUGGY]  replaceNull(JsonNull.createJsonNull(),  null);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.createJsonNull(),  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.createJsonNull(),  null);	  replaceNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
623	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
624	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  beforeValue);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  beforeValue);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
625	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  null);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  null);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
626	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
627	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  first);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  first);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAMES,  first);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
628	[BUG]  [BUGGY]  Replacement.replaceChild(out,  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Replacement.replaceChild(out,  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Replacement.replaceChild(out,  replaceTop(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
629	[BUG]  [BUGGY]  Replacement.replaceChild(null,  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Replacement.replaceChild(null,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Replacement.replaceChild(null,  null);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
630	[BUG]  [BUGGY]  replaceEnd(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceEnd(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceEnd(NONEMPTY_OBJECT);	  replaceStart(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
631	[BUG]  [BUGGY]  replaceLeft(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(NONEMPTY_OBJECT);	  replaceStart(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
632	[BUG]  [BUGGY]  replaceStart(NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceStart(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
633	[BUG]  [BUGGY]  replaceStart(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(JsonNull.createJsonNull());	  replaceStart(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
634	[BUG]  [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(value!=  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
635	[BUG]  [BUGGY]  While(value  ==  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  While(value  ==  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(value  ==  null  &&  value.length()  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
636	[BUG]  [BUGGY]  While(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(value!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
637	[BUG]  [BUGGY]  While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
638	[BUG]  [BUGGY]  While(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  While(value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
639	[BUG]  [BUGGY]  While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	While(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
640	[BUG]  [BUGGY]  NullPointerException.beforeValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.beforeValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.beforeValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
641	[BUG]  [BUGGY]  NullPointerException.beforeValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.beforeValue(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.beforeValue(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
642	[BUG]  [BUGGY]  NullPointerException.beforeValue(JsonNull.createJsonNull(),  JSONNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.beforeValue(JsonNull.createJsonNull(),  JSONNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.beforeValue(JsonNull.createJsonNull(),  JSONNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
643	[BUG]  [BUGGY]  NullPointerException.start(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.start(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.start(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
644	[BUG]  [BUGGY]  safeMultiply(JsonNull.getInstance())  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(JsonNull.getInstance())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(JsonNull.getInstance())  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
645	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
646	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  new  NeighborWriter();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  new  NeighborWriter();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  new  NeighborWriter();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
647	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  new  NeighborWriter(String.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  new  NeighborWriter(String.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  new  NeighborWriter(String.valueOf(separator));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
648	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME,  true);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
649	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue;  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  beforeValue;	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
650	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME,  false);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  beforeValue(Feature.QUOTE_FIELD_NAME,  false);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
651	[BUG]  [BUGGY]  new  IllegalStateException( "Nesting  problem.   ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  new  IllegalStateException( "Nesting  problem.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  IllegalStateException( "Nesting  problem.   ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
652	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   "  +  this);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.   "  +  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  problem.   "  +  this);	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
653	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_ERROR);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_ERROR);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_ERROR);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
654	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
655	[BUG]  [BUGGY]  NeighborWriter.this.afterValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValue)  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
656	[BUG]  [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " "));  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " "));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safely(this.beforeValue)  {  throw  new  IllegalStateException( " "));  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
657	[BUG]  [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " ",  this.afterValue);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " ",  this.afterValue);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safely(this.beforeValue)  {  throw  new  IllegalStateException( " ",  this.afterValue);  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
658	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  null;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  null;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  null;	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
659	[BUG]  [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " ",  this.beforeValue);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safely(this.beforeValue)  {  throw  new  IllegalStateException( " ",  this.beforeValue);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safely(this.beforeValue)  {  throw  new  IllegalStateException( " ",  this.beforeValue);  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
660	[BUG]  [BUGGY]  wrongfulJsonWriter(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  wrongfulJsonWriter(this.beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	wrongfulJsonWriter(this.beforeValue);	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
661	[BUG]  [BUGGY]  nisip  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonNull.createJsonNull();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonNull.createJsonNull();	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
662	[BUG]  [BUGGY]  nisip  =  JsonScanner.getInstance();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScanner.getInstance();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScanner.getInstance();	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
663	[BUG]  [BUGGY]  NoneMPTY_OBJECT.append( "n ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NoneMPTY_OBJECT.append( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NoneMPTY_OBJECT.append( "n ");	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
664	[BUG]  [BUGGY]  nisip  =  JsonScanner.getInstance(JsonScanner.class);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScanner.getInstance(JsonScanner.class);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScanner.getInstance(JsonScanner.class);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
665	[BUG]  [BUGGY]  NoneMPTY_OBJECT  =  false;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NoneMPTY_OBJECT  =  false;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NoneMPTY_OBJECT  =  false;	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
666	[BUG]  [BUGGY]  parent.replaceChild(out,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
667	[BUG]  [BUGGY]  parent.replaceChild(null,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  out);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
668	[BUG]  [BUGGY]  parent.replaceChild(out,  SHORT_DESCRIPTION);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  SHORT_DESCRIPTION);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  SHORT_DESCRIPTION);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
669	[BUG]  [BUGGY]  parent.replaceChild(out,  SHORT_DESCENDING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  SHORT_DESCENDING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  SHORT_DESCENDING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
670	[BUG]  [BUGGY]  cope.validate(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  cope.validate(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	cope.validate(DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
671	[BUG]  [BUGGY]  parent.replaceChild(out,  SHORT_TITLE);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  SHORT_TITLE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  SHORT_TITLE);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
672	[BUG]  [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
673	[BUG]  [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
674	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(this.value));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(this.value));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(this.value));	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
675	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(start));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(start));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(start));	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
676	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(last));  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(last));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(last));	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
677	[BUG]  [BUGGY]  replaceNext(NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_STRING);	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
678	[BUG]  [BUGGY]  replace(NONEMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_STRING);	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
679	[BUG]  [BUGGY]  replaceTop(DANGLING);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING);	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
680	[BUG]  [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
681	[BUG]  [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
682	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
683	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
684	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(Long.valueOf(separator));	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
685	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
686	[BUG]  [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
687	[BUG]  [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
688	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  [CE]  illegal  start  of  expression  [FE]                                          NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
689	[BUG]  [BUGGY]  initValue(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  initValue(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	initValue(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
690	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NUMBER_INT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NUMBER_INT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NUMBER_INT);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
691	[BUG]  [BUGGY]  super.beforeValue();  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  super.beforeValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	super.beforeValue();	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
692	[BUG]  [BUGGY]  rehashValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  rehashValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashValue();	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
693	[BUG]  [BUGGY]  parseValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parseValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseValue();	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
694	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(name));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
695	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf('n'));  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
696	[BUG]  [BUGGY]  NeighborReader.this.reportError( " ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborReader.this.reportError( " ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborReader.this.reportError( " ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
697	[BUG]  [BUGGY]  NeighborReader.this.reportError( "msg.undef.start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborReader.this.reportError( "msg.undef.start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborReader.this.reportError( "msg.undef.start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
698	[BUG]  [BUGGY]  NeighborReader.this.reportError( "msg.no.start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborReader.this.reportError( "msg.no.start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborReader.this.reportError( "msg.no.start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
699	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this.firstValue));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this.firstValue));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this.firstValue));	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
700	[BUG]  [BUGGY]  replaceNext(NONEMPTY_EXPR_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_EXPR_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_EXPR_OBJECT);	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
701	[BUG]  [BUGGY]  replaceNext(NONEMPTY_OBJECT,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_OBJECT,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_OBJECT,  DANGLING_NAME);	  replaceNext(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
702	[BUG]  [BUGGY]  replaceNext(DANGLING_NAME,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(DANGLING_NAME,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(DANGLING_NAME,  NONEMPTY_OBJECT);	  replaceNext(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
703	[BUG]  [BUGGY]  replaceFirst(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(NONEMPTY_OBJECT);	  replaceNext(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
704	[BUG]  [BUGGY]  replaceNext(NONEMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NONEMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NONEMPTY_OBJECT,  NONEMPTY_NAME);	  replaceNext(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
705	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES+ ") ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES+ ") ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES+ ") ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
706	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+getClass().getName()  + ") ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+getClass().getName()  + ") ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.println( "JsonWriter.notEnabled( "+getClass().getName()  + ") ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
707	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAME+ ") ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAME+ ") ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAME+ ") ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
708	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES "));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES "));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.println( "JsonWriter.notEnabled( "+Feature.QUOTE_FIELD_NAMES "));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
709	[BUG]  [BUGGY]  NullPointerException.printStackTrace();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.printStackTrace();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.printStackTrace();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
710	[BUG]  [BUGGY]  replaceLeft(NONEMPTY_LIST);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(NONEMPTY_LIST);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(NONEMPTY_LIST);	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
711	[BUG]  [BUGGY]  startValue(JsonWriter.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonWriter.EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonWriter.EXPR_RESULT);	  endValue(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
712	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
713	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
714	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
715	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
716	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
717	[BUG]  [BUGGY]  RectangleEdge.this.returnNull();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.returnNull();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.returnNull();	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
718	[BUG]  [BUGGY]  RectangleEdge.this.rehash();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.rehash();	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
719	[BUG]  [BUGGY]  RectangleEdge.this.afterValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.afterValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.afterValue();	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
720	[BUG]  [BUGGY]  RectangleEdge.this.returnValue;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.returnValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.returnValue;	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
721	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
722	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(this.value));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(this.value));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(this.value));	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
723	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_STRING);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_STRING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_STRING);	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
724	[BUG]  [BUGGY]  safeReplacement(out,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(out,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReplacement(out,  DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
725	[BUG]  [BUGGY]  nisipToJsonString(out,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nisipToJsonString(out,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisipToJsonString(out,  NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
726	[BUG]  [BUGGY]  safeReplacement(out,  DANGLING_NAME).replace( "n ", "n ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(out,  DANGLING_NAME).replace( "n ", "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReplacement(out,  DANGLING_NAME).replace( "n ", "n ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
727	[BUG]  [BUGGY]  safeReplacement(out,  DANGLING_NAME).append( "n ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(out,  DANGLING_NAME).append( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReplacement(out,  DANGLING_NAME).append( "n ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
728	[BUG]  [BUGGY]  sortir(NoneMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  sortir(NoneMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	sortir(NoneMPTY_OBJECT,  NONEMPTY_NAME);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
729	[BUG]  [BUGGY]  safeReplacement(out,  DANGLING_NAME));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  safeReplacement(out,  DANGLING_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReplacement(out,  DANGLING_NAME));	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
730	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_ELEMENT);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
731	[BUG]  [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(JsonWriter.NONEMPTY_OBJECT,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(JsonWriter.NONEMPTY_OBJECT,  str);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
732	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }	  replaceTop(JsonNull.valueOf(null),    null);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
733	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNeighborValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNeighborValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().getNeighborValue();	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
734	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNeighborValue( "DANGLING_NAME ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().getNeighborValue( "DANGLING_NAME ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().getNeighborValue( "DANGLING_NAME ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
735	[BUG]  [BUGGY]  append(JsonNull.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  append(JsonNull.DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	append(JsonNull.DEFAULT_TYPE);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
736	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  this);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  this);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
737	[BUG]  [BUGGY]  rehashTable(true);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  rehashTable(true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable(true);	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
738	[BUG]  [BUGGY]  reset();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  reset();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	reset();	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
739	[BUG]  [BUGGY]  rehashTable(this);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  rehashTable(this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable(this);	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
740	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
741	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  return;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
742	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  JsonNull.createJsonNull());	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
743	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_NAME);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
744	[BUG]  [BUGGY]  MutableToJsonDecimal.declare( "start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableToJsonDecimal.declare( "start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJsonDecimal.declare( "start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
745	[BUG]  [BUGGY]  RectangleEdge.this.replaceChild(null,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.replaceChild(null,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.replaceChild(null,  out);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
746	[BUG]  [BUGGY]  RectangleEdge.this.replaceChild(out,  nextValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.replaceChild(out,  nextValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.replaceChild(out,  nextValue);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
747	[BUG]  [BUGGY]  RectangleEdge.this.replaceChild(out,  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.replaceChild(out,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.replaceChild(out,  out);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
748	[BUG]  [BUGGY]  RectangleEdge.this.beforeValue();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.beforeValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.beforeValue();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
749	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   "  +  this);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   "  +  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.   "  +  this);	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
750	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  not  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
751	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   "  +  name);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.   "  +  name);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.   "  +  name);	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
752	[BUG]  [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  out);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
753	[BUG]  [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
754	[BUG]  [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  DEFAULT_TITLE_NAME);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  DEFAULT_TITLE_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  DEFAULT_TITLE_NAME);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
755	[BUG]  [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
756	[BUG]  [BUGGY]  nisip  =  JsonScope.getVarDescriptor(JsonScope.NAME_SCOPE);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.getVarDescriptor(JsonScope.NAME_SCOPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.getVarDescriptor(JsonScope.NAME_SCOPE);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
757	[BUG]  [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  DEFAULT_PLAIN_NAME);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  DEFAULT_PLAIN_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createJsonScope(NONEMPTY_OBJECT,  DEFAULT_PLAIN_NAME);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
758	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
759	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
760	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
761	[BUG]  [BUGGY]  replaceNext(NON_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(NON_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(NON_OBJECT);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
762	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  NON_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  NON_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  NON_OBJECT);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
763	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
764	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_ELEMENT);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
765	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT)+  1;  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT)+  1;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT)+  1;	  replaceTop(JsonWriter.NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
766	[BUG]  [BUGGY]  MutableToJsonWriter.this.reportError( "msg.no.start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableToJsonWriter.this.reportError( "msg.no.start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJsonWriter.this.reportError( "msg.no.start  of  expression ");	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
767	[BUG]  [BUGGY]  NullPointerException.println( "JsonWriter.invalid  start  of  expression: "  +  this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.println( "JsonWriter.invalid  start  of  expression: "  +  this.beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.println( "JsonWriter.invalid  start  of  expression: "  +  this.beforeValue);	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
768	[BUG]  [BUGGY]  NeighborUtil.throwAsIOException( " ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborUtil.throwAsIOException( " ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborUtil.throwAsIOException( " ");	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
769	[BUG]  [BUGGY]  NeighborReader.this.beforeValue  =  new  NeighborReader(separator);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborReader.this.beforeValue  =  new  NeighborReader(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborReader.this.beforeValue  =  new  NeighborReader(separator);	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
770	[BUG]  [BUGGY]  MutableToJsonWriter.this.reportError( "msg.no.start-expression ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableToJsonWriter.this.reportError( "msg.no.start-expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJsonWriter.this.reportError( "msg.no.start-expression ");	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
771	[BUG]  [BUGGY]  NeighborReader.this.beforeValue  =  new  NeighborReader();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborReader.this.beforeValue  =  new  NeighborReader();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborReader.this.beforeValue  =  new  NeighborReader();	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
772	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.DEFAULT_STATEMENT;  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.DEFAULT_STATEMENT;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.DEFAULT_STATEMENT;	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
773	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.DEFAULT_SOURCE;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.DEFAULT_SOURCE;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.DEFAULT_SOURCE;	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
774	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.DEFAULT_SEARCH;  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.DEFAULT_SEARCH;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.DEFAULT_SEARCH;	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
775	[BUG]  [BUGGY]  this.afterValue  =  JsonWriter.createJsonWriter(this,  out);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  this.afterValue  =  JsonWriter.createJsonWriter(this,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.afterValue  =  JsonWriter.createJsonWriter(this,  out);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
776	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
777	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC  +  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_SYNTHETIC  +  1);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
778	[BUG]  [BUGGY]  recalculateStartElement();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  recalculateStartElement();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStartElement();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
779	[BUG]  [BUGGY]  recalculateStartOfSeparator();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  recalculateStartOfSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStartOfSeparator();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
780	[BUG]  [BUGGY]  recalculateStart();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  recalculateStart();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStart();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
781	[BUG]  [BUGGY]  recalculateStartOfResult();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  recalculateStartOfResult();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStartOfResult();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
782	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
783	[BUG]  [BUGGY]  initValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  initValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	initValue(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
784	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
785	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(out);  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
786	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  out);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  out);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
787	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  false);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  false);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
788	[BUG]  [BUGGY]  endValue(JsonNull.createJsonNull(),  out);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonNull.createJsonNull(),  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonNull.createJsonNull(),  out);	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
789	[BUG]  [BUGGY]  validate(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  validate(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validate(JsonNull.createJsonNull());	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
790	[BUG]  [BUGGY]  endValue(JsonNull.createJsonNull()  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonNull.createJsonNull()  +  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonNull.createJsonNull()  +  1);	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
791	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
792	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_EXPR_RESULT))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_EXPR_RESULT))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_EXPR_RESULT))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
793	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  return;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
794	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isValuePathEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
795	[BUG]  [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
796	[BUG]  [BUGGY]  safeReturn(this.beforeValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(this.beforeValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReturn(this.beforeValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
797	[BUG]  [BUGGY]  Corrections.checkState(this.afterValue  ==  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Corrections.checkState(this.afterValue  ==  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Corrections.checkState(this.afterValue  ==  null);	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
798	[BUG]  [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReturn(this.afterValue)  {  rehashCode();  }	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
799	[BUG]  [BUGGY]  Corrections.checkState(this.afterValue!=  null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Corrections.checkState(this.afterValue!=  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Corrections.checkState(this.afterValue!=  null);	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
800	[BUG]  [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
801	[BUG]  [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReturn(this.afterValue)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ".);  }	  if(this.afterValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
802	[BUG]  [BUGGY]  replaceIfNull(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceIfNull(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceIfNull(JsonWriter.NONEMPTY_OBJECT);	  replaceWithNull(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
803	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  out);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
804	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  false);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  false);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
805	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  this);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  this);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
806	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
807	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  End>  value  =  getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
808	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  End>  value  =  getValue(NONEMPTY_OBJECT);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
809	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
810	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getOutputValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getOutputValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  E>  out  =  getOutputValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
811	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  out  =  getOutputValue(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  out  =  getOutputValue(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  E>  out  =  getOutputValue(NONEMPTY_OBJECT);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
812	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.beforeValue();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  beforeValue.beforeValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  End>  value  =  beforeValue.beforeValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
813	[BUG]  [BUGGY]  RectangleEdge  endpoint  =  getEndpoint();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge  endpoint  =  getEndpoint();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge  endpoint  =  getEndpoint();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
814	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue  ==  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue  ==  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(this.beforeValue  ==  NONEMPTY_OBJECT);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
815	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue  ==  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue  ==  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(this.beforeValue  ==  DANGLING_NAME);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
816	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue  ==  null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue  ==  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(this.beforeValue  ==  null);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
817	[BUG]  [BUGGY]  NeighborUtilities.checkState(this.beforeValue  ==  null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborUtilities.checkState(this.beforeValue  ==  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborUtilities.checkState(this.beforeValue  ==  null);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
818	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue!=  null);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue!=  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(this.beforeValue!=  null);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
819	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkState(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifier.checkState(this.beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifier.checkState(this.beforeValue);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
820	[BUG]  [BUGGY]  NeighborUtilities.checkState(this.beforeValue!=  null);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborUtilities.checkState(this.beforeValue!=  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborUtilities.checkState(this.beforeValue!=  null);	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
821	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_PLUS_SOURCE);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_PLUS_SOURCE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_PLUS_SOURCE);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
822	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  out);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
823	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
824	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
825	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  else  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
826	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(DANGLING_NAME);  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
827	[BUG]  [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(separator)  {  replaceTop(NONEMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
828	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
829	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
830	[BUG]  [BUGGY]  replace(DANGLING_NAME);  break;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replace(DANGLING_NAME);  break;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(DANGLING_NAME);  break;	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
831	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
832	[BUG]  [BUGGY]  replace(NONEMPTY_EXPECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(NONEMPTY_EXPECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(NONEMPTY_EXPECT);	  replace(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
833	[BUG]  [BUGGY]  safeMultiply(start)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(start)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(start)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
834	[BUG]  [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  =  false)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  =  false)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
835	[BUG]  [BUGGY]  safeThan  <  NullPointerException.JSON_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.JSON_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  NullPointerException.JSON_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
836	[BUG]  [BUGGY]  safeGet()  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeGet()  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeGet()  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
837	[BUG]  [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
838	[BUG]  [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
839	[BUG]  [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
840	[BUG]  [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
841	[BUG]  [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborMap.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
842	[BUG]  [BUGGY]  replaceJsonNull(JsonNull.valueOf(this.value));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceJsonNull(JsonNull.valueOf(this.value));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceJsonNull(JsonNull.valueOf(this.value));	  replaceJsonNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
843	[BUG]  [BUGGY]  parseJsonNull(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parseJsonNull(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseJsonNull(JsonNull.valueOf(separator));	  replaceJsonNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
844	[BUG]  [BUGGY]  replaceRight(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceRight(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceRight(JsonNull.valueOf(separator));	  replaceJsonNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
845	[BUG]  [BUGGY]  replaceJsonNull(JsonNull.valueOf(start));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceJsonNull(JsonNull.valueOf(start));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceJsonNull(JsonNull.valueOf(start));	  replaceJsonNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
846	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_DANGLING_NAME);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
847	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_OBJECT,  NONEMPTY_NAME);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
848	[BUG]  [BUGGY]  NeighborReader.this.beforeValue  =  null;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborReader.this.beforeValue  =  null;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborReader.this.beforeValue  =  null;	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
849	[BUG]  [BUGGY]  NeighborWriter.this.afterValue  =  null;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValue  =  null;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValue  =  null;	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
850	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  this;  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  this;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  this;	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
851	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull(),  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.createJsonNull(),  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull(),  out);	  replaceNext(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
852	[BUG]  [BUGGY]  replaceNext(JsonNull.createJsonNull(),  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.createJsonNull(),  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.createJsonNull(),  DANGLING_NAME);	  replaceNext(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
853	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_ELEMENT);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
854	[BUG]  [BUGGY]  startValue(JsonWriter.DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonWriter.DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonWriter.DEFAULT_NAME);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
855	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_NAME,  true);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_NAME,  true);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_NAME,  true);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
856	[BUG]  [BUGGY]  new  JsonWriter(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  new  JsonWriter(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	new  JsonWriter(JsonNull.createJsonNull());	  replaceNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
857	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this),  JsonNull.NONE);	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
858	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(this.beforeValue);	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
859	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkNotNull(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkNotNull(this.beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkNotNull(this.beforeValue);	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
860	[BUG]  [BUGGY]  validateValue(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  validateValue(this.beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(this.beforeValue);	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
861	[BUG]  [BUGGY]  this.beforeValue  =  null;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  this.beforeValue  =  null;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	this.beforeValue  =  null;	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
862	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DANGLE_OBJECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  DANGLE_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DANGLE_OBJECT);	  replaceTop(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
863	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  0);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  0);	  replaceTop(JsonNull.createJsonNull(),    1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
864	[BUG]  [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonNull.createJsonNull(),  DANGLING_NAME);	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
865	[BUG]  [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonNull.createJsonNull(),  out);	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
866	[BUG]  [BUGGY]  endValue(JsonWriter.START_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_ELEMENT);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
867	[BUG]  [BUGGY]  endValue(JsonWriter.START_OBJECT,  STRING_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_OBJECT,  STRING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_OBJECT,  STRING_NAME);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
868	[BUG]  [BUGGY]  endValue(JsonWriter.START_OBJECT,  start);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_OBJECT,  start);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_OBJECT,  start);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
869	[BUG]  [BUGGY]  replaceNullPointer(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceNullPointer(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNullPointer(JsonNull.valueOf(separator));	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
870	[BUG]  [BUGGY]  replaceNull();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNull();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull();	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
871	[BUG]  [BUGGY]  replaceFieldName(JsonNull.valueOf(separator)+  1);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceFieldName(JsonNull.valueOf(separator)+  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFieldName(JsonNull.valueOf(separator)+  1);	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
872	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  out);	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
873	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  JsonToken.END_ARRAY);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  JsonToken.END_ARRAY);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  JsonToken.END_ARRAY);	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
874	[BUG]  [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( "Nesting  value.   ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  throw  new  IllegalStateException( "Nesting  value.   ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  throw  new  IllegalStateException( "Nesting  value.   ");  }	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
875	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue  =  this.afterValue;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue  =  this.afterValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue  =  this.afterValue;	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
876	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().createChildObjectValue(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().createChildObjectValue(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().createChildObjectValue(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
877	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().createChildObjectValue(NONEMPTY_OBJECT);  replaceTop(separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  out  =  getOutputFactory().createChildObjectValue(NONEMPTY_OBJECT);  replaceTop(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  out  =  getOutputFactory().createChildObjectValue(NONEMPTY_OBJECT);  replaceTop(separator);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
878	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(name));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(name));	  replaceTop(JsonNull.valueOf(name));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
879	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME  +  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME  +  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  DANGLING_NAME  +  1);	  replaceTop(NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
880	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(1));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(1));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(1));	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
881	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT_TEST);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT_TEST);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.DEFAULT_TEST);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
882	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  out);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
883	[BUG]  [BUGGY]  replaceValue(JsonNull.valueOf(this.value));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonNull.valueOf(this.value));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonNull.valueOf(this.value));	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
884	[BUG]  [BUGGY]  replaceTo(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceTo(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTo(JsonNull.valueOf(separator));	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
885	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
886	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  else  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(this));  }  else  {  return;  }	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
887	[BUG]  [BUGGY]  if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
888	[BUG]  [BUGGY]  if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
889	[BUG]  [BUGGY]  if(out!=  null)  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  null)  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  null)  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
890	[BUG]  [BUGGY]  safeMultiply(value)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(value)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(value)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
891	[BUG]  [BUGGY]  safeThan  <  NullPointerException.class)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.class)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  NullPointerException.class)  {  rehashCode();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
892	[BUG]  [BUGGY]  safeMultiply(value)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(value)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(value)  {  rehashCode();  }	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
893	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  Node>  value  =  beforeValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
894	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue.getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
895	[BUG]  [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);	  replace(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
896	[BUG]  [BUGGY]  replaceSeparator(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceSeparator(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceSeparator(NONEMPTY_OBJECT);	  replaceStart(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
897	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  Node>  value  =  getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
898	[BUG]  [BUGGY]  NeighborValue  <  N,>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,>  value  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,>  value  =  getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
899	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  STRICT_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  STRICT_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING,  STRICT_OBJECT);	  replaceTop(JsonWriter.NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
900	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  start  of  expression.   ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  start  of  expression.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  start  of  expression.   ");	  throw    new    IllegalStateException(   "Not    a    valid    start    of    expression.   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
901	[BUG]  [BUGGY]  convit(JsonWriter.class)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  convit(JsonWriter.class)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	convit(JsonWriter.class)  {  rehash();  }	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
902	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkNotNull(separator);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifier.checkNotNull(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifier.checkNotNull(separator);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
903	[BUG]  [BUGGY]  MutableMap.this.remove(start);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableMap.this.remove(start);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableMap.this.remove(start);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
904	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkNotNull(out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifier.checkNotNull(out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifier.checkNotNull(out);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
905	[BUG]  [BUGGY]  MutableMap.this.remove(separator);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableMap.this.remove(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableMap.this.remove(separator);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
906	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkNotNull(out);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkNotNull(out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkNotNull(out);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
907	[BUG]  [BUGGY]  removeChild(JsonNull.createJsonNull(),  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonNull.createJsonNull(),  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonNull.createJsonNull(),  out);	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
908	[BUG]  [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
909	[BUG]  [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
910	[BUG]  [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
911	[BUG]  [BUGGY]  MutableValueWrite.this.reportError( "Missing  argument: "  +  Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWrite.this.reportError( "Missing  argument: "  +  Feature.QUOTE_FIELD_NAMES);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWrite.this.reportError( "Missing  argument: "  +  Feature.QUOTE_FIELD_NAMES);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
912	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_OBJECT,  out);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
913	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_ELEMENT);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
914	[BUG]  [BUGGY]  replaceTop(NAME,  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NAME,  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NAME,  DANGLING_NAME);	  replaceTop(DANGLING_NAME,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
915	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  NONEMPTY_NAME);	  replaceTop(DANGLING_NAME,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
916	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME  +  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME  +  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME  +  1);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
917	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(this.value));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(this.value));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(this.value));	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
918	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(start));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(start));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(start));	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
919	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(out.toString()));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(out.toString()));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(out.toString()));	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
920	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(offset));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(offset));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(offset));	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
921	[BUG]  [BUGGY]  replaceNull(JsonNull.valueOf(last));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.valueOf(last));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.valueOf(last));	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
922	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out  =  getOutputValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME>  out  =  getOutputValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME>  out  =  getOutputValue();	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
923	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_STATEMENT  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_STATEMENT  +  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_STATEMENT  +  1);	  endValue(JsonWriter.DEFAULT_STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
924	[BUG]  [BUGGY]  startValue(JsonWriter.DEFAULT_STATEMENT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonWriter.DEFAULT_STATEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonWriter.DEFAULT_STATEMENT);	  endValue(JsonWriter.DEFAULT_STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
925	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_STATEMENT,  -1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_STATEMENT,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_STATEMENT,  -1);	  endValue(JsonWriter.DEFAULT_STATEMENT);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
926	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_NAME);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
927	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  -1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  -1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  -1);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
928	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_ELEMENT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_ELEMENT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TYPE,  DEFAULT_ELEMENT);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
929	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized.n ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized.n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  be  initialized.n ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
930	[BUG]  [BUGGY]  Negative  start  of  expression  must  be  initialized.   ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Negative  start  of  expression  must  be  initialized.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Negative  start  of  expression  must  be  initialized.   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
931	[BUG]  [BUGGY]  NonEscapedCharacterSeparatorChar.append( "' ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NonEscapedCharacterSeparatorChar.append( "' ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NonEscapedCharacterSeparatorChar.append( "' ");	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
932	[BUG]  [BUGGY]  NonEscapedCharacterSeparator.append( "n ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NonEscapedCharacterSeparator.append( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NonEscapedCharacterSeparator.append( "n ");	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
933	[BUG]  [BUGGY]  NonEscapedCharacterSeparator.append( "' ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NonEscapedCharacterSeparator.append( "' ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NonEscapedCharacterSeparator.append( "' ");	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
934	[BUG]  [BUGGY]  NonEscapedCharacterSeparatorChar.append('n');  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NonEscapedCharacterSeparatorChar.append('n');  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NonEscapedCharacterSeparatorChar.append('n');	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
935	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null.. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null.. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  should  not  be  null.. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
936	[BUG]  [BUGGY]  Annotation.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Annotation.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Annotation.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
937	[BUG]  [BUGGY]  Corrections.checkState(JsonNull.createJsonNull()  <  =  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Corrections.checkState(JsonNull.createJsonNull()  <  =  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Corrections.checkState(JsonNull.createJsonNull()  <  =  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
938	[BUG]  [BUGGY]  removeLastChild(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  removeLastChild(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeLastChild(JsonString.valueOf(separator));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
939	[BUG]  [BUGGY]  removeField(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  removeField(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeField(JsonString.valueOf(separator));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
940	[BUG]  [BUGGY]  removeDependency(JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  removeDependency(JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeDependency(JsonString.valueOf(separator));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
941	[BUG]  [BUGGY]  removeChild(JsonString.valueOf(name));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonString.valueOf(name));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonString.valueOf(name));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
942	[BUG]  [BUGGY]  removeDependency(JsonString.valueOf(definition));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  removeDependency(JsonString.valueOf(definition));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeDependency(JsonString.valueOf(definition));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
943	[BUG]  [BUGGY]  recalculateStartLocalSeparator();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  recalculateStartLocalSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStartLocalSeparator();	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
944	[BUG]  [BUGGY]  replace(JsonNull.valueOf(this.value));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(this.value));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(this.value));	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
945	[BUG]  [BUGGY]  replace(JsonNull.valueOf(separator)+  1);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(separator)+  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(separator)+  1);	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
946	[BUG]  [BUGGY]  recalculateLocalVariable();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  recalculateLocalVariable();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalVariable();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
947	[BUG]  [BUGGY]  recalculateLocalVariants();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  recalculateLocalVariants();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateLocalVariants();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
948	[BUG]  [BUGGY]  JosonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  JosonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JosonWriter.this.replaceChild(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
949	[BUG]  [BUGGY]  last  =  JsonNull.createJsonNull();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  last  =  JsonNull.createJsonNull();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	last  =  JsonNull.createJsonNull();	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
950	[BUG]  [BUGGY]  JosonWriter.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  JosonWriter.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JosonWriter.this.replace(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
951	[BUG]  [BUGGY]  JosonWriter.this.replaceChild(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JosonWriter.this.replaceChild(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JosonWriter.this.replaceChild(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
952	[BUG]  [BUGGY]  Replacements(out,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Replacements(out,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Replacements(out,  NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
953	[BUG]  [BUGGY]  safeReportError( "Nesting  problem: "+getMessage());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeReportError( "Nesting  problem: "+getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReportError( "Nesting  problem: "+getMessage());	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
954	[BUG]  [BUGGY]  safeReportError( "Nesting  problem. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeReportError( "Nesting  problem. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeReportError( "Nesting  problem. ");	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
955	[BUG]  [BUGGY]  parseNext(JsonNull.valueOf(null));  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  parseNext(JsonNull.valueOf(null));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseNext(JsonNull.valueOf(null));	  replaceNext(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
956	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);	  replaceNext(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
957	[BUG]  [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "______________________________________________________________________  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "______________________________________________________________________  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createChildObjectScope( "______________________________________________________________________	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
958	[BUG]  [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "_______________________________________________________________________  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "_______________________________________________________________________  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createChildObjectScope( "_______________________________________________________________________	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
959	[BUG]  [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "_____________________________________________________________________  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "_____________________________________________________________________  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createChildObjectScope( "_____________________________________________________________________	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
960	[BUG]  [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "____________________________________________________________________  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "____________________________________________________________________  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createChildObjectScope( "____________________________________________________________________	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
961	[BUG]  [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "________________________________________________________________________  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "________________________________________________________________________  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createChildObjectScope( "________________________________________________________________________	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
962	[BUG]  [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "___________________________________________________________________  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonScope.createChildObjectScope( "___________________________________________________________________  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonScope.createChildObjectScope( "___________________________________________________________________	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
963	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
964	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(value));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceNull(JsonNull.valueOf(value));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
965	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(value));  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(value));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceNull(JsonNull.valueOf(value));  }	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
966	[BUG]  [BUGGY]  _reportError( "msg.undef.start  of  expression: "+getMessage());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "msg.undef.start  of  expression: "+getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "msg.undef.start  of  expression: "+getMessage());	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
967	[BUG]  [BUGGY]  _reportError( "Nesting  problem: "+getMessage());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "Nesting  problem: "+getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "Nesting  problem: "+getMessage());	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
968	[BUG]  [BUGGY]  _reportError( "msg.undef.start-of-expression ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "msg.undef.start-of-expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "msg.undef.start-of-expression ");	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
969	[BUG]  [BUGGY]  Negative  start  of  expression  cannot  be  null.   ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Negative  start  of  expression  cannot  be  null.   ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Negative  start  of  expression  cannot  be  null.   ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
970	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  unidentifier> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  unidentifier> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  unidentifier> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
971	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  body> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  body> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  body> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
972	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  div> ");  replaceTop(jsonWriter);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  div> ");  replaceTop(jsonWriter);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  div> ");  replaceTop(jsonWriter);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
973	[BUG]  [BUGGY]  replace(null,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replace(null,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(null,  NONEMPTY_OBJECT);	  replace(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
974	[BUG]  [BUGGY]  replaceTop(NAME,  DONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NAME,  DONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NAME,  DONEMPTY_OBJECT);	  replaceTop(DANGLING_NAME,    DONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
975	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SIGNATURES  ||  value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SIGNATURES  ||  value  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  NullPointerException.UNKNOWN_SIGNATURES  ||  value  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
976	[BUG]  [BUGGY]  safeThan  <  JsonNull.UNKNOWN_SIZE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  JsonNull.UNKNOWN_SIZE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  JsonNull.UNKNOWN_SIZE)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
977	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SIGNATURES)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SIGNATURES)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  NullPointerException.UNKNOWN_SIGNATURES)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
978	[BUG]  [BUGGY]  safeThan  <  JsonNull.UNKNOWN_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  JsonNull.UNKNOWN_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  JsonNull.UNKNOWN_SYNTHETIC)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
979	[BUG]  [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SOURCE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  safeThan  <  NullPointerException.UNKNOWN_SOURCE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeThan  <  NullPointerException.UNKNOWN_SOURCE)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
980	[BUG]  [BUGGY]  startValue(JsonWriter.DEFAULT_TEXT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonWriter.DEFAULT_TEXT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonWriter.DEFAULT_TEXT);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
981	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  DEFAULT_SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  DEFAULT_SYNTHETIC);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
982	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_TEXT,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_TEXT,  DEFAULT_NAME);	  endValue(JsonWriter.DEFAULT_TEXT);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
983	[BUG]  [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.getValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N>  value  =  beforeValue.getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N>  value  =  beforeValue.getValue();	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
984	[BUG]  [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getAssignedValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  Node>  value  =  beforeValue.getAssignedValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  Node>  value  =  beforeValue.getAssignedValue();	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
985	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(null);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
986	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(JsonNull.createJsonNull());	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
987	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(SHORT_DESCRIPTOR);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(SHORT_DESCRIPTOR);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(SHORT_DESCRIPTOR);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
988	[BUG]  [BUGGY]  parent.replaceChild(null,  null);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  null);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
989	[BUG]  [BUGGY]  parent.replaceChild(out,  0);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(out,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(out,  0);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
990	[BUG]  [BUGGY]  replaceTop(DANGLING_NAME,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(DANGLING_NAME,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(DANGLING_NAME,  DEFAULT_NAME);	  replaceTop(DANGLING_NAME,    NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
991	[BUG]  [BUGGY]  intersect(NONEMPTY_OBJECT,  DEFAULT_SEPARATOR);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  intersect(NONEMPTY_OBJECT,  DEFAULT_SEPARATOR);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NONEMPTY_OBJECT,  DEFAULT_SEPARATOR);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
992	[BUG]  [BUGGY]  intersect(NONEMPTY_OBJECT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  intersect(NONEMPTY_OBJECT,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NONEMPTY_OBJECT,  DEFAULT_NAME);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
993	[BUG]  [BUGGY]  intersect(NONEMPTY_OBJECT,  null);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  intersect(NONEMPTY_OBJECT,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NONEMPTY_OBJECT,  null);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
994	[BUG]  [BUGGY]  intersect(NONEMPTY_OBJECT,  DEFAULT_THRESHOLD);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  intersect(NONEMPTY_OBJECT,  DEFAULT_THRESHOLD);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NONEMPTY_OBJECT,  DEFAULT_THRESHOLD);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
995	[BUG]  [BUGGY]  intersectTo(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  intersectTo(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersectTo(NONEMPTY_OBJECT);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
996	[BUG]  [BUGGY]  intersect(NONEMPTY_OBJECT,  0);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  intersect(NONEMPTY_OBJECT,  0);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NONEMPTY_OBJECT,  0);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
997	[BUG]  [BUGGY]  MutableValueWriter.this.reportError( "Missing  value  for  name: "  +  name);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriter.this.reportError( "Missing  value  for  name: "  +  name);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriter.this.reportError( "Missing  value  for  name: "  +  name);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
998	[BUG]  [BUGGY]  MutableValueWriter.this.reportError( "msg.undef.no.value ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriter.this.reportError( "msg.undef.no.value ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriter.this.reportError( "msg.undef.no.value ");	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
999	[BUG]  [BUGGY]  MutableValueWriter.this.reportError( "Missing  value: "  +  value);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriter.this.reportError( "Missing  value: "  +  value);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriter.this.reportError( "Missing  value: "  +  value);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1000	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(value!=  null);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(value!=  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(value!=  null);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1001	[BUG]  [BUGGY]  replaceTop(NONEMPTY_EXPR_RESULT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_EXPR_RESULT,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_EXPR_RESULT,  DEFAULT_NAME);	  replaceTop(NONEMPTY_EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
1002	[BUG]  [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(separator));  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(separator));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	read()  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(separator));  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1003	[BUG]  [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(separator);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(separator);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	read()  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(separator);  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1004	[BUG]  [BUGGY]  aught(1)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aught(1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	aught(1)  {  throw  new  IllegalStateException( " ");  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1005	[BUG]  [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equals(separator);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  read()  {  throw  new  IllegalStateException( " ".equals(separator);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	read()  {  throw  new  IllegalStateException( " ".equals(separator);  }	  if(start)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1006	[BUG]  [BUGGY]  replaceLeft(NON_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  replaceLeft(NON_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceLeft(NON_OBJECT);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1007	[BUG]  [BUGGY]  replaceTop(NON_OBJECT,  NONEMPTY_NAME);  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NON_OBJECT,  NONEMPTY_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NON_OBJECT,  NONEMPTY_NAME);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1008	[BUG]  [BUGGY]  replaceTop(NON_OBJECT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NON_OBJECT,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NON_OBJECT,  DEFAULT_NAME);	  replaceTop(NON_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1009	[BUG]  [BUGGY]  NeighborValue  <  N,  E>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  E>  value  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  E>  value  =  getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1010	[BUG]  [BUGGY]  RectangleEdge  edge  =  getValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge  edge  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge  edge  =  getValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1011	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(null);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  value  =  getValue(null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  End>  value  =  getValue(null);	  if(value    ==    null)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    return;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1012	[BUG]  [BUGGY]  safeMultiply(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	safeMultiply(this.beforeValue)  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1013	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  this.beforeValue  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  this.beforeValue  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  this.beforeValue  >  0)  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1014	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  this.beforeValue  >  0.0)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  this.beforeValue  >  0.0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  this.beforeValue  >  0.0)  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1015	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1016	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1017	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  throw  new  IllegalStateException( " ");  }	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1018	[BUG]  [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAME));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  NONEMPTY_OBJECT  ||  isEnabled(Feature.QUOTE_FIELD_NAME));	  if(this.beforeValue)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
1019	[BUG]  [BUGGY]  recalculateStdIdentifiers();  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  recalculateStdIdentifiers();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStdIdentifiers();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1020	[BUG]  [BUGGY]  recalculateStarts();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  recalculateStarts();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStarts();	  recalculateIdentifiers();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1021	[BUG]  [BUGGY]  if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1022	[BUG]  [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(separator);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1023	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1024	[BUG]  [BUGGY]  initValue(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  initValue(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	initValue(JsonNull.valueOf(null),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1025	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL,  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL,  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL,  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1026	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL,  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NULL,  null);	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1027	[BUG]  [BUGGY]  recalculateClassSeparator();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  recalculateClassSeparator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateClassSeparator();	  recalculateLocalSeparator();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
1028	[BUG]  [BUGGY]  if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  out);  }  else  {  break;  }	  replaceTop(JsonNull.createJsonNull(),    out);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1029	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1030	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator);	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1031	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name.append(separator);  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name.append(separator);  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME:  //  value  for  name.append(separator);  replaceTop(NONEMPTY_OBJECT);	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1032	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator).append( "n ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator).append( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator).append( "n ");	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1033	[BUG]  [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  MISSING_NAME:  //  value  for  name  out.append(separator)  {  rehash();  }	  if(value    ==    null)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1034	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression: "+getMessage());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression: "+getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.undef.start  of  expression: "+getMessage());	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1035	[BUG]  [BUGGY]  NeighborWriter.this.beforeValue( "start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValue( "start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValue( "start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1036	[BUG]  [BUGGY]  NeighborWriter.this.reportUnsupportedOperation();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportUnsupportedOperation();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportUnsupportedOperation();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1037	[BUG]  [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression: "  +  asPath());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.reportError( "msg.undef.start  of  expression: "  +  asPath());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.reportError( "msg.undef.start  of  expression: "  +  asPath());	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1038	[BUG]  [BUGGY]  NeighborUtil.throwInternal();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborUtil.throwInternal();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborUtil.throwInternal();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1039	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1040	[BUG]  [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1041	[BUG]  [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1042	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceNull(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1043	[BUG]  [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.NULL)  {  replaceNull(JsonNull.valueOf(separator));  }	  replaceNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1044	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_EXPECT);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_EXPECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_EXPECT);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1045	[BUG]  [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_SYNTHETIC);	  replace(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
1046	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  JsonString.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  JsonString.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  JsonString.valueOf(separator));	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    str);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1047	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1048	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1049	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1050	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcal();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcal();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcal();	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1051	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1052	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.println  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.println  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.println	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1053	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.endsWith(  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.endsWith(  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor  antrenor.endsWith(	  if(this.beforeValue)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1054	[BUG]  [BUGGY]  MutableToJsonStringMap.this.remove(separator);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableToJsonStringMap.this.remove(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJsonStringMap.this.remove(separator);	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1055	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue!=  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue!=  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(this.beforeValue!=  NONEMPTY_OBJECT);	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1056	[BUG]  [BUGGY]  NeighborValue.append(separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.append(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.append(separator);	  if(this.beforeValue)    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1057	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(getValue(),  DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(getValue(),  DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1058	[BUG]  [BUGGY]  parent.replaceChild(this,  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(this,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(this,  out);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1059	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_EMBEDDED_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_EMBEDDED_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_EMBEDDED_OBJECT);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1060	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_TITLE_FONT,  null);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_TITLE_FONT,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(getValue(),  JsonWriter.DEFAULT_TITLE_FONT,  null);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1061	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_TITLE_FONT,  out);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_TITLE_FONT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(getValue(),  JsonWriter.DEFAULT_TITLE_FONT,  out);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1062	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_EMPTY);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_EMPTY);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_EMPTY);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1063	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1064	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPR_RESULT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1065	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPECT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1066	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPECTED);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPECTED);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_EXPECTED);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1067	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1068	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1069	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  start  of  expression);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  start  of  expression);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  start  of  expression);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1070	[BUG]  [BUGGY]  endValue(JsonWriter.START_OBJECT,  str);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.START_OBJECT,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.START_OBJECT,  str);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1071	[BUG]  [BUGGY]  startValue(JsonWriter.START_OBJECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonWriter.START_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonWriter.START_OBJECT);	  endValue(JsonWriter.START_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
1072	[BUG]  [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "xmlns ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "xmlns ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonStringEncoder.getInstance().quoteAsString( "xmlns ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1073	[BUG]  [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "n ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonStringEncoder.getInstance().quoteAsString( "n ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1074	[BUG]  [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "jsonString ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "jsonString ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonStringEncoder.getInstance().quoteAsString( "jsonString ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1075	[BUG]  [BUGGY]  nisip  =  JsonStringEncoder.getInstance().encodeAsString( "xmlns ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonStringEncoder.getInstance().encodeAsString( "xmlns ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonStringEncoder.getInstance().encodeAsString( "xmlns ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1076	[BUG]  [BUGGY]  nisip  =  JsonStringEncoder.getInstance().encodeAsString( "JsonString ");  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonStringEncoder.getInstance().encodeAsString( "JsonString ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonStringEncoder.getInstance().encodeAsString( "JsonString ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1077	[BUG]  [BUGGY]  nisip  =  JsonStringEncoder.getInstance().encodeAsString( "n ");  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonStringEncoder.getInstance().encodeAsString( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonStringEncoder.getInstance().encodeAsString( "n ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1078	[BUG]  [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "JsonString ");  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  nisip  =  JsonStringEncoder.getInstance().quoteAsString( "JsonString ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	nisip  =  JsonStringEncoder.getInstance().quoteAsString( "JsonString ");	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1079	[BUG]  [BUGGY]  MutableState.checkNotNull(separator);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableState.checkNotNull(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableState.checkNotNull(separator);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1080	[BUG]  [BUGGY]  MutableState.checkState(separator  ==  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableState.checkState(separator  ==  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableState.checkState(separator  ==  null);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1081	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkNotNull(separator);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkNotNull(separator);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkNotNull(separator);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1082	[BUG]  [BUGGY]  NeighborValue  <  N,  End>  end  =  getValue();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  End>  end  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  End>  end  =  getValue();	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1083	[BUG]  [BUGGY]  MutableState.checkState(false, "Non-JavaObject ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableState.checkState(false, "Non-JavaObject ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableState.checkState(false, "Non-JavaObject ");	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1084	[BUG]  [BUGGY]  MutableState.checkState(separator!=  null);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableState.checkState(separator!=  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableState.checkState(separator!=  null);	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1085	[BUG]  [BUGGY]  MutableState.checkState(false, "Non-JavaScript  statement ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableState.checkState(false, "Non-JavaScript  statement ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableState.checkState(false, "Non-JavaScript  statement ");	  if(start)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
1086	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1087	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  }	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1088	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1089	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  break;  }	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1090	[BUG]  [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append( ", ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(start)  {  replaceTop(NONEMPTY_ARRAY);  }  else  {  out.append( ", ");  }	  replaceTop(NONEMPTY_ARRAY);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1091	[BUG]  [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  break;  }	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1092	[BUG]  [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  throw  new  JsonWriterException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  throw  new  JsonWriterException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(out!=  DANGLING_NAME)  {  replaceTop(DANGLING_NAME,  out);  }  else  {  throw  new  JsonWriterException( " ");  }	  replaceTop(DANGLING_NAME,    out);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1093	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1094	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1095	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1096	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1097	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_OBJECT);  break;  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_OBJECT);    break;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1098	[BUG]  [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  this);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.EXPR_RESULT,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.EXPR_RESULT,  this);	  endValue(JsonWriter.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1099	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  this);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  this);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1100	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  false);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  false);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE,  false);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_CLOSE_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1101	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1102	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceNull(JsonNull.valueOf(null));  }	  replaceNull(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1103	[BUG]  [BUGGY]  if(jsonWriter!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(jsonWriter!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1104	[BUG]  [BUGGY]  if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(this);  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(this);    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1105	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Not  a  valid  start  of  expression.  Please  check  that  the  value  does  not  exist. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Not  a  valid  start  of  expression.  Please  check  that  the  value  does  not  exist. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Not  a  valid  start  of  expression.  Please  check  that  the  value  does  not  exist. ");	  throw    new    IllegalStateException(   "Not    a    valid    start    of    expression.   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1106	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Not  a  valid  start  of  expression.  Please  check  that  the  name  is  null. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Not  a  valid  start  of  expression.  Please  check  that  the  name  is  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Not  a  valid  start  of  expression.  Please  check  that  the  name  is  null. ");	  throw    new    IllegalStateException(   "Not    a    valid    start    of    expression.   ");    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
1107	[BUG]  [BUGGY]  RectangleEdge  endRect  =  getEndRect();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge  endRect  =  getEndRect();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge  endRect  =  getEndRect();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1108	[BUG]  [BUGGY]  RectangleEdge  endPointer  =  getValuePointer();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge  endPointer  =  getValuePointer();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge  endPointer  =  getValuePointer();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1109	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_EXPR_RESULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_EXPR_RESULT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1110	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1111	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAME)  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1112	[BUG]  [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.beforeValueEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1113	[BUG]  [BUGGY]  rehashTable( "  <  NONEMPTY_OBJECT> ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  rehashTable( "  <  NONEMPTY_OBJECT> ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable( "  <  NONEMPTY_OBJECT> ");	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1114	[BUG]  [BUGGY]  rehashTable(JsonWriter.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  rehashTable(JsonWriter.DEFAULT_SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable(JsonWriter.DEFAULT_SYNTHETIC);	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1115	[BUG]  [BUGGY]  rehashTable(JsonWriter.WHOLE_COLLECTION);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  rehashTable(JsonWriter.WHOLE_COLLECTION);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	rehashTable(JsonWriter.WHOLE_COLLECTION);	  rehashTable();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
1116	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Must  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Must  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1117	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Should  be  in  the  range  [ "  +  getClass().getName()  + "] ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1118	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Must  be  in  the  range. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression.  Must  be  in  the  range. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression.  Must  be  in  the  range. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression.       ");    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1119	[BUG]  [BUGGY]  replaceValue(JsonWriter.NONEMPTY_EXPECT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonWriter.NONEMPTY_EXPECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonWriter.NONEMPTY_EXPECT);	  replaceValue(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1120	[BUG]  [BUGGY]  replaceRight(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceRight(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceRight(NONEMPTY_OBJECT);	  replaceStart(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1121	[BUG]  [BUGGY]  replaceStart(NONEMPTY_OBJECT,  1);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(NONEMPTY_OBJECT,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(NONEMPTY_OBJECT,  1);	  replaceStart(NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1122	[BUG]  [BUGGY]  startValue(JsonWriter.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  startValue(JsonWriter.DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	startValue(JsonWriter.DEFAULT_TYPE);	  endValue(JsonWriter.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1123	[BUG]  [BUGGY]  removeValue(DANGLING_NAME,  DONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  removeValue(DANGLING_NAME,  DONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(DANGLING_NAME,  DONEMPTY_OBJECT);	  replaceTop(DANGLING_NAME,    DONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1124	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1125	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1126	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1127	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1128	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1129	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1130	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  return;  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1131	[BUG]  [BUGGY]  replaceRight(JsonWriter.NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceRight(JsonWriter.NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceRight(JsonWriter.NONEMPTY_OBJECT);	  replaceLeft(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1132	[BUG]  [BUGGY]  replaceTop(JsonNull.createJsonNull(),  this);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.createJsonNull(),  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.createJsonNull(),  this);	  replaceTop(JsonNull.createJsonNull(),    beforeValue);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1133	[BUG]  [BUGGY]  removeChild(JsonNull.createJsonValue());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonNull.createJsonValue());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonNull.createJsonValue());	  removeChild(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1134	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getMessage());  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression: "  +  getMessage());	  throw    new    IllegalStateException(   "Negative    start    of    expression:   ");    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
1135	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  value. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalStateException( "Negative  value. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throwables.throw  new  IllegalStateException( "Negative  value. ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1136	[BUG]  [BUGGY]  NullPointerException.startValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.startValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.startValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1137	[BUG]  [BUGGY]  NullPointerException.from(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.from(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.from(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1138	[BUG]  [BUGGY]  NullPointerException.startValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.startValue(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.startValue(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1139	[BUG]  [BUGGY]  Annotation.getInstance().beforeValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  Annotation.getInstance().beforeValue(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Annotation.getInstance().beforeValue(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1140	[BUG]  [BUGGY]  NullPointerException.startValue(JsonNull.createJsonNull(),  JSON_NOT_IMPLEMENTED);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.startValue(JsonNull.createJsonNull(),  JSON_NOT_IMPLEMENTED);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.startValue(JsonNull.createJsonNull(),  JSON_NOT_IMPLEMENTED);	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1141	[BUG]  [BUGGY]  NullPointerException.from(separator,  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  NullPointerException.from(separator,  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NullPointerException.from(separator,  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1142	[BUG]  [BUGGY]  replaceStart(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(JsonNull.valueOf(separator));	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1143	[BUG]  [BUGGY]  replaceNext(JsonNull.parseJsonNull(separator));  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.parseJsonNull(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.parseJsonNull(separator));	  replaceNext(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1144	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1145	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1146	[BUG]  [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  rehashCode();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1147	[BUG]  [BUGGY]  Annotations.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Annotations.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Annotations.setValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1148	[BUG]  [BUGGY]  NeighborValue.beforeValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.beforeValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.beforeValue(JsonNull.createJsonNull(),  JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1149	[BUG]  [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  replaceTop(JsonNull.createJsonNull()));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  NeighborMap.this.replace(JsonNull.createJsonNull(),  replaceTop(JsonNull.createJsonNull()));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborMap.this.replace(JsonNull.createJsonNull(),  replaceTop(JsonNull.createJsonNull()));	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1150	[BUG]  [BUGGY]  NeighborValue.beforeValue(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue.beforeValue(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue.beforeValue(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1151	[BUG]  [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence  ==  null)  {  replaceTop(DANGLING_NAME);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence  ==  null)  {  replaceTop(DANGLING_NAME);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence  ==  null)  {  replaceTop(DANGLING_NAME);  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1152	[BUG]  [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence!=  null)  {  replaceTop(DANGLING_NAME);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence!=  null)  {  replaceTop(DANGLING_NAME);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence!=  null)  {  replaceTop(DANGLING_NAME);  }	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1153	[BUG]  [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence  ==  null)  {  replaceTop(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence  ==  null)  {  replaceTop(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence  ==  null)  {  replaceTop(DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1154	[BUG]  [BUGGY]  NeighborSeparator  <  NONEMPTY_EXPR_RESULT  |  NeighborSeparator  <  NONEMPTY_OBJECT;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborSeparator  <  NONEMPTY_EXPR_RESULT  |  NeighborSeparator  <  NONEMPTY_OBJECT;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborSeparator  <  NONEMPTY_EXPR_RESULT  |  NeighborSeparator  <  NONEMPTY_OBJECT;	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1155	[BUG]  [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence!=  null)  {  replaceTop(DANGLING_NAME);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence!=  null)  {  replaceTop(DANGLING_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborSequence  <  NONEMPTY_OBJECT  ||  fractionSequence!=  null)  {  replaceTop(DANGLING_NAME);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
1156	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	135	None	replace
1157	[BUG]  [BUGGY]  replaceTop(dANGLING_NAME,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(dANGLING_NAME,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(dANGLING_NAME,  NONEMPTY_OBJECT);	  replaceTop(NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1158	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  DEFAULT_NAME);	  replaceTop(NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1159	[BUG]  [BUGGY]  out.append( "n ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  out.append( "n ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	out.append( "n ");	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1160	[BUG]  [BUGGY]  parent.replaceChild(null,  parser);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  parser);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  parser);	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1161	[BUG]  [BUGGY]  parent.replaceChild(null,  '-');  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  '-');  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  '-');	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1162	[BUG]  [BUGGY]  parent.replaceChild(null,  '_');  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  '_');  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  '_');	  if(separator    ==    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1163	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1164	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1165	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1166	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonNull.valueOf(null),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonNull.valueOf(null),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonNull.valueOf(null),  JsonNull.NONE);	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1167	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.NONE);  }  else  {  return;  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.NONE);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1168	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.valueOf(null),    null);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1169	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  null);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.valueOf(null),    null);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1170	[BUG]  [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1171	[BUG]  [BUGGY]  if(this.beforeValue!=  null)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue!=  null)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue!=  null)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1172	[BUG]  [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1173	[BUG]  [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1174	[BUG]  [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  break;  }	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1175	[BUG]  [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(this.beforeValue));  }  else  {  return;  }	  replaceTop(JsonNull.valueOf(this.beforeValue));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1176	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1177	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1178	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  antrenor  antrenor  antrenor	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1179	[BUG]  [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcal  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcal  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarc  descarcal	  if(this.beforeValue)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1180	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  str);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_OBJECT,  DANGLING_NAME,  str);	  replaceTop(JsonWriter.NONEMPTY_OBJECT,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1181	[BUG]  [BUGGY]  replaceJsonNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceJsonNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceJsonNull(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);	  replaceJsonNull(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1182	[BUG]  [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME,  getSeparator());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  validateValue(Feature.QUOTE_FIELD_NAME,  getSeparator());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateValue(Feature.QUOTE_FIELD_NAME,  getSeparator());	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1183	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  SHORT_DESCRIPTOR);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  SHORT_DESCRIPTOR);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE,  SHORT_DESCRIPTOR);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SOURCE);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1184	[BUG]  [BUGGY]  NeighborValue  <  N,  H>  value  =  getValue();  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  H>  value  =  getValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  H>  value  =  getValue();	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1185	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  null;  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  null;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  value  =  null;	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1186	[BUG]  [BUGGY]  MutableValueMap.this.remove(value);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableValueMap.this.remove(value);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueMap.this.remove(value);	  if(value    ==    null)    {    rehash();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
1187	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	aughtException( "Non-separator  method  not  followed  by  a  null  value ");	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1188	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  value. ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  value. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	aughtException( "Non-separator  method  not  followed  by  a  value. ");	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1189	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value. ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	aughtException( "Non-separator  method  not  followed  by  a  numeric  value. ");	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1190	[BUG]  [BUGGY]  aughtException( "Non-Javadoc  not  a  valid  value. ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-Javadoc  not  a  valid  value. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	aughtException( "Non-Javadoc  not  a  valid  value. ");	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1191	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value ");  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  numeric  value ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	aughtException( "Non-separator  method  not  followed  by  a  numeric  value ");	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1192	[BUG]  [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value. ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  aughtException( "Non-separator  method  not  followed  by  a  null  value. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	aughtException( "Non-separator  method  not  followed  by  a  null  value. ");	  if(value    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1193	[BUG]  [BUGGY]  cope.validate(DANGLING_NAME,  out);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  cope.validate(DANGLING_NAME,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	cope.validate(DANGLING_NAME,  out);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1194	[BUG]  [BUGGY]  cope.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  cope.reportCodeChange();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	cope.reportCodeChange();	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
1195	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1196	[BUG]  [BUGGY]  if(value  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1197	[BUG]  [BUGGY]  if(separator  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1198	[BUG]  [BUGGY]  if(value  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  JsonNull.VALUE_NUMBER_FLOAT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1199	[BUG]  [BUGGY]  if(separator  ==  JsonNull.VALUE_NUMBER_INT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.VALUE_NUMBER_INT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.VALUE_NUMBER_INT)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NUMBER_FLOAT);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1200	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonNull.createJsonWriter());  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonNull.createJsonWriter());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(JsonNull.createJsonWriter());	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1201	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.TYPE_INT_ARRAY);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.TYPE_INT_ARRAY);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.TYPE_INT_ARRAY);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1202	[BUG]  [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.TYPE_ROOT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.TYPE_ROOT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter.this.beforeValue  =  new  JsonWriter(JsonWriter.TYPE_ROOT);	  JsonWriter.this.beforeValue    =    new    JsonWriter();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1203	[BUG]  [BUGGY]  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1204	[BUG]  [BUGGY]  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1205	[BUG]  [BUGGY]  ||  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  ||  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	||  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1206	[BUG]  [BUGGY]  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1207	[BUG]  [BUGGY]  ||  JsonNull.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  ||  JsonNull.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	||  JsonNull.createJsonNull()  {  replaceTop(JsonNull.createJsonNull());  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1208	[BUG]  [BUGGY]  ||  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  ||  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	||  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1209	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_SYNTHETIC,  DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_SYNTHETIC,  DEFAULT_NAME);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1210	[BUG]  [BUGGY]  append(JsonWriter.DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  append(JsonWriter.DEFAULT_SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	append(JsonWriter.DEFAULT_SYNTHETIC);	  endValue(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
1211	[BUG]  [BUGGY]  _reportError( "Current  problem: "+getMessage());  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  _reportError( "Current  problem: "+getMessage());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	_reportError( "Current  problem: "+getMessage());	  invalidate();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1212	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_COLLECTION);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_COLLECTION);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_COLLECTION);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1213	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_WARNING);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_WARNING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_WARNING);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1214	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_PREFIX);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_PREFIX);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_PREFIX);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1215	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC_ERROR);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC_ERROR);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC_ERROR);	  init();    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
1216	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1217	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1218	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1219	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1220	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( "n ");  }	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1221	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( "n ");  }	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1222	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( ", ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONMPTY_OBJECT);  }  else  {  out.append( ", ");  }	  replaceTop(NONMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1223	[BUG]  [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_PREFIX,  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_PREFIX,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(getValue(),  JsonWriter.DEFAULT_VALUE_PREFIX,  out);	  if(separator!=    null)    {    replaceTop(DANGLING_NAME);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1224	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1225	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1226	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1227	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1228	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1229	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1230	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_EXPR_OBJECT);  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_EXPR_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
1231	[BUG]  [BUGGY]  replaceNull(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNull(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNull(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);	  replaceNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1232	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1233	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1234	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1235	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1236	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1237	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1238	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_LIST);  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_LIST);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
1239	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter( "  <  identifier> ");	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(   "    <    identifier>   ");    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
1240	[BUG]  [BUGGY]  endValue(JsonWriter.DEFAULT_VALUE);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonWriter.DEFAULT_VALUE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonWriter.DEFAULT_VALUE);	  endValue(JsonWriter.DEFAULT_NAME);    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1241	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Please  check  that  the  value  is  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Please  check  that  the  value  is  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.  Please  check  that  the  value  is  null. ");	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1242	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Please  check  that  the  value  is  not  valid. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Please  check  that  the  value  is  not  valid. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.  Please  check  that  the  value  is  not  valid. ");	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1243	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Please  check  that  this  value  is  not  valid. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  value.  Please  check  that  this  value  is  not  valid. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  value.  Please  check  that  this  value  is  not  valid. ");	  throw    new    IllegalStateException(   "Nesting    value.       ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1244	[BUG]  [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(String.valueOf(separator));  replaceTop(jsonWriter);  }	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    replaceTop(jsonWriter);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1245	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1246	[BUG]  [BUGGY]  replace(JsonNull.createJsonNull(),  JsonNull.createJsonValue());  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.createJsonNull(),  JsonNull.createJsonValue());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.createJsonNull(),  JsonNull.createJsonValue());	  replace(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1247	[BUG]  [BUGGY]  append(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  append(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	append(JsonNull.createJsonNull());	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1248	[BUG]  [BUGGY]  endValue(JsonNull.createJsonNull(),  this);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonNull.createJsonNull(),  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonNull.createJsonNull(),  this);	  endValue(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1249	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceNext(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1250	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(null));  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(null));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(null));	  replaceNext(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1251	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(null),  JsonNull.NONE);	  replaceNext(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1252	[BUG]  [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.DEFAULT_VALUE);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonNull.valueOf(null),  JsonNull.DEFAULT_VALUE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonNull.valueOf(null),  JsonNull.DEFAULT_VALUE);	  replaceNext(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1253	[BUG]  [BUGGY]  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	IllegalStateException( "Negative  start  of  expression  should  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1254	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  not  be  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Negative  start  of  expression  must  not  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Negative  start  of  expression  must  not  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    should    not    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1255	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1256	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1257	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1258	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_STRING);  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_STRING);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_STRING);  }	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1259	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_STRING);  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1260	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  str);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  str);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1261	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  this);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  this);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1262	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC,  SYNTHETIC);	  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_SYNTHETIC);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1263	[BUG]  [BUGGY]  replaceStart(DANGLING_NAME,  1);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceStart(DANGLING_NAME,  1);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceStart(DANGLING_NAME,  1);	  replaceStart(DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1264	[BUG]  [BUGGY]  removeValue(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  removeValue(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeValue(JsonNull.valueOf(separator));	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1265	[BUG]  [BUGGY]  validateSeparator(JsonNull.valueOf(separator));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  validateSeparator(JsonNull.valueOf(separator));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validateSeparator(JsonNull.valueOf(separator));	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1266	[BUG]  [BUGGY]  replaceValue(JsonNull.valueOf(separator),  JsonNull.DEFAULT_VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  replaceValue(JsonNull.valueOf(separator),  JsonNull.DEFAULT_VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceValue(JsonNull.valueOf(separator),  JsonNull.DEFAULT_VALUE_NULL);	  replaceValue(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
1267	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1268	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifier.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifier.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1269	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "null  start  of  expression ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "null  start  of  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "null  start  of  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1270	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Non-standard  expression ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Non-standard  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Non-standard  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1271	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Non-standard  expression ");  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifier.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Non-standard  expression ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifier.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Non-standard  expression ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1272	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Not  an  NONEMPTY ");  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Not  an  NONEMPTY ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES), "Not  an  NONEMPTY ");	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1273	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME));	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
1274	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_EXPECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_EXPECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_EXPECT);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1275	[BUG]  [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_SYNTHETIC);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceNext(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_SYNTHETIC);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceNext(JsonWriter.NONEMPTY_OBJECT,  DEFAULT_SYNTHETIC);	  replaceNext(JsonWriter.NONEMPTY_OBJECT);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1276	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1277	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1278	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_OBJECT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1279	[BUG]  [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAME);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWrite.this.repeatEnabled(Feature.QUOTE_FIELD_NAME);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1280	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NoneMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NoneMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NoneMPTY_OBJECT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAME))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1281	[BUG]  [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonNull.createJsonNull(),  JsonToken.VALUE_NULL);	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1282	[BUG]  [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  null);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceWithNull(JsonNull.createJsonNull(),  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceWithNull(JsonNull.createJsonNull(),  null);	  replaceWithNull(JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1283	[BUG]  [BUGGY]  removeChild(JsonString.valueOf(separator),  JsonString.VALUE_EMBEDDED);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  removeChild(JsonString.valueOf(separator),  JsonString.VALUE_EMBEDDED);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeChild(JsonString.valueOf(separator),  JsonString.VALUE_EMBEDDED);	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1284	[BUG]  [BUGGY]  removeDependency(JsonString.valueOf(delimiter));  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  removeDependency(JsonString.valueOf(delimiter));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	removeDependency(JsonString.valueOf(delimiter));	  removeChild(JsonString.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
1285	[BUG]  [BUGGY]  intersect(NONEMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  intersect(NONEMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NONEMPTY_OBJECT,  out);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1286	[BUG]  [BUGGY]  intersect(NoneMPTY_OBJECT,  out);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  intersect(NoneMPTY_OBJECT,  out);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NoneMPTY_OBJECT,  out);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1287	[BUG]  [BUGGY]  intersect(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  intersect(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	intersect(NONEMPTY_OBJECT);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1288	[BUG]  [BUGGY]  NeighborValueWriter.this.beforeValue();  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  NeighborValueWriter.this.beforeValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValueWriter.this.beforeValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1289	[BUG]  [BUGGY]  MutableValueWriter.this.beforeValue();  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriter.this.beforeValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriter.this.beforeValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1290	[BUG]  [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue();  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborValue  <  N,  V>  value  =  beforeValue();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborValue  <  N,  V>  value  =  beforeValue();	  if(value    ==    null)    {    rehashCode();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1291	[BUG]  [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	JsonWriter  jsonWriter  =  JsonWriter.createJsonWriter(separator,  str);	  JsonWriter    jsonWriter    =    JsonWriter.createJsonWriter(String.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
1292	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  report  a  bug. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  report  a  bug. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  report  a  bug. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1293	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  null. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1294	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  not  valid. ");  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  not  valid. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  name  is  not  valid. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1295	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1. ");  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	throw  new  IllegalStateException( "Nesting  problem.  Please  check  that  the  value  is  less  than  1. ");	  throw    new    IllegalStateException(   "Nesting    problem.       ");    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1296	[BUG]  [BUGGY]  connectTo(JsonNull.valueOf(this));  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  connectTo(JsonNull.valueOf(this));  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	connectTo(JsonNull.valueOf(this));	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1297	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NON_NULL);  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NON_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(this),  JsonNull.VALUE_NON_NULL);	  replaceTop(JsonNull.valueOf(this));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1298	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue, "expected  initial  value ");  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifiers.checkState(this.beforeValue, "expected  initial  value ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifiers.checkState(this.beforeValue, "expected  initial  value ");	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1299	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkState(this.beforeValue, "expected  initial  value ");  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableToJavaIdentifier.checkState(this.beforeValue, "expected  initial  value ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableToJavaIdentifier.checkState(this.beforeValue, "expected  initial  value ");	  if(this.beforeValue)    {    rehashCode();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1300	[BUG]  [BUGGY]  recalculateStandardLocalMutator();  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  recalculateStandardLocalMutator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateStandardLocalMutator();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1301	[BUG]  [BUGGY]  recalculateUseMutator();  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  recalculateUseMutator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateUseMutator();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1302	[BUG]  [BUGGY]  recalculateClassMutator();  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  recalculateClassMutator();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	recalculateClassMutator();	  recalculateLocalMutator();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1303	[BUG]  [BUGGY]  parent.replaceChild(null,  getValue());  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  getValue());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  getValue());	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1304	[BUG]  [BUGGY]  cope().replaceChild(null,  null);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  cope().replaceChild(null,  null);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	cope().replaceChild(null,  null);	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1305	[BUG]  [BUGGY]  parent.replaceChild(null,  new  JsonWriter());  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  parent.replaceChild(null,  new  JsonWriter());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parent.replaceChild(null,  new  JsonWriter());	  if(separator!=    null)    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1306	[BUG]  [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1307	[BUG]  [BUGGY]  if(separator  ==  JsonNull.None.class)  {  replaceFieldName(JsonNull.valueOf(separator));  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.None.class)  {  replaceFieldName(JsonNull.valueOf(separator));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.None.class)  {  replaceFieldName(JsonNull.valueOf(separator));  }	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1308	[BUG]  [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1309	[BUG]  [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.NULL)  {  replaceFieldName(JsonNull.valueOf(separator));  }  else  {  replaceTop(NONEMPTY_OBJECT);  }	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1310	[BUG]  [BUGGY]  if(separator!=  JsonNull.None.class)  {  replaceFieldName(JsonNull.valueOf(separator));  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  JsonNull.None.class)  {  replaceFieldName(JsonNull.valueOf(separator));  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  JsonNull.None.class)  {  replaceFieldName(JsonNull.valueOf(separator));  }	  replaceFieldName(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1311	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1312	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1313	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()!=  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1314	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  <  =  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  <  =  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  <  =  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull());  }	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1315	[BUG]  [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJ  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJ  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull()!=  JsonNull.createJsonNull()  ||  JsonNull.createJsonNull()  ==  JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJ	  if(JsonNull.createJsonNull()!=    JsonNull.createJsonNull())    {    replaceTop(JsonNull.createJsonNull());    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1316	[BUG]  [BUGGY]  if(separator  ==  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1317	[BUG]  [BUGGY]  if(separator!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1318	[BUG]  [BUGGY]  if(value  ==  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  JsonNull.VALUE_NULL)  {  replaceTop(JsonNull.valueOf(separator),  JsonNull.VALUE_NULL);  }	  replaceTop(JsonNull.valueOf(separator),    JsonNull.VALUE_NULL);    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1319	[BUG]  [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NULL);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NULL);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.valueOf(0),  JsonNull.VALUE_NULL);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1320	[BUG]  [BUGGY]  replaceTop(JsonNull.ZERO);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonNull.ZERO);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonNull.ZERO);	  replaceTop(JsonNull.valueOf(0));    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1321	[BUG]  [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.DEFAULT_VALUE);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.DEFAULT_VALUE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(null),  JsonNull.DEFAULT_VALUE);	  replace(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1322	[BUG]  [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(null),  JsonNull.DEFAULT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(null),  JsonNull.DEFAULT);	  replace(JsonNull.valueOf(null));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1323	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAME))  {  replaceTop(NONEMPTY_ARRAY);  break;  }	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1324	[BUG]  [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_ARRAY);  break;  }	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1325	[BUG]  [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(separator  ==  null)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator  ==  null)  {  replaceTop(NONEMPTY_ARRAY);  break;  }	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1326	[BUG]  [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [CE]  illegal  start  of  expression  [FE]                                      NullPointerException      [CONTEXT]        [BUGGY]  if(separator!=  null)  {  replaceTop(NONEMPTY_ARRAY);  break;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(separator!=  null)  {  replaceTop(NONEMPTY_ARRAY);  break;  }	  replaceTop(NONEMPTY_ARRAY);    break;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1327	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1328	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1329	[BUG]  [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value  ==  null)  {  replaceTop(JsonNull.valueOf(null),  JsonNull.VALUE_NUMBER_INT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.valueOf(null),    JsonNull.VALUE_NUMBER_INT);    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1330	[BUG]  [BUGGY]  if(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value!=  null)  {  replaceTop(NONEMPTY_OBJECT);  }	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1331	[BUG]  [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1332	[BUG]  [BUGGY]  if(value!=  null)  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(value!=  null)  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(value!=  null)  {  rehash();  }	  if(value    ==    null)    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1333	[BUG]  [BUGGY]  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1334	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	Throw  new  IllegalStateException( "Negative  start  of  expression  cannot  be  null. ");	  throw    new    IllegalStateException(   "Negative    start    of    expression    cannot    be    null.   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1335	[BUG]  [BUGGY]  if(this.beforeValue!=  null)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue!=  null)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue!=  null)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1336	[BUG]  [BUGGY]  if(this.beforeValue  ==  null)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.beforeValue  ==  null)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.beforeValue  ==  null)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1337	[BUG]  [BUGGY]  RectangleEdge.this.beforeValue  =  Arrays.asList(this.beforeValue);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.beforeValue  =  Arrays.asList(this.beforeValue);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.beforeValue  =  Arrays.asList(this.beforeValue);	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1338	[BUG]  [BUGGY]  RectangleEdge.this.beforeValue  =  this.beforeValue;  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.beforeValue  =  this.beforeValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.beforeValue  =  this.beforeValue;	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1339	[BUG]  [BUGGY]  if(this.afterValue)  {  rehashCode();  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(this.afterValue)  {  rehashCode();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(this.afterValue)  {  rehashCode();  }	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1340	[BUG]  [BUGGY]  RectangleEdge.this.beforeValue  =  this.afterValue;  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  RectangleEdge.this.beforeValue  =  this.afterValue;  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	RectangleEdge.this.beforeValue  =  this.afterValue;	  if(this.beforeValue)    {    rehashCode();    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1341	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(separator),  JsonNull.VALUE_NUMBER_FLOAT);	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1342	[BUG]  [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replaceFirst(JsonNull.valueOf(separator),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceFirst(JsonNull.valueOf(separator),  JsonNull.NONE);	  replaceFirst(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1343	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1344	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1345	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  throw  new  IllegalStateException( " ");  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1346	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NONEMPTY_OBJECT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1347	[BUG]  [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NoneMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NoneMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	MutableValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))  {  replaceTop(NoneMPTY_OBJECT);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1348	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_TITLE_FONT);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonWriter.DEFAULT_TITLE_FONT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonWriter.DEFAULT_TITLE_FONT);	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1349	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(JsonNull.createJsonNull());  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  parseAndIgnoreWhitespace(JsonNull.createJsonNull());  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	parseAndIgnoreWhitespace(JsonNull.createJsonNull());	  startValue();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1350	[BUG]  [BUGGY]  replaceTop(NONEMPTY_OBJECT,  NONEMPTY_OBJECT);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(NONEMPTY_OBJECT,  NONEMPTY_OBJECT);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(NONEMPTY_OBJECT,  NONEMPTY_OBJECT);	  replaceTop(DANGLING_NAME,    DANGLING_NAME);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1351	[BUG]  [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.DEFAULT_VALUE);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.DEFAULT_VALUE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(separator),  JsonNull.DEFAULT_VALUE);	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1352	[BUG]  [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.NONE);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  replace(JsonNull.valueOf(separator),  JsonNull.NONE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replace(JsonNull.valueOf(separator),  JsonNull.NONE);	  replace(JsonNull.valueOf(separator));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
1353	[BUG]  [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1354	[BUG]  [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1355	[BUG]  [BUGGY]  if(isValidNumber())  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(isValidNumber())  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(isValidNumber())  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  IllegalStateException( " ");  }	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1356	[BUG]  [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1357	[BUG]  [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  JsonWriterException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  JsonWriterException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  throw  new  JsonWriterException( " ");  }	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1358	[BUG]  [BUGGY]  if(!isValidNumber())  {  replaceTop(NONEMPTY_ELEMENT);  }  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  if(!isValidNumber())  {  replaceTop(NONEMPTY_ELEMENT);  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(!isValidNumber())  {  replaceTop(NONEMPTY_ELEMENT);  }	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1359	[BUG]  [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  out.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]                                    NullPointerException      [CONTEXT]        [BUGGY]  if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  out.append( "n ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(jsonWriter!=  null)  {  replaceTop(NONEMPTY_ELEMENT);  }  else  {  out.append( "n ");  }	  replaceTop(NONEMPTY_ELEMENT);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1360	[BUG]  [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  this);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  replaceTop(JsonWriter.NONEMPTY_STRING,  this);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	replaceTop(JsonWriter.NONEMPTY_STRING,  this);	  replaceTop(JsonWriter.NONEMPTY_STRING);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1361	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  str))  {  rehash();  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  str))  {  rehash();  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  str))  {  rehash();  }	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1362	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  str))  {  rehash();  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  str))  {  rehash();  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  str))  {  rehash();	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1363	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  STRICT_WARNING);  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  STRICT_WARNING);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  STRICT_WARNING);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1364	[BUG]  [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  DEFAULT_THRESHOLD);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  DEFAULT_THRESHOLD);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	NeighborWriter.this.afterValueWriteEnabled(Feature.QUOTE_FIELD_NAMES,  DEFAULT_THRESHOLD);	  if(isValueWriteEnabled(Feature.QUOTE_FIELD_NAMES))    {    rehash();    }    else    {    replaceTop(NONEMPTY_OBJECT);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
1365	[BUG]  [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1366	[BUG]  [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  return;  }  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	if(JsonNull.createJsonNull())  {  replaceTop(JsonNull.createJsonNull(),  JsonNull.createJsonNull());  }  else  {  return;  }	  replaceTop(JsonNull.createJsonNull(),    JsonNull.createJsonNull());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
1367	[BUG]  [BUGGY]  append(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  append(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	append(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_TYPE);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1368	[BUG]  [BUGGY]  endValue(JsonNull.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  endValue(JsonNull.DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	endValue(JsonNull.DEFAULT_TYPE);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1369	[BUG]  [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_NAME);  [CE]  illegal  start  of  expression  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  repaint(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_NAME);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	repaint(JsonNull.DEFAULT_TYPE,  JsonNull.DEFAULT_NAME);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1370	[BUG]  [BUGGY]  validate(JsonNull.DEFAULT_TYPE);  [CE]  illegal  start  of  expression  [FE]                                  NullPointerException      [CONTEXT]        [BUGGY]  validate(JsonNull.DEFAULT_TYPE);  [BUGGY]      break;  case  DANGLING_NAME:  //  value  for  name  out.append(separator);  replaceTop(NONEMPTY_OBJECT);  break;  default:  throw  new  IllegalStateException(     "Nesting  problem.     ");  }  [CLASS]  JsonWriter  [METHOD]  beforeValue  [RETURN_TYPE]  void  	projects/Gson9/gson/src/main/java/com/google/gson/stream/JsonWriter.java	0.31622776601683794	638	638	1	replace	validate(JsonNull.DEFAULT_TYPE);	  repaint(JsonNull.DEFAULT_TYPE);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
